openapi: 3.0.1
info:
  title: TiDB Cloud API
  description: |
    *TiDB Cloud API is in beta.*

    # Overview

    The TiDB Cloud API is a [REST interface](https://en.wikipedia.org/wiki/Representational_state_transfer) that provides you with programmatic access to manage administrative objects within TiDB Cloud. Through this API, you can manage resources automatically and efficiently:

    * Projects
    * Clusters
    * Backups
    * Restores
    * Imports

    The API has the following features:

    - **JSON entities.** All entities are expressed in JSON.
    - **HTTPS-only.** You can only access the API via HTTPS, ensuring all the data sent over the network is encrypted with TLS.
    - **Key-based access and digest authentication.** Before you access TiDB Cloud API, you must generate an API key. All requests are authenticated through [HTTP Digest Authentication](https://en.wikipedia.org/wiki/Digest_access_authentication), ensuring the API key is never sent over the network.

    # Get Started

    This guide helps you make your first API call to TiDB Cloud API. You'll learn how to authenticate a request, build a request, and interpret the response. The [List all accessible projects](#tag/Project/operation/ListProjects) endpoint is used in this guide as an example.

    ## Prerequisites

    To complete this guide, you need to perform the following tasks:

    - Create a [TiDB Cloud account](https://tidbcloud.com/free-trial)
    - Install [curl](https://curl.se/)

    ## Step 1. Create an API key

    To create an API key, log in to your TiDB Cloud console. Navigate to the **Organization Settings** page, and create an API key.

    An API key contains a public key and a private key. Copy and save them in a secure location. You will need to use the API key later in this guide.

    For more details about creating API key, refer to [API Key Management](#section/Authentication/API-Key-Management).

    ## Step 2. Make your first API call

    ### Build an API call

    TiDB Cloud API call have the following components:

    - **A host.** The host for TiDB Cloud API is <https://api.tidbcloud.com>.
    - **An API Key**. The public key and the private key are required for authentication.
    - **A request.** When submitting data to a resource via `POST`, `PATCH`, or `PUT`, you must submit your payload in JSON.

    In this guide, you call the [List all accessible projects](#tag/Project/operation/ListProjects) endpoint. For the detailed description of the endpoint, see the [API reference](#tag/Project/operation/ListProjects).

    ### Call an API endpoint

    To get all projects in your organization, run the following command in your terminal. Remember to change `YOUR_PUBLIC_KEY` to your public key and `YOUR_PRIVATE_KEY` to your private key.

    ```shell
    curl --digest \
      --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
      --request GET \
      --url https://api.tidbcloud.com/api/v1beta/projects
    ```

    ## Step 3. Check the response

    After making the API call, if the status code in response is `200` and you see details about all the projects in your organization, your request is successful. Here is an example of a successful response.

    ```log
    {
      "items": [
        {
          "id": "{project_id}",
          "org_id": "{org_id}",
          "name": "MyProject",
          "cluster_count": 3,
          "user_count": 1,
          "create_timestamp": "1652407748"
        }
      ],
      "total": 1
    }
    ```

    If your API call is not successful, you will receive a status code other than `200` and the response looks similar to the following example. To troubleshoot the failed call, you can check the `message` in the response.

    ```log
    {
      "code": 49900001,
      "message": "public_key not found",
      "details": []
    }
    ```

    ## Code samples

    This section walks you through the quickest way to get started with TiDB Cloud API using programming languages. In these examples, you will learn how to use Python to create a cluster, backup and restore data, and scale out a cluster.

    You can view the [full code examples](https://github.com/tidbcloud/tidbcloud-api-samples) of Python and Golang on GitHub or clone the repository to your local machine.

    ```git
    git clone https://github.com/tidbcloud/tidbcloud-api-samples.git
    ```

    ### Create and connect to a TiDB cluster

    The following code examples show how to create a TiDB cluster and connect to the cluster. The whole process takes five steps:

    1. Get all projects.
    2. Get the cloud providers, regions and specifications.
    3. Create a cluster in your specified project.
    4. Get the new cluster information.
    5. Connect to the cluster using a MySQL client.

    #### Step 1: Get all projects

    Before you create a cluster, you need to get the ID of the project that you want to create a cluster in.

    To view the information of all available projects, you can use the [List all accessible projects](#tag/Project/operation/ListProjects) endpoint.

    ```python
    import requests
    from requests.auth import HTTPDigestAuth

    HOST = "https://api.tidbcloud.com"


    def get_all_projects(public_key: str, private_key: str) -> dict:
        """
        Get all projects
        :param public_key: Your public key
        :param private_key: Your private key
        :return: Projects detail
        """
        url = f"{HOST}/api/v1beta/projects"
        resp = requests.get(url=url, auth=HTTPDigestAuth(public_key, private_key))
        if resp.status_code != 200:
            print(f"request invalid, code : {resp.status_code}, message : {resp.text}")
            raise Exception(f"request invalid, code : {resp.status_code}, message : {resp.text}")
        return resp.json()


    if __name__ == "__main__":
        # Replace YOUR_PUBLIC_KEY and YOUR_PRIVATE_KEY
        project = get_all_projects("{YOUR_PUBLIC_KEY}", "{YOUR_PRIVATE_KEY}")
        print(project)
    ```

    For more details about the request and response, see [List all accessible projects](#tag/Project/operation/ListProjects).

    #### Step 2: Get the cloud providers, regions and specifications

    Before you create a cluster, you need to get the list of available cloud providers, regions, and specifications.

    ```python
    import requests
    from requests.auth import HTTPDigestAuth

    HOST = "https://api.tidbcloud.com"


    def get_provider_regions_specifications(public_key: str, private_key: str) -> dict:
        """
        Get cloud providers, regions and available specifications.
        :param public_key: Your public key
        :param private_key: Your private key
        :return: List the cloud providers, regions and available specifications.
        """
        url = f"{HOST}/api/v1beta/clusters/provider/regions"
        resp = requests.get(url=url, auth=HTTPDigestAuth(public_key, private_key))
        if resp.status_code != 200:
            print(f"request invalid, code : {resp.status_code}, message : {resp.text}")
            raise Exception(f"request invalid, code : {resp.status_code}, message : {resp.text}")
        return resp.json()


    if __name__ == "__main__":
        # Replace YOUR_PUBLIC_KEY and YOUR_PRIVATE_KEY
        provider_regions_specifications = get_provider_regions_specifications("{YOUR_PUBLIC_KEY}", "{YOUR_PRIVATE_KEY}")
        print(provider_regions_specifications)
    ```

    For more details about the request and response, see [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

    #### Step 3: Create a cluster in your specified project and cloud provider

    The following example uses the [Create a cluster](#tag/Cluster/operation/CreateCluster) endpoint to create a TiDB Dedicated cluster. A configuration example is provided in the code; you can replace the parameters using the information you get in the previous two steps.

    ```python
    import requests
    import time
    import json
    from requests.auth import HTTPDigestAuth

    HOST = "https://api.tidbcloud.com"


    def create_dedicated_cluster(public_key: str, private_key: str, project_id: str) -> dict:
        """
        Create a dedicated cluster in your specified project.
        `data_config` below is a demo. You should fill in the field according to
        your own situation
        :param public_key: Your public key
        :param private_key: Your private key
        :param project_id: The project id
        :return: Dedicated cluster id
        """
        url = f"{HOST}/api/v1beta/projects/{project_id}/clusters"
        ts = int(time.time())
        data_config = \
            {
                "name": f"tidbcloud-sample-{ts}",
                "cluster_type": "DEDICATED",
                "cloud_provider": "AWS",
                "region": "us-west-2",
                "config":
                    {
                        "root_password": "input_your_password",
                        "port": 4000,
                        "components":
                            {
                                "tidb":
                                    {
                                        "node_size": "8C16G",
                                        "node_quantity": 1
                                    },
                                "tikv":
                                    {"node_size": "8C32G",
                                     "storage_size_gib": 500,
                                     "node_quantity": 3
                                     }
                            },
                        "ip_access_list":
                            [
                                {
                                    "cidr": "0.0.0.0/0",
                                    "description": "Allow Access from Anywhere."
                                }
                            ]

                    }
            }
        data_config_json = json.dumps(data_config)
        resp = requests.post(url=url,
                             auth=HTTPDigestAuth(public_key, private_key),
                             data=data_config_json)
        if resp.status_code != 200:
            print(f"request invalid, code : {resp.status_code}, message : {resp.text}")
            raise Exception(f"request invalid, code : {resp.status_code}, message : {resp.text}")
        return resp.json()


    if __name__ == "__main__":
        # Replace YOUR_PUBLIC_KEY, YOUR_PRIVATE_KEY and YOUR_PROJECT_ID
        cluster = create_dedicated_cluster("{YOUR_PUBLIC_KEY}", "{YOUR_PRIVATE_KEY}", "{YOUR_PROJECT_ID}")
        print(cluster)
    ```

    This request returns the ID of the cluster that you just created. For more details about the request and response, see [Create a cluster](#tag/Cluster/operation/CreateCluster).

    #### Step 4: Get the new cluster information

    After you successfully create a cluster, you can use the [Get cluster by ID](#tag/Cluster/operation/GetCluster) endpoint to get the information of the cluster.

    ```python
    import requests
    from requests.auth import HTTPDigestAuth

    HOST = "https://api.tidbcloud.com"


    def get_cluster_by_id(public_key: str, private_key: str, project_id: str, cluster_id: str) -> dict:
        """
        Get the cluster detail.
        You will get `connection_strings` from the response after the cluster's status is`AVAILABLE`.
        Then, you can connect to TiDB using the default user, host, and port in `connection_strings`
        :param public_key: Your public key
        :param private_key: Your private key
        :param project_id: The project id
        :param cluster_id: The cluster id
        :return: The cluster detail
        """
        url = f"{HOST}/api/v1beta/projects/{project_id}/clusters/{cluster_id}"
        resp = requests.get(url=url,
                            auth=HTTPDigestAuth(public_key, private_key))
        if resp.status_code != 200:
            print(f"request invalid, code : {resp.status_code}, message : {resp.text}")
            raise Exception(f"request invalid, code : {resp.status_code}, message : {resp.text}")
        return resp.json()


    if __name__ == "__main__":
        # Replace YOUR_PUBLIC_KEY, YOUR_PRIVATE_KEY, YOUR_PROJECT_ID and YOUR_CLUSTER_ID
        cluster = get_cluster_by_id("{YOUR_PUBLIC_KEY}", "{YOUR_PRIVATE_KEY}", "{YOUR_PROJECT_ID}",
                                           "{YOUR_CLUSTER_ID}")
        print(cluster)
    ```

    In the response, you can see the `connection_strings` field, which will be used later for connecting to the TiDB cluster. However, if your cluster status is `CREATING`, the `connection_strings` field might be empty. In such cases, you need to wait a while until the cluster status becomes `AVAILABLE` so that you can move on to the next step.

    For more details about the request and response, see [Get a cluster by ID](#tag/Cluster/operation/GetCluster).

    #### Step 5: Connect to the cluster using a MySQL client

    After the cluster becomes `AVAILABLE`, you can get the connection strings. With the connection strings, you can connect to the cluster using a MySQL client.

    The connection strings contain three fields:

    - `default_user`, the username you use to connect to TiDB.
    - `standard` connection string. In this guide, you'll use the `standard` connection.
    - `vpc_peering` connection string.

    The `standard` connection string contains a `host` and a `port`. In the following command, replace `${default_user}` and `${host}` with the actual values in the connection strings. Run the command to connect to the TiDB cluster.

    ```shell
    mysql --connect-timeout 15 -u ${default_user} -h ${host} -P 4000 -D test -p
    ```

    For more details on connection, see [Connect to TiDB Cluster](https://docs.pingcap.com/tidbcloud/connect-to-tidb-cluster).

    ### Manage backups for your clusters

    The following example shows how to create a manual backup and restore the last backup data to a new cluster.

    #### Step 1: Create a manual backup

    To create a manual backup, you can use the [Create a backup for a cluster](#tag/Backup/operation/CreateBackup) endpoint.

    ```python
    import requests
    import json
    import datetime
    from requests.auth import HTTPDigestAuth

    HOST = "https://api.tidbcloud.com"


    def create_manual_backup(public_key: str, private_key: str, project_id: str, cluster_id: str) -> dict:
        """
        Create manual backup
        `data_for_backup` below is a demo. You should fill in the field according to
        your own situation
        :param public_key: Your public key
        :param private_key: Your private key
        :param project_id: The project id
        :param cluster_id: The dedicated cluster id
        :return: The backup id
        """
        url = f"{HOST}/api/v1beta/projects/{project_id}/clusters/{cluster_id}/backups"
        cur_date = datetime.datetime.now().strftime("%Y-%m-%d")
        data_for_backup = {"name": f"tidbcloud-backup-{cur_date}", "description": f"tidbcloud-backup-{cur_date}"}
        data_for_backup_json = json.dumps(data_for_backup)
        resp = requests.post(url=url,
                             data=data_for_backup_json,
                             auth=HTTPDigestAuth(public_key, private_key))
        if resp.status_code != 200:
            print(f"request invalid, code : {resp.status_code}, message : {resp.text}")
            raise Exception(f"request invalid, code : {resp.status_code}, message : {resp.text}")
        return resp.json()


    if __name__ == "__main__":
        # Replace YOUR_PUBLIC_KEY, YOUR_PRIVATE_KEY, YOUR_PROJECT_ID and YOUR_CLUSTER_ID
        backup = create_manual_backup("{YOUR_PUBLIC_KEY}", "{YOUR_PRIVATE_KEY}", "{YOUR_PROJECT_ID}",
                                      "{YOUR_CLUSTER_ID}")
        print(backup)
    ```

    #### Step 2: Restore the last backup data to a new cluster

    To restore the last backup data to a new cluster, you can use the [Create a restore task](#tag/Restore/operation/CreateRestoreTask) endpoint.

    ```python
    import requests
    import json
    import datetime
    from requests.auth import HTTPDigestAuth

    HOST = "https://api.tidbcloud.com"


    def create_restore_task(public_key: str, private_key: str, project_id: str, back_up_id: str) -> dict:
        """
        Create restore task
        `data_for_restore` below is a demo. You should fill in the field according to
        your own situation
        :param private_key: Your public key
        :param public_key: Your private key
        :param project_id: The project id
        :param back_up_id: The backup id
        :return: The restore task id
        """
        url = f"{HOST}/api/v1beta/projects/{project_id}/restores"
        cur_date = datetime.datetime.now().strftime("%Y-%m-%d")
        data_for_restore = \
            {
                "backup_id": f"{back_up_id}",
                "name": f"tidbcloud-restore-{cur_date}",
                "config":
                    {
                        "root_password": "input_your_password",
                        "port": 4000,
                        "components":
                            {
                                "tidb":
                                    {
                                        "node_size": "8C16G",
                                        "node_quantity": 1
                                    },
                                "tikv":
                                    {
                                        "node_size": "8C32G",
                                        "storage_size_gib": 500,
                                        "node_quantity": 3
                                    }
                            },
                        "ip_access_list":
                            [
                                {
                                    "cidr": "0.0.0.0/0",
                                    "description": "Allow Access from Anywhere."
                                }
                            ]

                    }
            }
        data_for_restore_json = json.dumps(data_for_restore)
        resp = requests.post(url=url,
                             auth=HTTPDigestAuth(public_key, private_key),
                             data=data_for_restore_json)
        if resp.status_code != 200:
            print(f"request invalid, code : {resp.status_code}, message : {resp.text}")
            raise Exception(f"request invalid, code : {resp.status_code}, message : {resp.text}")
        return resp.json()


    if __name__ == "__main__":
        # Replace YOUR_PUBLIC_KEY, YOUR_PRIVATE_KEY, YOUR_PROJECT_ID and YOUR_BACKUP_ID
        restore = create_restore_task("{YOUR_PUBLIC_KEY}", "{YOUR_PRIVATE_KEY}", "{YOUR_PROJECT_ID}",
                                      "{YOUR_BACKUP_ID}")
        print(restore)
    ```

    #### Step 3: Get the restored cluster information

    To get the information of the restored cluster, you can use the [Get a cluster by ID](#tag/Cluster/operation/GetCluster) endpoint.

    ```python
    import requests
    from requests.auth import HTTPDigestAuth

    HOST = "https://api.tidbcloud.com"


    def get_cluster_by_id(public_key: str, private_key: str, project_id: str, cluster_id: str) -> dict:
        """
        Get the cluster detail.
        You will get `connection_strings` from the response after the cluster's status is`AVAILABLE`.
        Then, you can connect to TiDB using the default user, host, and port in `connection_strings`
        :param public_key: Your public key
        :param private_key: Your private key
        :param project_id: The project id
        :param cluster_id: The cluster id
        :return: The cluster detail
        """
        url = f"{HOST}/api/v1beta/projects/{project_id}/clusters/{cluster_id}"
        resp = requests.get(url=url,
                            auth=HTTPDigestAuth(public_key, private_key))
        if resp.status_code != 200:
            print(f"request invalid, code : {resp.status_code}, message : {resp.text}")
            raise Exception(f"request invalid, code : {resp.status_code}, message : {resp.text}")
        return resp.json()


    if __name__ == "__main__":
        # Replace YOUR_PUBLIC_KEY, YOUR_PRIVATE_KEY, YOUR_PROJECT_ID and YOUR_CLUSTER_ID
        cluster = get_cluster_by_id("{YOUR_PUBLIC_KEY}", "{YOUR_PRIVATE_KEY}", "{YOUR_PROJECT_ID}",
                                           "{YOUR_CLUSTER_ID}")
        print(cluster)
    ```

    ### Scale out one TiFlash node for an existing cluster

    The following example shows how to scale out one TiFlash node for an existing cluster.

    #### Step 1: Add one TiFlash node for the specified cluster

    To add a TiFlash node for the TiDB Dedicated cluster, you can use the [Modify a TiDB Dedicated cluster](#tag/Cluster/operation/UpdateCluster) endpoint.

    ```python
    import requests
    import json
    from requests.auth import HTTPDigestAuth

    HOST = "https://api.tidbcloud.com"


    def modify_cluster(public_key: str, private_key: str, project_id: str, cluster_id: str, tiflash_num: int) -> dict:
        """
        Add one TiFlash node for specified cluster
        If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
        `data_add_tiflash` below is a demo. You should fill in the field according to
        your own situation
        :param public_key: Your public key
        :param private_key: Your private key
        :param project_id: The project id
        :param cluster_id: The cluster id
        :param tiflash_num: The tiflash num
        :return: If success, return None. Else, return message
        """
        url = f"{HOST}/api/v1beta/projects/{project_id}/clusters/{cluster_id}"
        data_add_tiflash = \
            {
                "config":
                    {
                        "components":
                            {
                                "tidb":
                                    {
                                        "node_quantity": 1
                                    },
                                "tikv":
                                    {
                                        "node_quantity": 3
                                    },
                                "tiflash":
                                    {
                                        "node_quantity": f"{tiflash_num}",
                                        "node_size": "8C64G",
                                        "storage_size_gib": 500
                                    }
                            }
                    }
            }
        data_add_tiflash_json = json.dumps(data_add_tiflash)
        resp = requests.patch(url=url,
                              auth=HTTPDigestAuth(public_key, private_key),
                              data=data_add_tiflash_json)
        if resp.status_code != 200:
            print(f"request invalid, code : {resp.status_code}, message : {resp.text}")
            raise Exception(f"request invalid, code : {resp.status_code}, message : {resp.text}")
        return resp.json()


    if __name__ == "__main__":
        # Replace YOUR_PUBLIC_KEY, YOUR_PRIVATE_KEY, YOUR_PROJECT_ID, YOUR_CLUSTER_ID and MODIFY_TIFLASH_NUM
        modify_cluster("{YOUR_PUBLIC_KEY}", "{YOUR_PRIVATE_KEY}", "{YOUR_PROJECT_ID}",
                       "{YOUR_CLUSTER_ID}", "{MODIFY_TIFLASH_NUM}")
    ```

    #### Step 2: View the scale-out progress

    To view the scale-out progress, you can use the [Get a cluster by ID](#tag/Cluster/operation/GetCluster) endpoint.

    ```python
    import requests
    from requests.auth import HTTPDigestAuth

    HOST = "https://api.tidbcloud.com"


    def get_cluster_by_id(public_key: str, private_key: str, project_id: str, cluster_id: str) -> dict:
        """
        Get the cluster detail.
        You will get `connection_strings` from the response after the cluster's status is`AVAILABLE`.
        Then, you can connect to TiDB using the default user, host, and port in `connection_strings`
        :param public_key: Your public key
        :param private_key: Your private key
        :param project_id: The project id
        :param cluster_id: The cluster id
        :return: The cluster detail
        """
        url = f"{HOST}/api/v1beta/projects/{project_id}/clusters/{cluster_id}"
        resp = requests.get(url=url,
                            auth=HTTPDigestAuth(public_key, private_key))
        if resp.status_code != 200:
            print(f"request invalid, code : {resp.status_code}, message : {resp.text}")
            raise Exception(f"request invalid, code : {resp.status_code}, message : {resp.text}")
        return resp.json()


    if __name__ == "__main__":
        # Replace YOUR_PUBLIC_KEY, YOUR_PRIVATE_KEY, YOUR_PROJECT_ID and YOUR_CLUSTER_ID
        cluster = get_cluster_by_id("{YOUR_PUBLIC_KEY}", "{YOUR_PRIVATE_KEY}", "{YOUR_PROJECT_ID}",
                                           "{YOUR_CLUSTER_ID}")
        print(cluster)
    ```

    # Authentication

    The TiDB Cloud API uses [HTTP Digest Authentication](https://en.wikipedia.org/wiki/Digest_access_authentication). It protects your private key from being sent over the network. For more details about HTTP Digest Authentication, refer to the [IETF RFC](https://datatracker.ietf.org/doc/html/rfc7616).

    ## API key overview

    - The API key contains a public key and a private key, which act as the username and password required in the HTTP Digest Authentication. The private key only displays upon the key creation.
    - The API key belongs to your organization and acts as the `Owner` role. You can check [permissions of owner](https://docs.pingcap.com/tidbcloud/manage-user-access#configure-member-roles).
    - You must provide the correct API key in every request. Otherwise, the TiDB Cloud responds with a `401` error.

    ## API key management

    ### Create an API key

    Only the **owner** of an organization can create an API key.

    To create an API key in an organization, perform the following steps:

    1. Click <svg width="16" height="16" viewBox="0 -2 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M13 11H17.8C18.9201 11 19.4802 11 19.908 11.218C20.2843 11.4097 20.5903 11.7157 20.782 12.092C21 12.5198 21 13.0799 21 14.2V21M13 21V6.2C13 5.0799 13 4.51984 12.782 4.09202C12.5903 3.71569 12.2843 3.40973 11.908 3.21799C11.4802 3 10.9201 3 9.8 3H6.2C5.0799 3 4.51984 3 4.09202 3.21799C3.71569 3.40973 3.40973 3.71569 3.21799 4.09202C3 4.51984 3 5.0799 3 6.2V21M22 21H2M6.5 7H9.5M6.5 11H9.5M6.5 15H9.5" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg> **Organization** in the lower-left corner of the TiDB Cloud console.
    2. Click **Organization Settings**. The organization settings page is displayed.
    3. Click the **API Keys** tab and then click **Create API Key**.
    4. Enter a description for your API key. The role of the API key is always `Owner` currently.
    5. Click **Next**. Copy and save the public key and the private key.
    6. Make sure that you have copied and saved the private key in a secure location. The private key only displays upon the creation. After leaving this page, you will not be able to get the full private key again.
    7. Click **Done**.

    ### View details of an API key

    To view details of an API key, perform the following steps:

    1. Click <svg width="16" height="16" viewBox="0 -2 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M13 11H17.8C18.9201 11 19.4802 11 19.908 11.218C20.2843 11.4097 20.5903 11.7157 20.782 12.092C21 12.5198 21 13.0799 21 14.2V21M13 21V6.2C13 5.0799 13 4.51984 12.782 4.09202C12.5903 3.71569 12.2843 3.40973 11.908 3.21799C11.4802 3 10.9201 3 9.8 3H6.2C5.0799 3 4.51984 3 4.09202 3.21799C3.71569 3.40973 3.40973 3.71569 3.21799 4.09202C3 4.51984 3 5.0799 3 6.2V21M22 21H2M6.5 7H9.5M6.5 11H9.5M6.5 15H9.5" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg> **Organization** in the upper-right corner of the TiDB Cloud console.
    2. Click **Organization Settings**. The organization settings page is displayed.
    3. Click the **API Keys** tab.
    4. You can view the details of the API keys in the menu.

    ### Edit an API key

    Only the **owner** of an organization can modify an API key.

    To edit an API key in an organization, perform the following steps:

    1. Click <svg width="16" height="16" viewBox="0 -2 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M13 11H17.8C18.9201 11 19.4802 11 19.908 11.218C20.2843 11.4097 20.5903 11.7157 20.782 12.092C21 12.5198 21 13.0799 21 14.2V21M13 21V6.2C13 5.0799 13 4.51984 12.782 4.09202C12.5903 3.71569 12.2843 3.40973 11.908 3.21799C11.4802 3 10.9201 3 9.8 3H6.2C5.0799 3 4.51984 3 4.09202 3.21799C3.71569 3.40973 3.40973 3.71569 3.21799 4.09202C3 4.51984 3 5.0799 3 6.2V21M22 21H2M6.5 7H9.5M6.5 11H9.5M6.5 15H9.5" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg> **Organization** in the upper-right corner of the TiDB Cloud console.
    2. Click **Organization Settings**. The organization settings page is displayed.
    3. Click the **API Keys** tab.
    4. Click **Edit** in the API key row that you want to change.
    4. You can update the API key description.
    5. Click **Done**.

    ### Delete an API key

    Only the **owner** of an organization can delete an API key.

    To delete an API key in an organization, perform the following steps:

    1. Click <svg width="16" height="16" viewBox="0 -2 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M13 11H17.8C18.9201 11 19.4802 11 19.908 11.218C20.2843 11.4097 20.5903 11.7157 20.782 12.092C21 12.5198 21 13.0799 21 14.2V21M13 21V6.2C13 5.0799 13 4.51984 12.782 4.09202C12.5903 3.71569 12.2843 3.40973 11.908 3.21799C11.4802 3 10.9201 3 9.8 3H6.2C5.0799 3 4.51984 3 4.09202 3.21799C3.71569 3.40973 3.40973 3.71569 3.21799 4.09202C3 4.51984 3 5.0799 3 6.2V21M22 21H2M6.5 7H9.5M6.5 11H9.5M6.5 15H9.5" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg> **Organization** in the upper-right corner of the TiDB Cloud console.
    2. Click **Organization Settings**. The organization settings page is displayed.
    3. Click the **API Keys** tab.
    4. Click **Delete** in the API key row that you want to delete.
    5. Click **I understand the consequences, delete this API Key.**

    # Rate Limiting

    The TiDB Cloud API allows up to 100 requests per minute per API key. If you exceed the rate limit, the API returns a `429` error. For more quota, you can [submit a request](https://support.pingcap.com/hc/en-us/requests/new?ticket_form_id=7800003722519) to contact our support team.

    Each API request returns the following headers about the limit.

    - `X-Ratelimit-Limit-Minute`: The number of requests allowed per minute. It is 100 currently.
    - `X-Ratelimit-Remaining-Minute`: The number of remaining requests in the current minute. When it reaches `0`, the API returns a `429` error and indicates that you exceed the rate limit.
    - `X-Ratelimit-Reset`: The time in seconds at which the current rate limit resets.

    If you exceed the rate limit, an error response returns like this.

    ```
    > HTTP/2 429
    > date: Fri, 22 Jul 2022 05:28:37 GMT
    > content-type: application/json
    > content-length: 66
    > x-ratelimit-reset: 23
    > x-ratelimit-remaining-minute: 0
    > x-ratelimit-limit-minute: 100
    > x-kong-response-latency: 2
    > server: kong/2.8.1

    > {"details":[],"code":49900007,"message":"The request exceeded the limit of 100 times per apikey per minute. For more quota, please contact us: https://support.pingcap.com/hc/en-us/requests/new?ticket_form_id=7800003722519"}
    ```

    # API Changelog

    This changelog lists all changes to the TiDB Cloud API.

    <!-- In reverse chronological order -->

    ## 20230905

    - Add six new endpoints for managing the private endpoint service and private endpoints:

        - [Create a private endpoint service for a cluster](#tag/Cluster/operation/CreatePrivateEndpointService)
        - [Retrieve the private endpoint service information for a cluster](#tag/Cluster/operation/GetPrivateEndpointService)
        - [Create a private endpoint for a cluster](#tag/Cluster/operation/CreatePrivateEndpoint)
        - [List all private endpoints for a cluster](#tag/Cluster/operation/ListPrivateEndpoints)
        - [List all private endpoints in a project](#tag/Cluster/operation/ListPrivateEndpointsOfProject)
        - [Delete a private endpoint for a cluster](#tag/Cluster/operation/DeletePrivateEndpoint)

    ## 20230801

    - Add one cluster status: `"PAUSING"`.

    ## 20230602

    - Rename the two tier options as follows:

        - "Serverless Tier" is renamed to "TiDB Serverless".
        - "Dedicated Tier" is renamed to "TiDB Dedicated".

    ## 20230328

    - Add three new endpoints:

        - [Create a project](#tag/Project/operation/CreateProject)
        - [List AWS Customer-Managed Encryption Keys for a project](#tag/Cluster/operation/ListAwsCmek)
        - [Configure AWS Customer-Managed Encryption Keys for a project](#tag/Cluster/operation/CreateAwsCmek)

    ## 20230321

    - Update three fields of the [Modify a Dedicated Tier cluster](#tag/Cluster/operation/UpdateCluster) endpoint. These fields now support decreasing the size of TiDB, TiKV, or TiFlash nodes.

        - `config.components.tidb.node_size`
        - `config.components.tikv.node_size`
        - `config.components.tiflash.node_size`

    ## 20230228

    - Add the `imports` resource, including the following endpoints:

        - [List all import tasks for a cluster](#tag/Import/operation/ListImportTasks)
        - [Get an import task](#tag/Import/operation/GetImportTask)
        - [Create an import task](#tag/Import/operation/CreateImportTask)
        - [Update an import task](#tag/Import/operation/UpdateImportTask)
        - [Upload a local file for an import task](#tag/Import/operation/UploadLocalFile)
        - [Preview data before starting an import task](#tag/Import/operation/PreviewImportData)
        - [Retrieve the role information for import tasks on a cluster](#tag/Import/operation/GetImportTaskRoleInfo)

    ## 20230214

    - Update two fields of the [Modify a Dedicated Tier cluster](#tag/Cluster/operation/UpdateCluster) endpoint. These fields now support decreasing TiKV or TiFlash nodes.

        - `config.components.tikv.node_quantity`
        - `config.components.tiflash.node_quantity`

    ## 20230104

    - Add three fields to the [Modify a Dedicated Tier cluster](#tag/Cluster/operation/UpdateCluster) endpoint. These fields support scaling up node sizes, but not scaling down.

        - `config.components.tidb.node_size`
        - `config.components.tikv.node_size`
        - `config.components.tiflash.node_size`

    ## 20221028

    - [Developer Tier is upgraded to Serverless Tier](https://docs.pingcap.com/tidbcloud/release-notes-2022#october-28-2022). Serverless Tier is still in beta and free to use.

        [Creating a cluster](#tag/Cluster/operation/CreateCluster) with the `cluster_type` field set to `DEVELOPER` creates a Serverless Tier cluster now.

    ## 20220920

    - The API is now in public beta and available to all users.

    ## 20220906

    - Add a `config.components.tikv.storage_size_gib` field to the [Modify a Dedicated Tier cluster](#tag/Cluster/operation/UpdateCluster) endpoint.
    - Modify the `config.components.tikv.node_quantity` and `config.components.tiflash.node_quantity` fields from `required` to `optional` for the [Modify a Dedicated Tier cluster](#tag/Cluster/operation/UpdateCluster) endpoint.
    - Remove the "Can not modify `storage_size_gib` of an existing cluster" limitation of the `config.components.tiflash.storage_size_gib` field for the [Create a cluster](#tag/Cluster/operation/CreateCluster) and [Modify a Dedicated Tier cluster](#tag/Cluster/operation/UpdateCluster) endpoints.

    ## 20220823

    - Add a `config.paused` field to the [Modify a Dedicated Tier cluster](#tag/Cluster/operation/UpdateCluster) endpoint.
    - Add two cluster statuses: `"IMPORTING"` and `"UNAVAILABLE"`.

    ## 20220809

    - Initial release of the TiDB Cloud API (v1beta) in private beta, including the following resources and endpoints:

        - Project:

            - [List all accessible projects](#tag/Project/operation/ListProjects)

        - Cluster:
            - [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions)
            - [List all clusters in a project](/#tag/Cluster/operation/ListClustersOfProject)
            - [Create a cluster](#tag/Cluster/operation/CreateCluster)
            - [Get a cluster by ID](#tag/Cluster/operation/GetCluster)
            - [Delete a cluster](#tag/Cluster/operation/DeleteCluster)
            - [Modify a Dedicated Tier cluster](#tag/Cluster/operation/UpdateCluster)
        - Backup:
            - [List all backups for a cluster](#tag/Backup/operation/ListBackUpOfCluster)
            - [Create a backup for a cluster](#tag/Backup/operation/CreateBackup)
            - [Get a backup for a cluster](#tag/Backup/operation/GetBackupOfCluster)
            - [Delete a backup for a cluster](#tag/Backup/operation/DeleteBackup)
        - Restore:
            - [List the restore tasks in a project](#tag/Restore/operation/ListRestoreTasks)
            - [Create a restore task](#tag/Restore/operation/CreateRestoreTask)
            - [Get a restore task](#tag/Restore/operation/GetRestoreTask)
  version: v1-beta
  x-logo:
    url: https://download.pingcap.com/tidbcloud-logo-for-api-docs.png
    altText: TiDB Cloud Logo
    href: https://docs.pingcap.com/tidbcloud/
servers:
- url: https://api.tidbcloud.com/
tags:
- name: Project
  description: List projects.
- name: Cluster
  description: "Create, get, modify, and delete TiDB clusters."
- name: Backup
  description: |-
    Create, get, modify, and delete backups for TiDB clusters.

    For TiDB Serverless clusters, you cannot create or manage backups via API. You can use [Dumpling](https://docs.pingcap.com/tidb/stable/dumpling-overview) to export your data as backups.
- name: Import
  description: "Create, get, update import tasks for TiDB clusters."
- name: Restore
  description: |-
    Get and create restore tasks for TiDB clusters. You can only restore data to a new cluster.

    For more information on restoration on TiDB Cloud, refer to [Restore](https://docs.pingcap.com/tidbcloud/backup-and-restore#restore).

    For TiDB Serverless clusters, you cannot manage restore tasks via API.
paths:
  /api/v1beta/clusters/provider/regions:
    get:
      tags:
      - Cluster
      summary: "List the cloud providers, regions and available specifications."
      operationId: ListProviderRegions
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                title: GetProviderRegionsResp
                type: object
                properties:
                  items:
                    type: array
                    description: Items of provider regions.
                    example:
                    - cluster_type: DEDICATED
                      cloud_provider: AWS
                      region: us-west-2
                      tidb:
                      - node_size: 8C16G
                        node_quantity_range:
                          min: 1
                          step: 1
                      tikv:
                      - node_size: 8C32G
                        node_quantity_range:
                          min: 3
                          step: 3
                        storage_size_gib_range:
                          min: 500
                          max: 4096
                      tiflash:
                      - node_size: 8C64G
                        node_quantity_range:
                          min: 0
                          step: 1
                        storage_size_gib_range:
                          min: 500
                          max: 2048
                    - cluster_type: DEVELOPER
                      cloud_provider: AWS
                      region: us-west-2
                      tidb:
                      - node_size: Shared0
                        node_quantity_range:
                          min: 1
                          step: 1
                      tikv:
                      - node_size: Shared0
                        node_quantity_range:
                          min: 1
                          step: 1
                        storage_size_gib_range:
                          min: 1
                          max: 1
                      tiflash:
                      - node_size: Shared0
                        node_quantity_range:
                          min: 1
                          step: 1
                        storage_size_gib_range:
                          min: 1
                          max: 1
                    items:
                      title: ListProviderRegionsItem
                      type: object
                      properties:
                        cluster_type:
                          type: string
                          description: |-
                            The cluster type.
                            - `"DEVELOPER"`: a [TiDB Serverless](https://docs.pingcap.com/tidbcloud/select-cluster-tier#tidb-serverless) cluster
                            - `"DEDICATED"`: a [TiDB Dedicated](https://docs.pingcap.com/tidbcloud/select-cluster-tier#dedicated-tier) cluster

                            **Warning:** `"DEVELOPER"` will soon be changed to `"SERVERLESS"` to represent TiDB Serverless clusters.
                          format: enum
                          example: DEDICATED
                          enum:
                          - DEDICATED
                          - DEVELOPER
                        cloud_provider:
                          type: string
                          description: |-
                            The cloud provider on which your TiDB cluster is hosted.
                            - `"AWS"`: the Amazon Web Services cloud provider
                            - `"GCP"`: the Google Cloud cloud provider
                          format: string
                          example: AWS
                          enum:
                          - AWS
                          - GCP
                        region:
                          type: string
                          description: |-
                            The region in which your TiDB cluster is hosted.

                            For the detailed information on each region, refer to the documentation of the corresponding cloud provider ([AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) | [GCP](https://cloud.google.com/about/locations#americas)).

                            For example, `"us-west-2"` refers to Oregon for AWS.
                          example: us-west-2
                        tidb:
                          type: array
                          description: The list of TiDB specifications in the region.
                          items:
                            type: object
                            properties:
                              node_size:
                                type: string
                                description: The size of the TiDB component in the
                                  cluster.
                                example: 8C16G
                              node_quantity_range:
                                type: object
                                properties:
                                  min:
                                    type: integer
                                    description: The minimum node quantity of the
                                      component in the cluster.
                                    format: int32
                                  step:
                                    type: integer
                                    description: The step of node quantity of the
                                      component in the cluster.
                                    format: int32
                                description: The range and step of node quantity of
                                  the TiDB component in the cluster.
                        tikv:
                          type: array
                          description: The list of TiKV specifications in the region.
                          items:
                            type: object
                            properties:
                              node_size:
                                type: string
                                description: The size of the TiKV component in the
                                  cluster.
                                example: 8C32G
                              node_quantity_range:
                                type: object
                                properties:
                                  min:
                                    type: integer
                                    description: The minimum node quantity of the
                                      component in the cluster.
                                    format: int32
                                  step:
                                    type: integer
                                    description: The step of node quantity of the
                                      component in the cluster.
                                    format: int32
                                description: The range and step of node quantity of
                                  the TiKV component in the cluster.
                              storage_size_gib_range:
                                type: object
                                properties:
                                  min:
                                    type: integer
                                    description: The minimum storage size for each
                                      node of the component in the cluster.
                                    format: int32
                                  max:
                                    type: integer
                                    description: The maximum storage size for each
                                      node of the component in the cluster.
                                    format: int32
                                description: The storage size range for each node
                                  of the TiKV component in the cluster.
                        tiflash:
                          type: array
                          description: The list of TiFlash specifications in the region.
                          items:
                            type: object
                            properties:
                              node_size:
                                type: string
                                description: The size of the TiFlash component in
                                  the cluster.
                                example: 8C64G
                              node_quantity_range:
                                type: object
                                properties:
                                  min:
                                    type: integer
                                    description: The minimum node quantity of the
                                      component in the cluster.
                                    format: int32
                                  step:
                                    type: integer
                                    description: The step of node quantity of the
                                      component in the cluster.
                                    format: int32
                                description: The range and step of node quantity of
                                  the TiFlash component in the cluster.
                              storage_size_gib_range:
                                type: object
                                properties:
                                  min:
                                    type: integer
                                    description: The minimum storage size for each
                                      node of the component in the cluster.
                                    format: int32
                                  max:
                                    type: integer
                                    description: The maximum storage size for each
                                      node of the component in the cluster.
                                    format: int32
                                description: The storage size range for each node
                                  of the TiFlash component in the cluster.
                      description: ListProviderRegionsItem is the item of provider
                        regions.
                description: GetProviderRegionsResp is the response for getting provider
                  regions.
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request GET \
            --url https://api.tidbcloud.com/api/v1beta/clusters/provider/regions
  /api/v1beta/projects:
    get:
      tags:
      - Project
      summary: List all accessible projects.
      operationId: ListProjects
      parameters:
      - name: page
        in: query
        description: The number of pages.
        schema:
          type: integer
          format: int64
          default: 1
      - name: page_size
        in: query
        description: The size of a page.
        schema:
          type: integer
          format: int64
          default: 10
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                title: GetProjectsResp
                required:
                - items
                - total
                type: object
                properties:
                  items:
                    type: array
                    description: The items of accessible projects.
                    items:
                      title: ListProjectItem
                      type: object
                      properties:
                        id:
                          type: string
                          description: The ID of the project.
                          format: uint64
                          example: "1"
                        org_id:
                          type: string
                          description: The ID of the TiDB Cloud organization to which
                            the project belongs.
                          format: uint64
                          example: "1"
                        name:
                          type: string
                          description: The name of the project.
                          example: default_project
                        cluster_count:
                          type: integer
                          description: The number of TiDB Cloud clusters deployed
                            in the project.
                          format: int64
                          example: 4
                        user_count:
                          type: integer
                          description: The number of users in the project.
                          format: int64
                          example: 10
                        create_timestamp:
                          type: string
                          description: The creation time of the cluster in Unix timestamp
                            seconds (epoch time).
                          format: timestamp
                          example: "1656991448"
                        aws_cmek_enabled:
                          type: boolean
                          description: |-
                            Flag that indicates whether to enable AWS Customer-Managed Encryption Keys (CMEK). For more information, see [Encryption at Rest using CMEK](https://docs.pingcap.com/tidbcloud/tidb-cloud-encrypt-cmek).

                            **Note:** Currently, this feature is only available upon request. If you need to try out this feature, contact [support](https://docs.pingcap.com/tidbcloud/tidb-cloud-support).
                          example: false
                          default: false
                      description: ListProjectItem is the item of projects.
                  total:
                    type: integer
                    description: The total number of accessible projects.
                    format: int64
                    example: 1
                description: GetProjectsResp is the response for getting accessible
                  projects.
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request GET \
            --url 'https://api.tidbcloud.com/api/v1beta/projects?page=1&page_size=10'
    post:
      tags:
      - Project
      summary: Create a project.
      operationId: CreateProject
      requestBody:
        description: CreateProjectReq is the request for creating project.
        content:
          application/json:
            schema:
              title: CreateProjectReq
              required:
              - name
              type: object
              properties:
                name:
                  type: string
                  description: The name of the project.
                  example: Project0
                aws_cmek_enabled:
                  type: boolean
                  description: |-
                    Flag that indicates whether to enable AWS Customer-Managed Encryption Keys.

                    Currently this feature is only available upon request. If you need to try out this feature, contact [support](https://docs.pingcap.com/tidbcloud/tidb-cloud-support).
                  example: false
                  default: false
              description: CreateProjectReq is the request for creating project.
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                title: CreateProjectResp
                required:
                - id
                type: object
                properties:
                  id:
                    type: string
                    description: The ID of the project.
                    format: uint64
                    example: "1"
                description: CreateProjectResp is the response for creating project.
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request POST \
            --url https://api.tidbcloud.com/api/v1beta/projects \
            --header 'content-type: application/json' \
            --data '{"name":"Project0","aws_cmek_enabled":false}'
      x-codegen-request-body-name: body
  /api/v1beta/projects/{project_id}/aws-cmek:
    get:
      tags:
      - Cluster
      summary: List AWS Customer-Managed Encryption Keys for a project.
      description: |-
        Customer-Managed Encryption Keys (CMEK) lets you protect your static data in a TiDB Dedicated cluster using a cryptographic key that is completely controlled by you. To create a project with CMEK enabled, use the [Create a project](#tag/Project/operation/CreateProject) endpoint and configure `aws_cmek_enabled` to `true`.

        For more information, see [Encryption at Rest using CMEK](https://docs.pingcap.com/tidbcloud/tidb-cloud-encrypt-cmek).
      operationId: ListAwsCmek
      parameters:
      - name: project_id
        in: path
        description: "The ID of the project. You can get the project ID from the response\
          \ of [List all accessible projects](#tag/Project/operation/ListProjects)."
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                title: ListAwsCmekResp
                type: object
                properties:
                  items:
                    type: array
                    description: The specifications of the AWS CMEK.
                    items:
                      title: AwsCmekSpec
                      required:
                      - kms_arn
                      - region
                      type: object
                      properties:
                        region:
                          type: string
                          description: |-
                            The region name of the AWS CMEK. The region value should match the cloud provider's region code.

                            You can get the complete list of available regions from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                            For the detailed information on each region, refer to the documentation of the [AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) cloud provider.
                          example: us-west-2
                        kms_arn:
                          type: string
                          description: The KMS ARN of the AWS CMEK.
                          example: arn:aws:kms:example
                      description: AwsCmekSpec is the specification of the AWS CMEK.
                description: ListAwsCmekResp is the response for getting AWS Customer-Managed
                  Encryption Keys for a project.
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request GET \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/aws-cmek
    post:
      tags:
      - Cluster
      summary: Configure AWS Customer-Managed Encryption Keys for a project.
      description: |-
        Before using this API, make sure that the `aws_cmek_enabled` field is set to `true` when creating the project using the [Create a Project](#tag/Project/operation/CreateProject) endpoint. For more information, see [Encryption at Rest using CMEK](https://docs.pingcap.com/tidbcloud/tidb-cloud-encrypt-cmek).

        Currently, this feature is only available upon request. If you need to try out this feature, contact [support](https://docs.pingcap.com/tidbcloud/tidb-cloud-support).
      operationId: CreateAwsCmek
      parameters:
      - name: project_id
        in: path
        description: "The ID of the project. You can get the project ID from the response\
          \ of [List all accessible projects](#tag/Project/operation/ListProjects)."
        required: true
        schema:
          type: string
          format: uint64
      requestBody:
        content:
          application/json:
            schema:
              title: CreateAwsCmekReq
              required:
              - specs
              type: object
              properties:
                specs:
                  type: array
                  description: |-
                    The specification of the AWS CMEK. You can configure multiple AWS CMEKs.

                    For a particular project, CMEK can only be configured for one AWS region. Once configured, you cannot create clusters in other regions in the same project.
                  items:
                    title: AwsCmekSpec
                    required:
                    - kms_arn
                    - region
                    type: object
                    properties:
                      region:
                        type: string
                        description: |-
                          The region name of the AWS CMEK. The region value should match the cloud provider's region code.

                          You can get the complete list of available regions from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                          For the detailed information on each region, refer to the documentation of the [AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) cloud provider.
                        example: us-west-2
                      kms_arn:
                        type: string
                        description: The KMS ARN of the AWS CMEK.
                        example: arn:aws:kms:example
                    description: AwsCmekSpec is the specification of the AWS CMEK.
              description: CreateAwsCmekReq is the request for configuring AWS Customer-Managed
                Encryption Keys for a project.
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request POST \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/aws-cmek \
            --header 'content-type: application/json' \
            --data '{"specs":[{"region":"us-west-2","kms_arn":"arn:aws:kms:example"}]}'
      x-codegen-request-body-name: body
  /api/v1beta/projects/{project_id}/clusters:
    get:
      tags:
      - Cluster
      summary: List all clusters in a project.
      operationId: ListClustersOfProject
      parameters:
      - name: project_id
        in: path
        description: "The ID of the project. You can get the project ID from the response\
          \ of [List all accessible projects](#tag/Project/operation/ListProjects)."
        required: true
        schema:
          type: string
          format: uint64
      - name: page
        in: query
        description: The number of pages.
        schema:
          type: integer
          format: int64
          default: 1
      - name: page_size
        in: query
        description: The size of a page.
        schema:
          type: integer
          format: int64
          default: 10
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                title: GetClustersOfProjectResp
                required:
                - items
                - total
                type: object
                properties:
                  items:
                    type: array
                    description: The items of clusters in the project.
                    items:
                      title: ClusterItem
                      required:
                      - id
                      - project_id
                      type: object
                      properties:
                        id:
                          type: string
                          description: The ID of the cluster.
                          format: uint64
                          example: "1"
                        project_id:
                          type: string
                          description: The ID of the project.
                          format: uint64
                          example: "1"
                        name:
                          pattern: "^[A-Za-z0-9][-A-Za-z0-9]{2,62}[A-Za-z0-9]$"
                          type: string
                          description: The name of the cluster.
                          example: Cluster0
                        cluster_type:
                          type: string
                          description: |-
                            The cluster type:
                            - `"DEVELOPER"`: a [TiDB Serverless](https://docs.pingcap.com/tidbcloud/select-cluster-tier#tidb-serverless) cluster
                            - `"DEDICATED"`: a [TiDB Dedicated](https://docs.pingcap.com/tidbcloud/select-cluster-tier#dedicated-tier) cluster

                            **Warning:** `"DEVELOPER"` will soon be changed to `"SERVERLESS"` to represent TiDB Serverless clusters.
                          format: enum
                          example: DEDICATED
                          enum:
                          - DEDICATED
                          - DEVELOPER
                        cloud_provider:
                          type: string
                          description: |-
                            The cloud provider on which your TiDB cluster is hosted.
                            - `"AWS"`: the Amazon Web Services cloud provider
                            - `"GCP"`: the Google Cloud cloud provider
                          format: string
                          example: AWS
                          enum:
                          - AWS
                          - GCP
                        region:
                          type: string
                          description: Region of the cluster.
                          example: us-west-2
                        create_timestamp:
                          type: string
                          description: The creation time of the cluster in Unix timestamp
                            seconds (epoch time).
                          format: timestamp
                          example: "1656991448"
                        config:
                          type: object
                          properties:
                            port:
                              maximum: 65535
                              minimum: 1024
                              type: integer
                              description: The TiDB port for connection. The port
                                must be in the range of 1024-65535 except 10080.
                              format: int32
                              example: 4000
                              default: 4000
                            components:
                              required:
                              - tidb
                              - tikv
                              type: object
                              properties:
                                tidb:
                                  required:
                                  - node_quantity
                                  - node_size
                                  type: object
                                  properties:
                                    node_size:
                                      type: string
                                      description: |-
                                        The size of the TiDB component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                        **Additional combination rules**:
                                        - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                                        - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
                                      example: 8C16G
                                    node_quantity:
                                      type: integer
                                      description: |
                                        The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                                      format: int32
                                      example: 2
                                  description: The TiDB component of the cluster.
                                tikv:
                                  required:
                                  - node_quantity
                                  - node_size
                                  - storage_size_gib
                                  type: object
                                  properties:
                                    node_size:
                                      type: string
                                      description: |-
                                        The size of the TiKV component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                        **Additional combination rules**:
                                        - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                                        - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
                                      example: 8C64G
                                    storage_size_gib:
                                      type: integer
                                      description: "The storage size of a node in\
                                        \ the cluster. You can get the minimum and\
                                        \ maximum of storage size from the response\
                                        \ of [List the cloud providers, regions and\
                                        \ available specifications](#tag/Cluster/operation/ListProviderRegions)."
                                      format: int32
                                      example: 1024
                                    node_quantity:
                                      type: integer
                                      description: |-
                                        The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                        **Limitations**:
                                        - The `node_quantity` of TiKV must be a multiple of 3.
                                      format: int32
                                      example: 3
                                  description: The TiKV component of the cluster.
                                tiflash:
                                  required:
                                  - node_quantity
                                  - node_size
                                  - storage_size_gib
                                  type: object
                                  properties:
                                    node_size:
                                      type: string
                                      description: |-
                                        The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                        **Additional combination rules**:
                                        - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                                        - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
                                      example: 8C64G
                                    storage_size_gib:
                                      type: integer
                                      description: |
                                        The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                                      format: int32
                                      example: 1024
                                    node_quantity:
                                      type: integer
                                      description: "The number of nodes in the cluster.\
                                        \ You can get the minimum and step of a node\
                                        \ quantity from the response of [List the\
                                        \ cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions)."
                                      format: int32
                                      example: 1
                                  description: The TiFlash component of the cluster.
                              description: The components of the cluster.
                              example:
                                tidb:
                                  node_size: 8C16G
                                  node_quantity: 2
                                tikv:
                                  node_size: 8C32G
                                  storage_size_gib: 1024
                                  node_quantity: 3
                          description: The configuration of the cluster.
                          example:
                            port: 4000
                            components:
                              tidb:
                                node_size: 8C16G
                                node_quantity: 2
                              tikv:
                                node_size: 8C32G
                                storage_size_gib: 1024
                                node_quantity: 3
                        status:
                          title: ClusterItemStatus
                          type: object
                          properties:
                            tidb_version:
                              type: string
                              description: TiDB version.
                              example: v6.1.0
                            cluster_status:
                              type: string
                              description: Status of the cluster.
                              format: enum
                              example: AVAILABLE
                              enum:
                              - AVAILABLE
                              - CREATING
                              - MODIFYING
                              - PAUSED
                              - RESUMING
                              - UNAVAILABLE
                              - IMPORTING
                              - MAINTAINING
                              - PAUSING
                            node_map:
                              required:
                              - tidb
                              - tikv
                              type: object
                              properties:
                                tidb:
                                  type: array
                                  description: TiDB node map.
                                  example:
                                  - node_name: tidb-0
                                    availability_zone: us-west-2a
                                    node_size: 8C16G
                                    vcpu_num: 8
                                    ram_bytes: "17179869184"
                                    status: NODE_STATUS_AVAILABLE
                                  - node_name: tidb-1
                                    availability_zone: us-west-2b
                                    node_size: 8C16G
                                    vcpu_num: 8
                                    ram_bytes: "17179869184"
                                    status: NODE_STATUS_AVAILABLE
                                  items:
                                    type: object
                                    properties:
                                      node_name:
                                        type: string
                                        description: The name of a node in the cluster.
                                        example: tidb-0
                                      availability_zone:
                                        type: string
                                        description: The availability zone of a node
                                          in the cluster.
                                        example: us-west-2a
                                      node_size:
                                        type: string
                                        description: The size of the TiDB component
                                          in the cluster.
                                        example: 8C16G
                                      vcpu_num:
                                        type: integer
                                        description: "The total vCPUs of a node in\
                                          \ the cluster. If the `cluster_type` is\
                                          \ `\"DEVELOPER\"`, `vcpu_num` is always\
                                          \ 0."
                                        format: int32
                                        example: 8
                                      ram_bytes:
                                        type: string
                                        description: "The RAM size of a node in the\
                                          \ cluster. If the `cluster_type` is `\"\
                                          DEVELOPER\"`, `ram_bytes` is always 0."
                                        format: int64
                                        example: "17179869184"
                                      status:
                                        type: string
                                        description: The status of a node in the cluster.
                                        example: NODE_STATUS_AVAILABLE
                                        enum:
                                        - NODE_STATUS_AVAILABLE
                                        - NODE_STATUS_UNAVAILABLE
                                        - NODE_STATUS_CREATING
                                        - NODE_STATUS_DELETING
                                tikv:
                                  type: array
                                  description: TiKV node map.
                                  example:
                                  - node_name: tikv-0
                                    availability_zone: us-west-2a
                                    node_size: 8C32G
                                    vcpu_num: 8
                                    ram_bytes: "68719476736"
                                    storage_size_gib: 1024
                                    status: NODE_STATUS_AVAILABLE
                                  - node_name: tikv-1
                                    availability_zone: us-west-2b
                                    node_size: 8C64G
                                    vcpu_num: 8
                                    ram_bytes: "68719476736"
                                    storage_size_gib: 1024
                                    status: NODE_STATUS_AVAILABLE
                                  - node_name: tikv-2
                                    availability_zone: us-west-2c
                                    node_size: 8C64G
                                    vcpu_num: 8
                                    ram_bytes: "68719476736"
                                    storage_size_gib: 1024
                                    status: NODE_STATUS_AVAILABLE
                                  items:
                                    type: object
                                    properties:
                                      node_name:
                                        type: string
                                        description: The name of a node in the cluster.
                                        example: tikv-0
                                      availability_zone:
                                        type: string
                                        description: The availability zone of a node
                                          in the cluster.
                                        example: us-west-2a
                                      node_size:
                                        type: string
                                        description: The size of the TiKV component
                                          in the cluster.
                                        example: 8C32G
                                      vcpu_num:
                                        type: integer
                                        description: "The total vCPUs of a node in\
                                          \ the cluster. If the `cluster_type` is\
                                          \ `\"DEVELOPER\"`, `vcpu_num` is always\
                                          \ 0."
                                        format: int32
                                        example: 8
                                      ram_bytes:
                                        type: string
                                        description: "The RAM size of a node in the\
                                          \ cluster. If the `cluster_type` is `\"\
                                          DEVELOPER\"`, `ram_bytes` is always 0."
                                        format: int64
                                        example: "68719476736"
                                      storage_size_gib:
                                        type: integer
                                        description: The storage size of a node in
                                          the cluster.
                                        format: int32
                                        example: 1024
                                      status:
                                        type: string
                                        description: The status of a node in the cluster.
                                        example: NODE_STATUS_AVAILABLE
                                        enum:
                                        - NODE_STATUS_AVAILABLE
                                        - NODE_STATUS_UNAVAILABLE
                                        - NODE_STATUS_CREATING
                                        - NODE_STATUS_DELETING
                                tiflash:
                                  type: array
                                  description: TiFlash node map.
                                  example:
                                  - node_name: tiflash-0
                                    availability_zone: us-west-2a
                                    node_size: 8C64G
                                    vcpu_num: 8
                                    ram_bytes: "68719476736"
                                    storage_size_gib: 1024
                                    status: NODE_STATUS_AVAILABLE
                                  - node_name: tiflash-1
                                    availability_zone: us-west-2b
                                    node_size: 8C64G
                                    vcpu_num: 8
                                    ram_bytes: "68719476736"
                                    storage_size_gib: 1024
                                    status: NODE_STATUS_AVAILABLE
                                  items:
                                    type: object
                                    properties:
                                      node_name:
                                        type: string
                                        description: The name of a node in the cluster.
                                        example: tiflash-0
                                      availability_zone:
                                        type: string
                                        description: The availability zone of a node
                                          in the cluster.
                                        example: us-west-2a
                                      node_size:
                                        type: string
                                        description: The size of the TiFlash component
                                          in the cluster.
                                        example: 8C64G
                                      vcpu_num:
                                        type: integer
                                        description: "The total vCPUs of a node in\
                                          \ the cluster. If the `cluster_type` is\
                                          \ `\"DEVELOPER\"`, `vcpu_num` is always\
                                          \ 0."
                                        format: int32
                                        example: 8
                                      ram_bytes:
                                        type: string
                                        description: "The RAM size of a node in the\
                                          \ cluster. If the `cluster_type` is `\"\
                                          DEVELOPER\"`, `ram_bytes` is always 0."
                                        format: int64
                                        example: "68719476736"
                                      storage_size_gib:
                                        type: integer
                                        description: The storage size of a node in
                                          the cluster.
                                        format: int32
                                        example: 1024
                                      status:
                                        type: string
                                        description: The status of a node in the cluster.
                                        example: NODE_STATUS_AVAILABLE
                                        enum:
                                        - NODE_STATUS_AVAILABLE
                                        - NODE_STATUS_UNAVAILABLE
                                        - NODE_STATUS_CREATING
                                        - NODE_STATUS_DELETING
                              description: Node map. The `node_map` is returned only
                                when the `cluster_status` is `"AVAILABLE"` or `"MODIFYING"`.
                            connection_strings:
                              type: object
                              properties:
                                default_user:
                                  type: string
                                  description: The default TiDB user for connection.
                                  example: root
                                standard:
                                  type: object
                                  properties:
                                    host:
                                      type: string
                                      description: The host of standard connection.
                                      example: tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
                                    port:
                                      maximum: 65535
                                      minimum: 1024
                                      type: integer
                                      description: |-
                                        The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                                        **Limitations**:
                                        - For a TiDB Serverless cluster, only port `4000` is available.
                                      format: int32
                                      example: 4000
                                      default: 4000
                                  description: |-
                                    Standard connection string.

                                    You must configure the [IP Access List](https://docs.pingcap.com/tidbcloud/connect-to-tidb-cluster#connect-via-standard-connection) for the cluster you created on [TiDB Cloud console](https://tidbcloud.com/) before connecting to this connection string.
                                vpc_peering:
                                  type: object
                                  properties:
                                    host:
                                      type: string
                                      description: The host of VPC peering connection.
                                      example: private-tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
                                    port:
                                      maximum: 65535
                                      minimum: 1024
                                      type: integer
                                      description: |-
                                        The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                                        **Limitations**:
                                        - For a TiDB Serverless cluster, only port `4000` is available.
                                      format: int32
                                      example: 4000
                                      default: 4000
                                  description: |-
                                    [VPC peering](https://docs.pingcap.com/tidbcloud/tidb-cloud-glossary#vpc-peering) connection string.

                                    You must [Set up VPC peering connections](https://docs.pingcap.com/tidbcloud/set-up-vpc-peering-connections) for the project before connecting to this private connection string.
                              description: Connection strings.
                          description: The status of the cluster.
                      description: ClusterItem is the information of cluster.
                  total:
                    type: integer
                    description: The total number of clusters in the project.
                    format: int64
                    example: 1
                description: GetClustersOfProjectResp is the response for getting
                  clusters of project.
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request GET \
            --url 'https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters?page=1&page_size=10'
    post:
      tags:
      - Cluster
      summary: Create a cluster.
      description: "Before creating a TiDB Dedicated cluster, you must [set a Project\
        \ CIDR](https://docs.pingcap.com/tidbcloud/set-up-vpc-peering-connections#prerequisite-set-a-project-cidr)\
        \ on [TiDB Cloud console](https://tidbcloud.com/)."
      operationId: CreateCluster
      parameters:
      - name: project_id
        in: path
        description: "The ID of the project. You can get the project ID from the response\
          \ of [List all accessible projects](#tag/Project/operation/ListProjects)."
        required: true
        schema:
          type: string
          format: uint64
      requestBody:
        content:
          application/json:
            schema:
              title: CreateClusterReq
              required:
              - cloud_provider
              - cluster_type
              - config
              - name
              - region
              type: object
              properties:
                name:
                  pattern: "^[A-Za-z0-9][-A-Za-z0-9]{2,62}[A-Za-z0-9]$"
                  type: string
                  description: "The name of the cluster. The name must be 4-64 characters\
                    \ that can only include numbers, letters, and hyphens, and the\
                    \ first and last character must be a letter or number."
                  example: Cluster0
                cluster_type:
                  type: string
                  description: |-
                    The cluster type.
                    - `"DEVELOPER"`: create a [TiDB Serverless](https://docs.pingcap.com/tidbcloud/select-cluster-tier#tidb-serverless) cluster
                    - `"DEDICATED"`: create a [TiDB Dedicated](https://docs.pingcap.com/tidbcloud/select-cluster-tier#dedicated-tier) cluster. Before creating a TiDB Dedicated cluster, you must [set a Project CIDR](https://docs.pingcap.com/tidbcloud/set-up-vpc-peering-connections#prerequisite-set-a-project-cidr) on [TiDB Cloud console](https://tidbcloud.com/).
                  format: enum
                  example: DEDICATED
                  enum:
                  - DEDICATED
                  - DEVELOPER
                cloud_provider:
                  type: string
                  description: |-
                    The cloud provider on which your TiDB cluster is hosted.
                    - `"AWS"`: the Amazon Web Services cloud provider
                    - `"GCP"`: the Google Cloud cloud provider
                  format: string
                  example: AWS
                  enum:
                  - AWS
                  - GCP
                region:
                  type: string
                  description: |-
                    The region value should match the cloud provider's region code.
                    You can get the complete list of available regions from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    For the detailed information on each region, refer to the documentation of the corresponding cloud provider ([AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) | [GCP](https://cloud.google.com/about/locations#americas)).

                    For example, if you want to deploy the cluster in the Oregon region for AWS, set the value to `"us-west-2"`.
                  example: us-west-2
                config:
                  required:
                  - root_password
                  type: object
                  properties:
                    root_password:
                      maxLength: 64
                      minLength: 8
                      type: string
                      description: The root password to access the cluster. It must
                        be 8-64 characters.
                      example: password_example
                    port:
                      maximum: 65535
                      minimum: 1024
                      type: integer
                      description: |-
                        The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                        **Limitations**:
                        - For a TiDB Serverless cluster, only port `4000` is available.
                      format: int32
                      example: 4000
                      default: 4000
                    components:
                      required:
                      - tidb
                      - tikv
                      type: object
                      properties:
                        tidb:
                          required:
                          - node_quantity
                          - node_size
                          type: object
                          properties:
                            node_size:
                              type: string
                              description: |-
                                The size of the TiDB component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Additional combination rules**:
                                - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                                - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
                              example: 8C16G
                            node_quantity:
                              type: integer
                              description: |
                                The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                              format: int32
                              example: 2
                          description: The TiDB component of the cluster.
                        tikv:
                          required:
                          - node_quantity
                          - node_size
                          - storage_size_gib
                          type: object
                          properties:
                            node_size:
                              type: string
                              description: |-
                                The size of the TiKV component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Additional combination rules**:
                                - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                                - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
                              example: 8C64G
                            storage_size_gib:
                              type: integer
                              description: "The storage size of a node in the cluster.\
                                \ You can get the minimum and maximum of storage size\
                                \ from the response of [List the cloud providers,\
                                \ regions and available specifications](#tag/Cluster/operation/ListProviderRegions)."
                              format: int32
                              example: 1024
                            node_quantity:
                              type: integer
                              description: |-
                                The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Limitations**:
                                - The `node_quantity` of TiKV must be a multiple of 3.
                              format: int32
                              example: 3
                          description: The TiKV component of the cluster.
                        tiflash:
                          required:
                          - node_quantity
                          - node_size
                          - storage_size_gib
                          type: object
                          properties:
                            node_size:
                              type: string
                              description: |-
                                The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Additional combination rules**:
                                - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                                - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
                              example: 8C64G
                            storage_size_gib:
                              type: integer
                              description: |
                                The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                              format: int32
                              example: 1024
                            node_quantity:
                              type: integer
                              description: "The number of nodes in the cluster. You\
                                \ can get the minimum and step of a node quantity\
                                \ from the response of [List the cloud providers,\
                                \ regions and available specifications](#tag/Cluster/operation/ListProviderRegions)."
                              format: int32
                              example: 1
                          description: The TiFlash component of the cluster.
                      description: |-
                        The components of the cluster.

                        **Limitations**:
                        - For a TiDB Dedicated cluster, the `components` parameter is **required**.
                        - For a TiDB Serverless cluster, the `components` value is **ignored**. Setting this configuration does not have any effects.
                      example:
                        tidb:
                          node_size: 8C16G
                          node_quantity: 2
                        tikv:
                          node_size: 8C32G
                          storage_size_gib: 1024
                          node_quantity: 3
                    ip_access_list:
                      type: array
                      description: "A list of IP addresses and Classless Inter-Domain\
                        \ Routing (CIDR) addresses that are allowed to access the\
                        \ TiDB Cloud cluster via [standard connection](https://docs.pingcap.com/tidbcloud/connect-to-tidb-cluster#connect-via-standard-connection)."
                      items:
                        required:
                        - cidr
                        type: object
                        properties:
                          cidr:
                            type: string
                            description: The IP address or CIDR range that you want
                              to add to the cluster's IP access list.
                            example: 8.8.8.8/32
                          description:
                            type: string
                            description: Description that explains the purpose of
                              the entry.
                            example: My Current IP Address
                  description: The configuration of the cluster.
              description: CreateClusterReq is the request for creating cluster.
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                title: CreateClusterResp
                required:
                - id
                type: object
                properties:
                  id:
                    type: string
                    description: The ID of the cluster.
                    format: uint64
                    example: "1"
                description: CreateClusterResp is the response for creating cluster.
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl for TiDB Dedicated
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request POST \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters \
            --header 'content-type: application/json' \
            --data '{"name":"Cluster0","cluster_type":"DEDICATED","cloud_provider":"AWS","region":"us-west-2","config":{"root_password":"password_example","port":4000,"components":{"tidb":{"node_size":"8C16G","node_quantity":2},"tikv":{"node_size":"8C32G","storage_size_gib":1024,"node_quantity":3}},"ip_access_list":[{"cidr":"8.8.8.8/32","description":"My Current IP Address"}]}}'
      - lang: curl for TiDB Serverless
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request POST \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters \
            --header 'content-type: application/json' \
            --data '{"name":"Cluster0","cluster_type":"DEVELOPER","cloud_provider":"AWS","region":"us-west-2","config":{"root_password":"password_example","ip_access_list":[{"cidr":"8.8.8.8/32","description":"My IP Address"}]}}'
      x-codegen-request-body-name: body
  /api/v1beta/projects/{project_id}/clusters/{cluster_id}:
    get:
      tags:
      - Cluster
      summary: Get a cluster by ID.
      operationId: GetCluster
      parameters:
      - name: project_id
        in: path
        description: "The ID of the project. You can get the project ID from the response\
          \ of [List all accessible projects](#tag/Project/operation/ListProjects)."
        required: true
        schema:
          type: string
          format: uint64
      - name: cluster_id
        in: path
        description: The ID of the cluster.
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                title: ClusterItem
                required:
                - id
                - project_id
                type: object
                properties:
                  id:
                    type: string
                    description: The ID of the cluster.
                    format: uint64
                    example: "1"
                  project_id:
                    type: string
                    description: The ID of the project.
                    format: uint64
                    example: "1"
                  name:
                    pattern: "^[A-Za-z0-9][-A-Za-z0-9]{2,62}[A-Za-z0-9]$"
                    type: string
                    description: The name of the cluster.
                    example: Cluster0
                  cluster_type:
                    type: string
                    description: |-
                      The cluster type:
                      - `"DEVELOPER"`: a [TiDB Serverless](https://docs.pingcap.com/tidbcloud/select-cluster-tier#tidb-serverless) cluster
                      - `"DEDICATED"`: a [TiDB Dedicated](https://docs.pingcap.com/tidbcloud/select-cluster-tier#dedicated-tier) cluster

                      **Warning:** `"DEVELOPER"` will soon be changed to `"SERVERLESS"` to represent TiDB Serverless clusters.
                    format: enum
                    example: DEDICATED
                    enum:
                    - DEDICATED
                    - DEVELOPER
                  cloud_provider:
                    type: string
                    description: |-
                      The cloud provider on which your TiDB cluster is hosted.
                      - `"AWS"`: the Amazon Web Services cloud provider
                      - `"GCP"`: the Google Cloud cloud provider
                    format: string
                    example: AWS
                    enum:
                    - AWS
                    - GCP
                  region:
                    type: string
                    description: Region of the cluster.
                    example: us-west-2
                  create_timestamp:
                    type: string
                    description: The creation time of the cluster in Unix timestamp
                      seconds (epoch time).
                    format: timestamp
                    example: "1656991448"
                  config:
                    type: object
                    properties:
                      port:
                        maximum: 65535
                        minimum: 1024
                        type: integer
                        description: The TiDB port for connection. The port must be
                          in the range of 1024-65535 except 10080.
                        format: int32
                        example: 4000
                        default: 4000
                      components:
                        required:
                        - tidb
                        - tikv
                        type: object
                        properties:
                          tidb:
                            required:
                            - node_quantity
                            - node_size
                            type: object
                            properties:
                              node_size:
                                type: string
                                description: |-
                                  The size of the TiDB component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                  **Additional combination rules**:
                                  - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                                  - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
                                example: 8C16G
                              node_quantity:
                                type: integer
                                description: |
                                  The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                                format: int32
                                example: 2
                            description: The TiDB component of the cluster.
                          tikv:
                            required:
                            - node_quantity
                            - node_size
                            - storage_size_gib
                            type: object
                            properties:
                              node_size:
                                type: string
                                description: |-
                                  The size of the TiKV component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                  **Additional combination rules**:
                                  - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                                  - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
                                example: 8C64G
                              storage_size_gib:
                                type: integer
                                description: "The storage size of a node in the cluster.\
                                  \ You can get the minimum and maximum of storage\
                                  \ size from the response of [List the cloud providers,\
                                  \ regions and available specifications](#tag/Cluster/operation/ListProviderRegions)."
                                format: int32
                                example: 1024
                              node_quantity:
                                type: integer
                                description: |-
                                  The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                  **Limitations**:
                                  - The `node_quantity` of TiKV must be a multiple of 3.
                                format: int32
                                example: 3
                            description: The TiKV component of the cluster.
                          tiflash:
                            required:
                            - node_quantity
                            - node_size
                            - storage_size_gib
                            type: object
                            properties:
                              node_size:
                                type: string
                                description: |-
                                  The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                  **Additional combination rules**:
                                  - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                                  - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
                                example: 8C64G
                              storage_size_gib:
                                type: integer
                                description: |
                                  The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                                format: int32
                                example: 1024
                              node_quantity:
                                type: integer
                                description: "The number of nodes in the cluster.\
                                  \ You can get the minimum and step of a node quantity\
                                  \ from the response of [List the cloud providers,\
                                  \ regions and available specifications](#tag/Cluster/operation/ListProviderRegions)."
                                format: int32
                                example: 1
                            description: The TiFlash component of the cluster.
                        description: The components of the cluster.
                        example:
                          tidb:
                            node_size: 8C16G
                            node_quantity: 2
                          tikv:
                            node_size: 8C32G
                            storage_size_gib: 1024
                            node_quantity: 3
                    description: The configuration of the cluster.
                    example:
                      port: 4000
                      components:
                        tidb:
                          node_size: 8C16G
                          node_quantity: 2
                        tikv:
                          node_size: 8C32G
                          storage_size_gib: 1024
                          node_quantity: 3
                  status:
                    title: ClusterItemStatus
                    type: object
                    properties:
                      tidb_version:
                        type: string
                        description: TiDB version.
                        example: v6.1.0
                      cluster_status:
                        type: string
                        description: Status of the cluster.
                        format: enum
                        example: AVAILABLE
                        enum:
                        - AVAILABLE
                        - CREATING
                        - MODIFYING
                        - PAUSED
                        - RESUMING
                        - UNAVAILABLE
                        - IMPORTING
                        - MAINTAINING
                        - PAUSING
                      node_map:
                        required:
                        - tidb
                        - tikv
                        type: object
                        properties:
                          tidb:
                            type: array
                            description: TiDB node map.
                            example:
                            - node_name: tidb-0
                              availability_zone: us-west-2a
                              node_size: 8C16G
                              vcpu_num: 8
                              ram_bytes: "17179869184"
                              status: NODE_STATUS_AVAILABLE
                            - node_name: tidb-1
                              availability_zone: us-west-2b
                              node_size: 8C16G
                              vcpu_num: 8
                              ram_bytes: "17179869184"
                              status: NODE_STATUS_AVAILABLE
                            items:
                              type: object
                              properties:
                                node_name:
                                  type: string
                                  description: The name of a node in the cluster.
                                  example: tidb-0
                                availability_zone:
                                  type: string
                                  description: The availability zone of a node in
                                    the cluster.
                                  example: us-west-2a
                                node_size:
                                  type: string
                                  description: The size of the TiDB component in the
                                    cluster.
                                  example: 8C16G
                                vcpu_num:
                                  type: integer
                                  description: "The total vCPUs of a node in the cluster.\
                                    \ If the `cluster_type` is `\"DEVELOPER\"`, `vcpu_num`\
                                    \ is always 0."
                                  format: int32
                                  example: 8
                                ram_bytes:
                                  type: string
                                  description: "The RAM size of a node in the cluster.\
                                    \ If the `cluster_type` is `\"DEVELOPER\"`, `ram_bytes`\
                                    \ is always 0."
                                  format: int64
                                  example: "17179869184"
                                status:
                                  type: string
                                  description: The status of a node in the cluster.
                                  example: NODE_STATUS_AVAILABLE
                                  enum:
                                  - NODE_STATUS_AVAILABLE
                                  - NODE_STATUS_UNAVAILABLE
                                  - NODE_STATUS_CREATING
                                  - NODE_STATUS_DELETING
                          tikv:
                            type: array
                            description: TiKV node map.
                            example:
                            - node_name: tikv-0
                              availability_zone: us-west-2a
                              node_size: 8C32G
                              vcpu_num: 8
                              ram_bytes: "68719476736"
                              storage_size_gib: 1024
                              status: NODE_STATUS_AVAILABLE
                            - node_name: tikv-1
                              availability_zone: us-west-2b
                              node_size: 8C64G
                              vcpu_num: 8
                              ram_bytes: "68719476736"
                              storage_size_gib: 1024
                              status: NODE_STATUS_AVAILABLE
                            - node_name: tikv-2
                              availability_zone: us-west-2c
                              node_size: 8C64G
                              vcpu_num: 8
                              ram_bytes: "68719476736"
                              storage_size_gib: 1024
                              status: NODE_STATUS_AVAILABLE
                            items:
                              type: object
                              properties:
                                node_name:
                                  type: string
                                  description: The name of a node in the cluster.
                                  example: tikv-0
                                availability_zone:
                                  type: string
                                  description: The availability zone of a node in
                                    the cluster.
                                  example: us-west-2a
                                node_size:
                                  type: string
                                  description: The size of the TiKV component in the
                                    cluster.
                                  example: 8C32G
                                vcpu_num:
                                  type: integer
                                  description: "The total vCPUs of a node in the cluster.\
                                    \ If the `cluster_type` is `\"DEVELOPER\"`, `vcpu_num`\
                                    \ is always 0."
                                  format: int32
                                  example: 8
                                ram_bytes:
                                  type: string
                                  description: "The RAM size of a node in the cluster.\
                                    \ If the `cluster_type` is `\"DEVELOPER\"`, `ram_bytes`\
                                    \ is always 0."
                                  format: int64
                                  example: "68719476736"
                                storage_size_gib:
                                  type: integer
                                  description: The storage size of a node in the cluster.
                                  format: int32
                                  example: 1024
                                status:
                                  type: string
                                  description: The status of a node in the cluster.
                                  example: NODE_STATUS_AVAILABLE
                                  enum:
                                  - NODE_STATUS_AVAILABLE
                                  - NODE_STATUS_UNAVAILABLE
                                  - NODE_STATUS_CREATING
                                  - NODE_STATUS_DELETING
                          tiflash:
                            type: array
                            description: TiFlash node map.
                            example:
                            - node_name: tiflash-0
                              availability_zone: us-west-2a
                              node_size: 8C64G
                              vcpu_num: 8
                              ram_bytes: "68719476736"
                              storage_size_gib: 1024
                              status: NODE_STATUS_AVAILABLE
                            - node_name: tiflash-1
                              availability_zone: us-west-2b
                              node_size: 8C64G
                              vcpu_num: 8
                              ram_bytes: "68719476736"
                              storage_size_gib: 1024
                              status: NODE_STATUS_AVAILABLE
                            items:
                              type: object
                              properties:
                                node_name:
                                  type: string
                                  description: The name of a node in the cluster.
                                  example: tiflash-0
                                availability_zone:
                                  type: string
                                  description: The availability zone of a node in
                                    the cluster.
                                  example: us-west-2a
                                node_size:
                                  type: string
                                  description: The size of the TiFlash component in
                                    the cluster.
                                  example: 8C64G
                                vcpu_num:
                                  type: integer
                                  description: "The total vCPUs of a node in the cluster.\
                                    \ If the `cluster_type` is `\"DEVELOPER\"`, `vcpu_num`\
                                    \ is always 0."
                                  format: int32
                                  example: 8
                                ram_bytes:
                                  type: string
                                  description: "The RAM size of a node in the cluster.\
                                    \ If the `cluster_type` is `\"DEVELOPER\"`, `ram_bytes`\
                                    \ is always 0."
                                  format: int64
                                  example: "68719476736"
                                storage_size_gib:
                                  type: integer
                                  description: The storage size of a node in the cluster.
                                  format: int32
                                  example: 1024
                                status:
                                  type: string
                                  description: The status of a node in the cluster.
                                  example: NODE_STATUS_AVAILABLE
                                  enum:
                                  - NODE_STATUS_AVAILABLE
                                  - NODE_STATUS_UNAVAILABLE
                                  - NODE_STATUS_CREATING
                                  - NODE_STATUS_DELETING
                        description: Node map. The `node_map` is returned only when
                          the `cluster_status` is `"AVAILABLE"` or `"MODIFYING"`.
                      connection_strings:
                        type: object
                        properties:
                          default_user:
                            type: string
                            description: The default TiDB user for connection.
                            example: root
                          standard:
                            type: object
                            properties:
                              host:
                                type: string
                                description: The host of standard connection.
                                example: tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
                              port:
                                maximum: 65535
                                minimum: 1024
                                type: integer
                                description: |-
                                  The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                                  **Limitations**:
                                  - For a TiDB Serverless cluster, only port `4000` is available.
                                format: int32
                                example: 4000
                                default: 4000
                            description: |-
                              Standard connection string.

                              You must configure the [IP Access List](https://docs.pingcap.com/tidbcloud/connect-to-tidb-cluster#connect-via-standard-connection) for the cluster you created on [TiDB Cloud console](https://tidbcloud.com/) before connecting to this connection string.
                          vpc_peering:
                            type: object
                            properties:
                              host:
                                type: string
                                description: The host of VPC peering connection.
                                example: private-tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
                              port:
                                maximum: 65535
                                minimum: 1024
                                type: integer
                                description: |-
                                  The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                                  **Limitations**:
                                  - For a TiDB Serverless cluster, only port `4000` is available.
                                format: int32
                                example: 4000
                                default: 4000
                            description: |-
                              [VPC peering](https://docs.pingcap.com/tidbcloud/tidb-cloud-glossary#vpc-peering) connection string.

                              You must [Set up VPC peering connections](https://docs.pingcap.com/tidbcloud/set-up-vpc-peering-connections) for the project before connecting to this private connection string.
                        description: Connection strings.
                    description: The status of the cluster.
                description: ClusterItem is the information of cluster.
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request GET \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters/{cluster_id}
    delete:
      tags:
      - Cluster
      summary: Delete a cluster.
      operationId: DeleteCluster
      parameters:
      - name: project_id
        in: path
        description: "The ID of the project. You can get the project ID from the response\
          \ of [List all accessible projects](#tag/Project/operation/ListProjects)."
        required: true
        schema:
          type: string
          format: uint64
      - name: cluster_id
        in: path
        description: The ID of the cluster.
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request DELETE \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters/{cluster_id}
    patch:
      tags:
      - Cluster
      summary: Modify a TiDB Dedicated cluster.
      description: "With this endpoint, you can modify the components of a cluster\
        \ using the `config.components` parameter, or pause or resume a cluster using\
        \ the `config.paused` parameter."
      operationId: UpdateCluster
      parameters:
      - name: project_id
        in: path
        description: "The ID of the project. You can get the project ID from the response\
          \ of [List all accessible projects](#tag/Project/operation/ListProjects)."
        required: true
        schema:
          type: string
          format: uint64
      - name: cluster_id
        in: path
        description: The ID of the cluster.
        required: true
        schema:
          type: string
          format: uint64
      requestBody:
        content:
          application/json:
            schema:
              title: UpdateClusterReq
              required:
              - config
              type: object
              properties:
                config:
                  title: UpdateClusterComponents
                  type: object
                  properties:
                    components:
                      type: object
                      properties:
                        tidb:
                          type: object
                          properties:
                            node_size:
                              type: string
                              description: |-
                                The size of the TiDB component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Additional combination rules**:
                                - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                                - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.

                                **Limitations**:
                                - See [Change node size](https://docs.pingcap.com/tidbcloud/scale-tidb-cluster#change-node-size).
                              example: 16C32G
                            node_quantity:
                              type: integer
                              description: "The number of nodes in the cluster. You\
                                \ can get the minimum and step of a node quantity\
                                \ from the response of [List the cloud providers,\
                                \ regions and available specifications](#tag/Cluster/operation/ListProviderRegions)."
                              format: int32
                              example: 3
                          description: The TiDB component of the cluster.
                        tikv:
                          type: object
                          properties:
                            node_size:
                              type: string
                              description: |-
                                The size of the TiKV component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Additional combination rules**:
                                - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                                - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.

                                **Limitations**:
                                - See [Change node size](https://docs.pingcap.com/tidbcloud/scale-tidb-cluster#change-node-size).
                              example: 16C64G
                            storage_size_gib:
                              type: integer
                              description: |-
                                The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Limitations**:
                                - You cannot decrease storage size for TiKV.
                                - If your TiDB cluster is hosted by AWS, after changing the storage size of TiKV, you must wait at least six hours before you can change it again.
                              format: int32
                              example: 2048
                            node_quantity:
                              type: integer
                              description: |-
                                The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Limitations**:
                                - The `node_quantity` of TiKV must be a multiple of 3.
                              format: int32
                              example: 6
                          description: The TiKV component of the cluster.
                        tiflash:
                          type: object
                          properties:
                            node_size:
                              type: string
                              description: |-
                                The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Additional combination rules**:
                                - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                                - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.

                                **Limitations**:
                                - See [Change node size](https://docs.pingcap.com/tidbcloud/scale-tidb-cluster#change-node-size).
                              example: 16C128G
                            storage_size_gib:
                              type: integer
                              description: |-
                                The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Limitations**:
                                - You cannot decrease storage size for TiFlash.
                                - If your TiDB cluster is hosted by AWS, after changing the storage size of TiFlash, you must wait at least six hours before you can change it again.
                              format: int32
                              example: 2048
                            node_quantity:
                              type: integer
                              description: "The number of nodes in the cluster. You\
                                \ can get the minimum and step of a node quantity\
                                \ from the response of [List the cloud providers,\
                                \ regions and available specifications](#tag/Cluster/operation/ListProviderRegions)."
                              format: int32
                              example: 2
                          description: |-
                            The TiFlash component of the cluster.

                            If you want to add TiFlash nodes to a cluster that does not have one before (increase the node_quantity of `"TIFLASH"` from 0), you must specify the `node_size`, `storage_size_gib` and `node_quantity` of TiFlash nodes.
                      description: The components of the cluster.
                    paused:
                      type: boolean
                      description: |-
                        Flag that indicates whether the cluster is paused. `true` means to pause the cluster, and `false` means to resume the cluster. For more details, refer to [Pause or Resume a TiDB Cluster](https://docs.pingcap.com/tidbcloud/pause-or-resume-tidb-cluster).

                        **Limitations:**
                         - The cluster can be paused only when the `cluster_status` is `"AVAILABLE"`.
                        - The cluster can be resumed only when the `cluster_status` is `"PAUSED"`.
                  description: |-
                    The configuration of the cluster. You can modify the components of the cluster using `components`, or pause or resume the cluster using `paused`.

                     You cannot change the cluster components and cluster status at the same time. That is, `components` and `paused` cannot be set at the same time.
                  example:
                    components:
                      tidb:
                        node_size: 16C32G
                        node_quantity: 3
                      tikv:
                        node_size: 16C64G
                        storage_size_gib: 2048
                        node_quantity: 6
                      tiflash:
                        node_size: 16C128G
                        storage_size_gib: 2048
                        node_quantity: 2
              description: UpdateClusterReq is the request for updating cluster.
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request PATCH \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters/{cluster_id} \
            --header 'content-type: application/json' \
            --data '{"config":{"components":{"tidb":{"node_size":"16C32G","node_quantity":3},"tikv":{"node_size":"16C64G","storage_size_gib":2048,"node_quantity":6},"tiflash":{"node_size":"16C128G","storage_size_gib":2048,"node_quantity":2}}}}'
      x-codegen-request-body-name: body
  /api/v1beta/projects/{project_id}/clusters/{cluster_id}/backups:
    get:
      tags:
      - Backup
      summary: List all backups for a cluster.
      description: "For TiDB Serverless clusters, you cannot manage backups via API.\
        \ You can use [Dumpling](https://docs.pingcap.com/tidb/stable/dumpling-overview)\
        \ to export your data as backups."
      operationId: ListBackUpOfCluster
      parameters:
      - name: project_id
        in: path
        description: "The ID of your project. You can get the project ID from the\
          \ response of [List all accessible projects.](#tag/Project/operation/ListProjects)."
        required: true
        schema:
          type: string
          format: uint64
      - name: cluster_id
        in: path
        description: "The ID of your cluster. You can get the cluster ID from the\
          \ response of [Get all clusters in a project](#tag/Cluster/operation/ListClustersOfProject)."
        required: true
        schema:
          type: string
          format: uint64
      - name: page
        in: query
        description: The number of pages.
        schema:
          type: integer
          format: int32
          default: 1
      - name: page_size
        in: query
        description: The size of a page.
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                title: ListBackupOfClusterResp
                type: object
                properties:
                  items:
                    type: array
                    description: The items of all backups.
                    items:
                      title: ListBackupItem
                      type: object
                      properties:
                        id:
                          type: string
                          description: The ID of the backup. It is generated by TiDB
                            Cloud.
                          format: uint64
                          example: "1"
                        name:
                          type: string
                          description: The name of the backup.
                          example: backup-1
                        description:
                          type: string
                          description: The description of the backup. It is specified
                            by the user when taking a manual type backup. It helps
                            you add additional information to the backup.
                          example: backup for cluster upgrade in 2022/06/07
                        type:
                          type: string
                          description: "The type of backup. TiDB Cloud only supports\
                            \ manual and auto backup. For more information, see [TiDB\
                            \ Cloud Documentation](https://docs.pingcap.com/tidbcloud/backup-and-restore#backup)."
                          example: MANUAL
                          enum:
                          - MANUAL
                          - AUTO
                        create_timestamp:
                          type: string
                          description: "The creation time of the backup in UTC. The\
                            \ time format follows the [ISO8601](http://en.wikipedia.org/wiki/ISO_8601)\
                            \ standard, which is `YYYY-MM-DD` (year-month-day) + T\
                            \ +`HH:MM:SS` (hour-minutes-seconds) + Z. For example,\
                            \ `2020-01-01T00:00:00Z`."
                          format: date-time
                          example: 2020-01-01T00:00:00Z
                        size:
                          type: string
                          description: The bytes of the backup.
                          format: uint64
                          example: "102400"
                        status:
                          type: string
                          description: The status of backup.
                          example: SUCCESS
                          enum:
                          - PENDING
                          - RUNNING
                          - FAILED
                          - SUCCESS
                      description: The item of backup list.
                  total:
                    type: integer
                    description: The total number of backups in the project.
                    format: int64
                    example: 10
                description: The response for listing backups of a cluster.
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request GET \
            --url 'https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters/{cluster_id}/backups?page=1&page_size=10'
    post:
      tags:
      - Backup
      summary: Create a backup for a cluster.
      description: |-
        - For TiDB Dedicated clusters, you can create as many manual backups as you need.
        - For TiDB Serverless clusters, you cannot create backups via API. You can use [Dumpling](https://docs.pingcap.com/tidb/stable/dumpling-overview) to export your data as backups.
      operationId: CreateBackup
      parameters:
      - name: project_id
        in: path
        description: "The ID of your project. You can get the project ID from the\
          \ response of [List all accessible projects.](#tag/Project/operation/ListProjects)."
        required: true
        schema:
          type: string
          format: uint64
      - name: cluster_id
        in: path
        description: "The ID of your cluster that you want to take a manual backup.\
          \ You can get the cluster ID from the response of [Get all clusters in a\
          \ project](#tag/Cluster/operation/ListClustersOfProject)."
        required: true
        schema:
          type: string
          format: uint64
      requestBody:
        content:
          application/json:
            schema:
              title: CreateBackupReq
              required:
              - name
              type: object
              properties:
                name:
                  type: string
                  description: "Specify the name for a manual backup. It is recommended\
                    \ that you use a unique name, so that it is easy to distinguish\
                    \ the backup when you query the backups."
                  example: backup-1
                description:
                  type: string
                  description: The description of the backup. It helps you add additional
                    information to the backup. Allows up to 256 characters.
                  example: backup-1
              description: This request for creating a MANUAL type backup.
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                title: CreateBackupResp
                type: object
                properties:
                  id:
                    type: string
                    description: The ID of the backup.
                    format: uint64
                    example: "1"
                description: This response for creating a MANUAL type backup.
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request POST \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters/{cluster_id}/backups \
            --header 'content-type: application/json' \
            --data '{"name":"backup-1","description":"backup-1"}'
      x-codegen-request-body-name: body
  /api/v1beta/projects/{project_id}/clusters/{cluster_id}/backups/{backup_id}:
    get:
      tags:
      - Backup
      summary: Get a backup for a cluster.
      description: "For TiDB Serverless clusters, you cannot manage backups via API.\
        \ You can use [Dumpling](https://docs.pingcap.com/tidb/stable/dumpling-overview)\
        \ to export your data as backups."
      operationId: GetBackupOfCluster
      parameters:
      - name: project_id
        in: path
        description: "The ID of your project. You can get the project ID from the\
          \ response of [List all accessible projects.](#tag/Project/operation/ListProjects)."
        required: true
        schema:
          type: string
          format: uint64
      - name: cluster_id
        in: path
        description: "The ID of your cluster. You can get the cluster ID from the\
          \ response of [Get all clusters in a project](#tag/Cluster/operation/ListClustersOfProject)."
        required: true
        schema:
          type: string
          format: uint64
      - name: backup_id
        in: path
        description: The ID of the backup.
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                title: GetBackupOfClusterResp
                type: object
                properties:
                  id:
                    type: string
                    description: The ID of the backup.
                    format: uint64
                    example: "1"
                  name:
                    type: string
                    description: The name of the backup.
                    example: backup-1
                  description:
                    type: string
                    description: The description of the backup. It is specified by
                      the user when taking a manual type backup. It helps you add
                      additional information to the backup.
                    example: backup for cluster upgrade in 2022/06/07
                  type:
                    type: string
                    description: "The type of backup. TiDB Cloud only supports manual\
                      \ and auto backup. For more information, see [TiDB Cloud Documentation](https://docs.pingcap.com/tidbcloud/backup-and-restore#backup)."
                    example: MANUAL
                    enum:
                    - MANUAL
                    - AUTO
                  create_timestamp:
                    type: string
                    description: "The creation time of the backup in UTC. The time\
                      \ format follows the [ISO8601](http://en.wikipedia.org/wiki/ISO_8601)\
                      \ standard, which is `YYYY-MM-DD` (year-month-day) + T +`HH:MM:SS`\
                      \ (hour-minutes-seconds) + Z. For example, `2020-01-01T00:00:00Z`."
                    format: date-time
                    example: 2020-01-01T00:00:00Z
                  size:
                    type: string
                    description: The bytes of the backup.
                    format: uint64
                    example: "102400"
                  status:
                    type: string
                    description: The status of backup.
                    example: SUCCESS
                    enum:
                    - PENDING
                    - RUNNING
                    - FAILED
                    - SUCCESS
                description: This response for getting backup of a cluster.
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request GET \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters/{cluster_id}/backups/{backup_id}
    delete:
      tags:
      - Backup
      summary: Delete a backup for a cluster.
      description: "For TiDB Serverless clusters, you cannot manage backups via API.\
        \ You can use [Dumpling](https://docs.pingcap.com/tidb/stable/dumpling-overview)\
        \ to export your data as backups."
      operationId: DeleteBackup
      parameters:
      - name: project_id
        in: path
        description: "The ID of your project. You can get the project ID from the\
          \ response of [List all accessible projects.](#tag/Project/operation/ListProjects)."
        required: true
        schema:
          type: string
          format: uint64
      - name: cluster_id
        in: path
        description: "The ID of your cluster. You can get the cluster ID from the\
          \ response of [Get all clusters in a project](#tag/Cluster/operation/ListClustersOfProject)."
        required: true
        schema:
          type: string
          format: uint64
      - name: backup_id
        in: path
        description: "The ID of the backup. You can get the backup ID from the response\
          \ of [List all backups for a cluster](#tag/Project/operation/ListBackUpOfCluster)."
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request DELETE \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters/{cluster_id}/backups/{backup_id}
  /api/v1beta/projects/{project_id}/clusters/{cluster_id}/imports:
    get:
      tags:
      - Import
      summary: List all import tasks for a cluster.
      operationId: ListImportTasks
      parameters:
      - name: project_id
        in: path
        description: "The ID of your project. You can get the project ID from the\
          \ response of [List all accessible projects](#tag/Project/operation/ListProjects)."
        required: true
        schema:
          type: string
          format: uint64
      - name: cluster_id
        in: path
        description: "The ID of your cluster. You can get the cluster ID from the\
          \ response of [List all clusters in a project](#tag/Cluster/operation/ListClustersOfProject)."
        required: true
        schema:
          type: string
          format: uint64
      - name: page
        in: query
        description: The number of pages.
        schema:
          type: integer
          format: int64
          default: 1
      - name: page_size
        in: query
        description: The size of a page.
        schema:
          type: integer
          format: int64
          default: 10
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                title: ListImportTasksResp
                required:
                - items
                - total
                type: object
                properties:
                  items:
                    type: array
                    description: The import tasks in the cluster in the request page
                      area.
                    items:
                      title: ImportItem
                      type: object
                      properties:
                        metadata:
                          title: ImportMetadata
                          required:
                          - create_timestamp
                          - id
                          type: object
                          properties:
                            id:
                              type: string
                              description: The ID of the import task.
                              format: uint64
                              example: "1"
                            name:
                              type: string
                              description: The name of the import task.
                              example: my_import
                            create_timestamp:
                              type: string
                              description: The creation time of the import task in
                                Unix timestamp seconds (epoch time).
                              format: timestamp
                              example: "1676450597"
                          description: The metadata of the import task.
                        spec:
                          title: ImportSpec
                          required:
                          - source
                          - target
                          type: object
                          properties:
                            source:
                              title: ImportSource
                              required:
                              - format
                              - type
                              - uri
                              type: object
                              properties:
                                type:
                                  type: string
                                  description: |-
                                    The data source type of an import task.

                                    - `"S3"`: import data from Amazon S3
                                    - `"GCS"`: import data from Google Cloud Storage
                                    - `"LOCAL_FILE"`: import data from a local file (only available for [TiDB Serverless](https://docs.pingcap.com/tidbcloud/select-cluster-tier#tidb-serverless) clusters). Before you import from a local file, you need to first upload the file using the [Upload a local file for an import task](#tag/Import/operation/UploadLocalFile) endpoint.

                                    **Note:** Currently, if this import spec is used for a [preview](#tag/Import/operation/PreviewImportData) request, only the `LOCAL_FILE` source type is supported.
                                  example: S3
                                  enum:
                                  - S3
                                  - GCS
                                  - LOCAL_FILE
                                uri:
                                  type: string
                                  description: |-
                                    The data source URI of an import task. The URI scheme must match the data source type. Here are the scheme of each source type:
                                    * `S3`: `s3://`
                                    * `GCS`: `gs://`
                                    * `LOCAL_FILE`: `file://`.

                                    **Note:** If the import source type is `LOCAL_FILE`, just provide the `upload_stub_id` of the uploaded file from the response of [Upload a local file for an import task](#tag/Import/operation/UploadLocalFile), and make it as the data source folder. For example: `file://12345/`.

                                    **Limitation**: If the import source type is `LOCAL_FILE`, only the `CSV` source format type is supported.
                                  example: s3://example-bucket/example-source-data/
                                aws_assume_role_access:
                                  title: AwsAssumeRoleAccess
                                  required:
                                  - assume_role
                                  type: object
                                  properties:
                                    assume_role:
                                      type: string
                                      description: The specific AWS role ARN that
                                        needs to be assumed to access the Amazon S3
                                        data source.
                                      example: arn:aws:iam::999999999999:role/sample-role
                                  description: |-
                                    The settings to access the S3 data by assuming a specific AWS role. This field is only needed if you need to access S3 data by assuming an AWS role.

                                    **Note:** Provide only one of `aws_assume_role_access` and `aws_key_access`. If both `aws_assume_role_access` and `aws_key_access` are provided, an error will be reported.
                                aws_key_access:
                                  title: AwsKeyAccess
                                  required:
                                  - access_key_id
                                  - secret_access_key
                                  type: object
                                  properties:
                                    access_key_id:
                                      type: string
                                      description: The access key ID of the account
                                        to access the data. This information will
                                        be redacted when it is retrieved to obtain
                                        the import task information.
                                      example: YOUR_ACCESS_KEY_ID
                                    secret_access_key:
                                      type: string
                                      description: The secret access key for the account
                                        to access the data. This information will
                                        be redacted when it is retrieved to obtain
                                        the import task information.
                                      example: YOUR_SECRET_ACCESS_KEY
                                  description: |-
                                    The settings to access the S3 data with an access key. This field is only needed if you want to access the S3 data with an access key.

                                    **Note:** Provide only one of `aws_assume_role_access` and `aws_key_access`. If both `aws_assume_role_access` and `aws_key_access` are provided, an error will be reported.
                                format:
                                  title: ImportSourceFormat
                                  required:
                                  - type
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      description: The format type of an import source.
                                      example: CSV
                                      enum:
                                      - CSV
                                      - PARQUET
                                      - SQL
                                      - AURORA_SNAPSHOT
                                    csv_config:
                                      title: ImportSourceCSVConfig
                                      type: object
                                      properties:
                                        delimiter:
                                          type: string
                                          description: The delimiter character used
                                            to separate fields in the CSV data.
                                          default: ","
                                        quote:
                                          type: string
                                          description: The character used to quote
                                            the fields in the CSV data.
                                          default: '"'
                                        backslash_escape:
                                          type: boolean
                                          description: |-
                                            Whether a backslash (`\`) symbol followed by a character should be combined as a whole and treated as an escape sequence in a CSV field. For example, if this parameter is set to `true`, `\n` will be treated as a 'new-line' character. If it is set to `false`, `\n` will be treated as two separate characters: backslash and `n`.

                                            Currently, these are several supported escape sequences: `\0`, `\b`, `\n`, `\r`, `\t`, and `\Z`. If the parameter is set to `true`, but the backslash escape sequence is not recognized, the backslash character is ignored.
                                          default: true
                                        has_header_row:
                                          type: boolean
                                          description: "Whether the CSV data has a\
                                            \ header row, which is not part of the\
                                            \ data. If it is set to `true`, the import\
                                            \ task will use the column names in the\
                                            \ header row to match the column names\
                                            \ in the target table."
                                          default: true
                                      description: The CSV format settings to parse
                                        the source CSV files. This field is only needed
                                        if the source format is CSV.
                                  description: The format settings of the import data
                                    source.
                              description: The data source settings of the import
                                task.
                            target:
                              title: ImportTarget
                              type: object
                              properties:
                                tables:
                                  type: array
                                  description: |-
                                    The settings for each target table that is being imported for the import task. If you leave it empty, the system will scan all the files in the data source using the default file patterns and collect all the tables to import. The files include data files, table schema files, and DB schema files. If you provide a list of tables, only those tables will be imported. For more information about the default file pattern, see [Import CSV Files from Amazon S3 or GCS into TiDB Cloud](https://docs.pingcap.com/tidbcloud/import-csv-files).

                                    **Limitations:**
                                    * Currently, if you want to use a custom filename pattern, you can only specify one table. If all the tables use the default filename pattern, you can specify more than one target table in `tables`.
                                    * It is recommended that you pre-create the target tables before creating an import task. You can do this either by executing the `CREATE TABLE` statement in the cluster or by specifying the table definition in the table creation options.
                                    * If a target table is not created, the import module tries to find a **TABLE SCHEMA FILE** containing the `CREATE TABLE` statement of the table in the data source folder with the name `${db_name}.${table_name}-schema.sql` (for example, `db01.tbl01-schema.sql`). If this file is found, the `CREATE TABLE` statement is automatically executed if the table doesn't exist before the actual import process starts. If the table is still missing after this pre-create step, an error will occur.
                                  items:
                                    title: ImportTargetTable
                                    required:
                                    - database_name
                                    - table_name
                                    type: object
                                    properties:
                                      database_name:
                                        type: string
                                        description: The target database name.
                                        example: db01
                                      table_name:
                                        type: string
                                        description: The target table name.
                                        example: table01
                                      file_name_pattern:
                                        type: string
                                        description: |-
                                          The filename pattern used to map the files in the data source to this target table. The pattern should be a simple glob pattern. Here are some examples:
                                          * `my-data?.csv`: all CSV files starting with `my-data` and one character (such as `my-data1.csv` and `my-data2.csv`) will be imported into the same target table.
                                          * `my-data*.csv`: all CSV files starting with `my-data` will be imported into the same target table.

                                          If no pattern is specified, a default pattern is used. The default pattern will try to find files with this naming convention as the data files for this table: `${db_name}.${table_name}.[numeric_index].${format_suffix}`.

                                          Here are some examples of filenames that can be matched as data files for the table `db01.table01`: `db01.table01.csv`, `db01.table01.00001.csv`.

                                          For more information about the custom file pattern and the default pattern, refer to [Import CSV Files from Amazon S3 or GCS into TiDB Cloud](https://docs.pingcap.com/tidbcloud/import-csv-files).

                                          **Note:** For `LOCAL_FILE` import tasks, use the local file name for this field. The local file name must match the local file name in [Upload a local file for an import task](#tag/Import/operation/UploadLocalFile).
                                        example: data/db01/table01.*.csv
                                    description: ImportTargetTable represents the
                                      settings for importing source data into a single
                                      target table of an import task.
                              description: The target settings of the import task.
                          description: The specification of the import task.
                        status:
                          title: ImportStatus
                          required:
                          - phase
                          type: object
                          properties:
                            phase:
                              type: string
                              description: The current phase that the import task
                                is in.
                              example: IMPORTING
                              enum:
                              - PREPARING
                              - IMPORTING
                              - COMPLETED
                              - FAILED
                              - CANCELING
                              - CANCELED
                            error_message:
                              type: string
                              description: The error message of the import task.
                              example: some error occurs
                            start_timestamp:
                              type: string
                              description: The start timestamp of the import task.
                                The format is Unix timestamp (the seconds elapsed
                                since the Unix epoch)
                              format: timestamp
                              example: "1676450597"
                            end_timestamp:
                              type: string
                              description: The end timestamp of the import task. The
                                format is Unix timestamp (the seconds elapsed since
                                the Unix epoch).
                              format: timestamp
                              example: "1676450897"
                            progress:
                              title: ImportProgress
                              required:
                              - import_progress
                              - validation_progress
                              type: object
                              properties:
                                import_progress:
                                  maximum: 100
                                  type: number
                                  description: The overall importing progress of the
                                    import task.
                                  format: double
                                  example: 59.0
                                validation_progress:
                                  maximum: 100
                                  type: number
                                  description: The overall validation progress of
                                    the import task after the data has been imported
                                    into the target cluster.
                                  format: double
                                  example: 59.0
                              description: The progress of the import task.
                            source_total_size_bytes:
                              type: string
                              description: The total size of the import task's data
                                source. The unit is bytes.
                              format: uint64
                              example: "10737418240"
                          description: The status of the import task.
                      description: ImportItem represents the information of a single
                        import task.
                  total:
                    type: integer
                    description: The total number of import tasks in the cluster.
                    format: int64
                    example: 20
                description: ListImportTasksResp is the response for listing the import
                  tasks of a cluster.
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request GET \
            --url 'https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters/{cluster_id}/imports?page=1&page_size=10'
    post:
      tags:
      - Import
      summary: Create an import task.
      operationId: CreateImportTask
      parameters:
      - name: project_id
        in: path
        description: "The ID of your project. You can get the project ID from the\
          \ response of [List all accessible projects](#tag/Project/operation/ListProjects)."
        required: true
        schema:
          type: string
          format: uint64
      - name: cluster_id
        in: path
        description: "The ID of your cluster that you want to start an import job.\
          \ You can get the cluster ID from the response of [List all clusters in\
          \ a project](#tag/Cluster/operation/ListClustersOfProject)."
        required: true
        schema:
          type: string
          format: uint64
      requestBody:
        content:
          application/json:
            schema:
              title: CreateImportTaskReq
              required:
              - spec
              type: object
              properties:
                name:
                  maxLength: 64
                  type: string
                  description: |-
                    The name of an import task. The maximum length of the name is 64 characters.

                    It is recommended that you use a unique name, so that you can easily identify the import task when you list all import tasks. If the name is not provided, a default name is generated with an `import_` prefix followed by a time string representing the creation time of the import task. For example, `import_2023-01-01T00:00:30Z`.
                  example: import_2023-01-01T00:00:30Z
                spec:
                  title: ImportSpec
                  required:
                  - source
                  - target
                  type: object
                  properties:
                    source:
                      title: ImportSource
                      required:
                      - format
                      - type
                      - uri
                      type: object
                      properties:
                        type:
                          type: string
                          description: |-
                            The data source type of an import task.

                            - `"S3"`: import data from Amazon S3
                            - `"GCS"`: import data from Google Cloud Storage
                            - `"LOCAL_FILE"`: import data from a local file (only available for [TiDB Serverless](https://docs.pingcap.com/tidbcloud/select-cluster-tier#tidb-serverless) clusters). Before you import from a local file, you need to first upload the file using the [Upload a local file for an import task](#tag/Import/operation/UploadLocalFile) endpoint.

                            **Note:** Currently, if this import spec is used for a [preview](#tag/Import/operation/PreviewImportData) request, only the `LOCAL_FILE` source type is supported.
                          example: S3
                          enum:
                          - S3
                          - GCS
                          - LOCAL_FILE
                        uri:
                          type: string
                          description: |-
                            The data source URI of an import task. The URI scheme must match the data source type. Here are the scheme of each source type:
                            * `S3`: `s3://`
                            * `GCS`: `gs://`
                            * `LOCAL_FILE`: `file://`.

                            **Note:** If the import source type is `LOCAL_FILE`, just provide the `upload_stub_id` of the uploaded file from the response of [Upload a local file for an import task](#tag/Import/operation/UploadLocalFile), and make it as the data source folder. For example: `file://12345/`.

                            **Limitation**: If the import source type is `LOCAL_FILE`, only the `CSV` source format type is supported.
                          example: s3://example-bucket/example-source-data/
                        aws_assume_role_access:
                          title: AwsAssumeRoleAccess
                          required:
                          - assume_role
                          type: object
                          properties:
                            assume_role:
                              type: string
                              description: The specific AWS role ARN that needs to
                                be assumed to access the Amazon S3 data source.
                              example: arn:aws:iam::999999999999:role/sample-role
                          description: |-
                            The settings to access the S3 data by assuming a specific AWS role. This field is only needed if you need to access S3 data by assuming an AWS role.

                            **Note:** Provide only one of `aws_assume_role_access` and `aws_key_access`. If both `aws_assume_role_access` and `aws_key_access` are provided, an error will be reported.
                        aws_key_access:
                          title: AwsKeyAccess
                          required:
                          - access_key_id
                          - secret_access_key
                          type: object
                          properties:
                            access_key_id:
                              type: string
                              description: The access key ID of the account to access
                                the data. This information will be redacted when it
                                is retrieved to obtain the import task information.
                              example: YOUR_ACCESS_KEY_ID
                            secret_access_key:
                              type: string
                              description: The secret access key for the account to
                                access the data. This information will be redacted
                                when it is retrieved to obtain the import task information.
                              example: YOUR_SECRET_ACCESS_KEY
                          description: |-
                            The settings to access the S3 data with an access key. This field is only needed if you want to access the S3 data with an access key.

                            **Note:** Provide only one of `aws_assume_role_access` and `aws_key_access`. If both `aws_assume_role_access` and `aws_key_access` are provided, an error will be reported.
                        format:
                          title: ImportSourceFormat
                          required:
                          - type
                          type: object
                          properties:
                            type:
                              type: string
                              description: The format type of an import source.
                              example: CSV
                              enum:
                              - CSV
                              - PARQUET
                              - SQL
                              - AURORA_SNAPSHOT
                            csv_config:
                              title: ImportSourceCSVConfig
                              type: object
                              properties:
                                delimiter:
                                  type: string
                                  description: The delimiter character used to separate
                                    fields in the CSV data.
                                  default: ","
                                quote:
                                  type: string
                                  description: The character used to quote the fields
                                    in the CSV data.
                                  default: '"'
                                backslash_escape:
                                  type: boolean
                                  description: |-
                                    Whether a backslash (`\`) symbol followed by a character should be combined as a whole and treated as an escape sequence in a CSV field. For example, if this parameter is set to `true`, `\n` will be treated as a 'new-line' character. If it is set to `false`, `\n` will be treated as two separate characters: backslash and `n`.

                                    Currently, these are several supported escape sequences: `\0`, `\b`, `\n`, `\r`, `\t`, and `\Z`. If the parameter is set to `true`, but the backslash escape sequence is not recognized, the backslash character is ignored.
                                  default: true
                                has_header_row:
                                  type: boolean
                                  description: "Whether the CSV data has a header\
                                    \ row, which is not part of the data. If it is\
                                    \ set to `true`, the import task will use the\
                                    \ column names in the header row to match the\
                                    \ column names in the target table."
                                  default: true
                              description: The CSV format settings to parse the source
                                CSV files. This field is only needed if the source
                                format is CSV.
                          description: The format settings of the import data source.
                      description: The data source settings of the import task.
                    target:
                      title: ImportTarget
                      type: object
                      properties:
                        tables:
                          type: array
                          description: |-
                            The settings for each target table that is being imported for the import task. If you leave it empty, the system will scan all the files in the data source using the default file patterns and collect all the tables to import. The files include data files, table schema files, and DB schema files. If you provide a list of tables, only those tables will be imported. For more information about the default file pattern, see [Import CSV Files from Amazon S3 or GCS into TiDB Cloud](https://docs.pingcap.com/tidbcloud/import-csv-files).

                            **Limitations:**
                            * Currently, if you want to use a custom filename pattern, you can only specify one table. If all the tables use the default filename pattern, you can specify more than one target table in `tables`.
                            * It is recommended that you pre-create the target tables before creating an import task. You can do this either by executing the `CREATE TABLE` statement in the cluster or by specifying the table definition in the table creation options.
                            * If a target table is not created, the import module tries to find a **TABLE SCHEMA FILE** containing the `CREATE TABLE` statement of the table in the data source folder with the name `${db_name}.${table_name}-schema.sql` (for example, `db01.tbl01-schema.sql`). If this file is found, the `CREATE TABLE` statement is automatically executed if the table doesn't exist before the actual import process starts. If the table is still missing after this pre-create step, an error will occur.
                          items:
                            title: ImportTargetTable
                            required:
                            - database_name
                            - table_name
                            type: object
                            properties:
                              database_name:
                                type: string
                                description: The target database name.
                                example: db01
                              table_name:
                                type: string
                                description: The target table name.
                                example: table01
                              file_name_pattern:
                                type: string
                                description: |-
                                  The filename pattern used to map the files in the data source to this target table. The pattern should be a simple glob pattern. Here are some examples:
                                  * `my-data?.csv`: all CSV files starting with `my-data` and one character (such as `my-data1.csv` and `my-data2.csv`) will be imported into the same target table.
                                  * `my-data*.csv`: all CSV files starting with `my-data` will be imported into the same target table.

                                  If no pattern is specified, a default pattern is used. The default pattern will try to find files with this naming convention as the data files for this table: `${db_name}.${table_name}.[numeric_index].${format_suffix}`.

                                  Here are some examples of filenames that can be matched as data files for the table `db01.table01`: `db01.table01.csv`, `db01.table01.00001.csv`.

                                  For more information about the custom file pattern and the default pattern, refer to [Import CSV Files from Amazon S3 or GCS into TiDB Cloud](https://docs.pingcap.com/tidbcloud/import-csv-files).

                                  **Note:** For `LOCAL_FILE` import tasks, use the local file name for this field. The local file name must match the local file name in [Upload a local file for an import task](#tag/Import/operation/UploadLocalFile).
                                example: data/db01/table01.*.csv
                            description: ImportTargetTable represents the settings
                              for importing source data into a single target table
                              of an import task.
                      description: The target settings of the import task.
                  description: The specifications of the import task.
                options:
                  title: CreateImportTaskOptions
                  type: object
                  properties:
                    pre_create_tables:
                      type: array
                      description: |-
                        The table definition of pre-created tables.

                        **Note**: The name of the pre-created tables should match one of the target tables. Otherwise, the table will be ignored and won't be created
                      items:
                        title: TableDefinition
                        required:
                        - database_name
                        - schema
                        - table_name
                        type: object
                        properties:
                          database_name:
                            type: string
                            description: The database name of the table.
                            example: db01
                          table_name:
                            type: string
                            description: The table name of the table.
                            example: table01
                          schema:
                            title: TableSchema
                            required:
                            - column_definitions
                            type: object
                            properties:
                              column_definitions:
                                type: array
                                description: The column definition for each column
                                  in the table.
                                example:
                                - column_name: id
                                  column_type: INTEGER
                                - column_name: column01
                                  column_type: VARCHAR(255)
                                items:
                                  title: ColumnDefinition
                                  required:
                                  - column_name
                                  - column_type
                                  type: object
                                  properties:
                                    column_name:
                                      type: string
                                      description: The column name.
                                      example: column01
                                    column_type:
                                      type: string
                                      description: The column type.
                                      example: VARCHAR(255)
                                  description: ColumnDefinition is the definition
                                    of a column in a table.
                              primary_key_columns:
                                type: array
                                description: The primary key column names for the
                                  table. This is optional. The primary key is taken
                                  into account when the table is pre-created before
                                  an import task is started.
                                example:
                                - id
                                items:
                                  type: string
                            description: The schema for the table.
                        description: TableDefinition is the definition of a table
                          so that the table can be created with this information.
                  description: The additional options for creating an import task.
              description: CreateImportTaskReq is the request to create an import
                task for a cluster.
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                title: CreateImportTaskResp
                required:
                - id
                type: object
                properties:
                  id:
                    type: string
                    description: The ID of the import task.
                    format: uint64
                    example: "12345"
                description: CreateImportTaskResp is the response to the creation
                  of an import task.
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request POST \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters/{cluster_id}/imports \
            --header 'content-type: application/json' \
            --data '{"name":"import_2023-01-01T00:00:30Z","spec":{"source":{"type":"S3","uri":"s3://example-bucket/example-source-data/","aws_assume_role_access":{"assume_role":"arn:aws:iam::999999999999:role/sample-role"},"aws_key_access":{"access_key_id":"YOUR_ACCESS_KEY_ID","secret_access_key":"YOUR_SECRET_ACCESS_KEY"},"format":{"type":"CSV","csv_config":{"delimiter":",","quote":"\"","backslash_escape":true,"has_header_row":true}}},"target":{"tables":[{"database_name":"db01","table_name":"table01","file_name_pattern":"data/db01/table01.*.csv"}]}},"options":{"pre_create_tables":[{"database_name":"db01","table_name":"table01","schema":{"column_definitions":[{"column_name":"id","column_type":"INTEGER"},{"column_name":"column01","column_type":"VARCHAR(255)"}],"primary_key_columns":["id"]}}]}}'
      x-codegen-request-body-name: body
  /api/v1beta/projects/{project_id}/clusters/{cluster_id}/imports/preview:
    post:
      tags:
      - Import
      summary: Preview data before starting an import task.
      description: "Before you create an import task, you can preview the data using\
        \ this endpoint and make sure that the import task is configured as intended.\
        \ The preview result is organized by tables."
      operationId: PreviewImportData
      parameters:
      - name: project_id
        in: path
        description: "The ID of your project. You can get the project ID from the\
          \ response of [List all accessible projects](#tag/Project/operation/ListProjects)."
        required: true
        schema:
          type: string
          format: uint64
      - name: cluster_id
        in: path
        description: "The ID of your cluster that you want to start an import task.\
          \ You can get the cluster ID from the response of [List all clusters in\
          \ a project](#tag/Cluster/operation/ListClustersOfProject)."
        required: true
        schema:
          type: string
          format: uint64
      requestBody:
        content:
          application/json:
            schema:
              title: PreviewImportDataReq
              required:
              - spec
              type: object
              properties:
                spec:
                  title: ImportSpec
                  required:
                  - source
                  - target
                  type: object
                  properties:
                    source:
                      title: ImportSource
                      required:
                      - format
                      - type
                      - uri
                      type: object
                      properties:
                        type:
                          type: string
                          description: |-
                            The data source type of an import task.

                            - `"S3"`: import data from Amazon S3
                            - `"GCS"`: import data from Google Cloud Storage
                            - `"LOCAL_FILE"`: import data from a local file (only available for [TiDB Serverless](https://docs.pingcap.com/tidbcloud/select-cluster-tier#tidb-serverless) clusters). Before you import from a local file, you need to first upload the file using the [Upload a local file for an import task](#tag/Import/operation/UploadLocalFile) endpoint.

                            **Note:** Currently, if this import spec is used for a [preview](#tag/Import/operation/PreviewImportData) request, only the `LOCAL_FILE` source type is supported.
                          example: S3
                          enum:
                          - S3
                          - GCS
                          - LOCAL_FILE
                        uri:
                          type: string
                          description: |-
                            The data source URI of an import task. The URI scheme must match the data source type. Here are the scheme of each source type:
                            * `S3`: `s3://`
                            * `GCS`: `gs://`
                            * `LOCAL_FILE`: `file://`.

                            **Note:** If the import source type is `LOCAL_FILE`, just provide the `upload_stub_id` of the uploaded file from the response of [Upload a local file for an import task](#tag/Import/operation/UploadLocalFile), and make it as the data source folder. For example: `file://12345/`.

                            **Limitation**: If the import source type is `LOCAL_FILE`, only the `CSV` source format type is supported.
                          example: s3://example-bucket/example-source-data/
                        aws_assume_role_access:
                          title: AwsAssumeRoleAccess
                          required:
                          - assume_role
                          type: object
                          properties:
                            assume_role:
                              type: string
                              description: The specific AWS role ARN that needs to
                                be assumed to access the Amazon S3 data source.
                              example: arn:aws:iam::999999999999:role/sample-role
                          description: |-
                            The settings to access the S3 data by assuming a specific AWS role. This field is only needed if you need to access S3 data by assuming an AWS role.

                            **Note:** Provide only one of `aws_assume_role_access` and `aws_key_access`. If both `aws_assume_role_access` and `aws_key_access` are provided, an error will be reported.
                        aws_key_access:
                          title: AwsKeyAccess
                          required:
                          - access_key_id
                          - secret_access_key
                          type: object
                          properties:
                            access_key_id:
                              type: string
                              description: The access key ID of the account to access
                                the data. This information will be redacted when it
                                is retrieved to obtain the import task information.
                              example: YOUR_ACCESS_KEY_ID
                            secret_access_key:
                              type: string
                              description: The secret access key for the account to
                                access the data. This information will be redacted
                                when it is retrieved to obtain the import task information.
                              example: YOUR_SECRET_ACCESS_KEY
                          description: |-
                            The settings to access the S3 data with an access key. This field is only needed if you want to access the S3 data with an access key.

                            **Note:** Provide only one of `aws_assume_role_access` and `aws_key_access`. If both `aws_assume_role_access` and `aws_key_access` are provided, an error will be reported.
                        format:
                          title: ImportSourceFormat
                          required:
                          - type
                          type: object
                          properties:
                            type:
                              type: string
                              description: The format type of an import source.
                              example: CSV
                              enum:
                              - CSV
                              - PARQUET
                              - SQL
                              - AURORA_SNAPSHOT
                            csv_config:
                              title: ImportSourceCSVConfig
                              type: object
                              properties:
                                delimiter:
                                  type: string
                                  description: The delimiter character used to separate
                                    fields in the CSV data.
                                  default: ","
                                quote:
                                  type: string
                                  description: The character used to quote the fields
                                    in the CSV data.
                                  default: '"'
                                backslash_escape:
                                  type: boolean
                                  description: |-
                                    Whether a backslash (`\`) symbol followed by a character should be combined as a whole and treated as an escape sequence in a CSV field. For example, if this parameter is set to `true`, `\n` will be treated as a 'new-line' character. If it is set to `false`, `\n` will be treated as two separate characters: backslash and `n`.

                                    Currently, these are several supported escape sequences: `\0`, `\b`, `\n`, `\r`, `\t`, and `\Z`. If the parameter is set to `true`, but the backslash escape sequence is not recognized, the backslash character is ignored.
                                  default: true
                                has_header_row:
                                  type: boolean
                                  description: "Whether the CSV data has a header\
                                    \ row, which is not part of the data. If it is\
                                    \ set to `true`, the import task will use the\
                                    \ column names in the header row to match the\
                                    \ column names in the target table."
                                  default: true
                              description: The CSV format settings to parse the source
                                CSV files. This field is only needed if the source
                                format is CSV.
                          description: The format settings of the import data source.
                      description: The data source settings of the import task.
                    target:
                      title: ImportTarget
                      type: object
                      properties:
                        tables:
                          type: array
                          description: |-
                            The settings for each target table that is being imported for the import task. If you leave it empty, the system will scan all the files in the data source using the default file patterns and collect all the tables to import. The files include data files, table schema files, and DB schema files. If you provide a list of tables, only those tables will be imported. For more information about the default file pattern, see [Import CSV Files from Amazon S3 or GCS into TiDB Cloud](https://docs.pingcap.com/tidbcloud/import-csv-files).

                            **Limitations:**
                            * Currently, if you want to use a custom filename pattern, you can only specify one table. If all the tables use the default filename pattern, you can specify more than one target table in `tables`.
                            * It is recommended that you pre-create the target tables before creating an import task. You can do this either by executing the `CREATE TABLE` statement in the cluster or by specifying the table definition in the table creation options.
                            * If a target table is not created, the import module tries to find a **TABLE SCHEMA FILE** containing the `CREATE TABLE` statement of the table in the data source folder with the name `${db_name}.${table_name}-schema.sql` (for example, `db01.tbl01-schema.sql`). If this file is found, the `CREATE TABLE` statement is automatically executed if the table doesn't exist before the actual import process starts. If the table is still missing after this pre-create step, an error will occur.
                          items:
                            title: ImportTargetTable
                            required:
                            - database_name
                            - table_name
                            type: object
                            properties:
                              database_name:
                                type: string
                                description: The target database name.
                                example: db01
                              table_name:
                                type: string
                                description: The target table name.
                                example: table01
                              file_name_pattern:
                                type: string
                                description: |-
                                  The filename pattern used to map the files in the data source to this target table. The pattern should be a simple glob pattern. Here are some examples:
                                  * `my-data?.csv`: all CSV files starting with `my-data` and one character (such as `my-data1.csv` and `my-data2.csv`) will be imported into the same target table.
                                  * `my-data*.csv`: all CSV files starting with `my-data` will be imported into the same target table.

                                  If no pattern is specified, a default pattern is used. The default pattern will try to find files with this naming convention as the data files for this table: `${db_name}.${table_name}.[numeric_index].${format_suffix}`.

                                  Here are some examples of filenames that can be matched as data files for the table `db01.table01`: `db01.table01.csv`, `db01.table01.00001.csv`.

                                  For more information about the custom file pattern and the default pattern, refer to [Import CSV Files from Amazon S3 or GCS into TiDB Cloud](https://docs.pingcap.com/tidbcloud/import-csv-files).

                                  **Note:** For `LOCAL_FILE` import tasks, use the local file name for this field. The local file name must match the local file name in [Upload a local file for an import task](#tag/Import/operation/UploadLocalFile).
                                example: data/db01/table01.*.csv
                            description: ImportTargetTable represents the settings
                              for importing source data into a single target table
                              of an import task.
                      description: The target settings of the import task.
                  description: |-
                    The specifications of the import task.

                    **Note:** Currently, you can only preview locally uploaded files. This means that only data sources with the `LOCAL_FILE` source type are supported. If you specify a data source other than `LOCAL_FILE`, errors will occur.
                limit_rows_count:
                  maximum: 20
                  minimum: 1
                  type: integer
                  description: The maximum number of rows to preview for each table.
                  format: int64
                  example: 10
                  default: 10
              description: PreviewImportDataReq is the request to preview the source
                data before starting an import task for a cluster.
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                title: PreviewImportDataResp
                type: object
                properties:
                  table_previews:
                    type: array
                    description: The preview results for each target table from the
                      import task specification.
                    items:
                      title: TablePreview
                      required:
                      - data_preview
                      - database_name
                      - table_name
                      type: object
                      properties:
                        database_name:
                          type: string
                          description: The database name of the preview table.
                          example: db01
                        table_name:
                          type: string
                          description: The table name of the preview table.
                          example: table01
                        schema_preview:
                          title: TableSchema
                          required:
                          - column_definitions
                          type: object
                          properties:
                            column_definitions:
                              type: array
                              description: The column definition for each column in
                                the table.
                              example:
                              - column_name: id
                                column_type: INTEGER
                              - column_name: column01
                                column_type: VARCHAR(255)
                              items:
                                title: ColumnDefinition
                                required:
                                - column_name
                                - column_type
                                type: object
                                properties:
                                  column_name:
                                    type: string
                                    description: The column name.
                                    example: column01
                                  column_type:
                                    type: string
                                    description: The column type.
                                    example: VARCHAR(255)
                                description: ColumnDefinition is the definition of
                                  a column in a table.
                            primary_key_columns:
                              type: array
                              description: The primary key column names for the table.
                                This is optional. The primary key is taken into account
                                when the table is pre-created before an import task
                                is started.
                              example:
                              - id
                              items:
                                type: string
                          description: The schema for the preview table.
                        data_preview:
                          title: TableData
                          required:
                          - rows
                          type: object
                          properties:
                            column_names:
                              type: array
                              description: The column names for the following data
                                samples from a table.
                              example:
                              - id
                              - column01
                              items:
                                type: string
                            rows:
                              type: array
                              description: The rows sampled from a table.
                              items:
                                title: TableDataRow
                                required:
                                - columns
                                type: object
                                properties:
                                  columns:
                                    type: array
                                    description: The columns extracted from a table
                                      row.
                                    example:
                                    - "1"
                                    - abc
                                    items:
                                      type: string
                                description: TableDataRow is a single row in a table.
                          description: The data sample for the preview table.
                      description: TablePreview is the preview result for a single
                        table.
                description: PreviewImportDataResp is the response of the source data
                  preview before starting an import task.
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request POST \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters/{cluster_id}/imports/preview \
            --header 'content-type: application/json' \
            --data '{"spec":{"source":{"type":"S3","uri":"s3://example-bucket/example-source-data/","aws_assume_role_access":{"assume_role":"arn:aws:iam::999999999999:role/sample-role"},"aws_key_access":{"access_key_id":"YOUR_ACCESS_KEY_ID","secret_access_key":"YOUR_SECRET_ACCESS_KEY"},"format":{"type":"CSV","csv_config":{"delimiter":",","quote":"\"","backslash_escape":true,"has_header_row":true}}},"target":{"tables":[{"database_name":"db01","table_name":"table01","file_name_pattern":"data/db01/table01.*.csv"}]}},"limit_rows_count":10}'
      x-codegen-request-body-name: body
  /api/v1beta/projects/{project_id}/clusters/{cluster_id}/imports/role_info:
    get:
      tags:
      - Import
      summary: Retrieve the role information for import tasks on a cluster.
      description: "Retrieve the role information for import tasks on a cluster, so\
        \ that you can configure the access for the import tasks to retrieve the data\
        \ from the data source. For more information on how to configure the access\
        \ for the import tasks, refer to [Configure Amazon S3 Access and GCS Access](https://docs.pingcap.com/tidbcloud/config-s3-and-gcs-access)."
      operationId: GetImportTaskRoleInfo
      parameters:
      - name: project_id
        in: path
        description: "The ID of your project. You can get the project ID from the\
          \ response of [List all accessible projects](#tag/Project/operation/ListProjects)."
        required: true
        schema:
          type: string
          format: uint64
      - name: cluster_id
        in: path
        description: "The ID of your cluster. You can get the cluster ID from the\
          \ response of [List all clusters in a project](#tag/Cluster/operation/ListClustersOfProject)."
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                title: ImportTaskRoleInfo
                type: object
                properties:
                  aws_import_role:
                    title: AwsImportTaskRoleInfo
                    required:
                    - account_id
                    - external_id
                    type: object
                    properties:
                      account_id:
                        type: string
                        description: The account ID under which the import tasks for
                          this cluster are running.
                        example: "999999999999"
                      external_id:
                        type: string
                        description: "The unique external ID that binds to the cluster,\
                          \ which is a long string. When an import task starts and\
                          \ attempts to assume a specified role, it automatically\
                          \ attaches this external ID. This means that you can configure\
                          \ this external ID in the assumed role's trust relationship,\
                          \ so that only the import task of that specified cluster\
                          \ can access the data by assuming the role. This can provide\
                          \ additional security."
                        example: abcdefghijklmnopqrstuvwxyz0123456789xxxxxxxxxxxxxx
                    description: "The import role information for an AWS cluster.\
                      \ Only TiDB clusters on AWS return this information. If the\
                      \ TiDB cluster is deployed on GCP, this field is not returned."
                  gcp_import_role:
                    title: GcpImportTaskRoleInfo
                    required:
                    - account_id
                    type: object
                    properties:
                      account_id:
                        type: string
                        description: The account ID under which the import tasks for
                          this cluster are running.
                        example: example-account@example.com
                    description: "The import role information for a GCP cluster. Only\
                      \ TiDB clusters on GCP return this information. If the TiDB\
                      \ cluster is deployed on AWS, this field is not returned."
                description: ImportTaskRoleInfo is the role information for import
                  tasks on a cluster. You can use this information to configure the
                  access for the import tasks to retrieve the data from the data source.
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request GET \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters/{cluster_id}/imports/role_info
  /api/v1beta/projects/{project_id}/clusters/{cluster_id}/imports/upload_file:
    post:
      tags:
      - Import
      summary: Upload a local file for an import task.
      description: |-
        If you need to import data from a local file, you must first upload the file using this endpoint before you create an import task using the [Create an import task](#tag/Import/operation/CreateImportTask) endpoint.

        Uploading a local file is only available for TiDB Serverless clusters.
      operationId: UploadLocalFile
      parameters:
      - name: project_id
        in: path
        description: "The ID of your project. You can get the project ID from the\
          \ response of [List all accessible projects](#tag/Project/operation/ListProjects)."
        required: true
        schema:
          type: string
          format: uint64
      - name: cluster_id
        in: path
        description: "The ID of your cluster. You can get the cluster ID from the\
          \ response of [List all clusters in a project](#tag/Cluster/operation/ListClustersOfProject)."
        required: true
        schema:
          type: string
          format: uint64
      requestBody:
        content:
          application/json:
            schema:
              title: UploadLocalFileReq
              required:
              - local_file_name
              - payload
              type: object
              properties:
                local_file_name:
                  maxLength: 255
                  type: string
                  description: |-
                    The local file name to be uploaded. Only CSV files are supported. The maximum length of the file name is 255 characters.

                    **Note:**
                    * Provide only the basename of the file. For example, instead of specifying `/foo/bar/example_file.csv`, specify only `example_file.csv`. If you do specify a full file path, this endpoint will only use the basename as the file name.
                    * The directory name is not supported. For example: `/foobar/` is invalid.
                  example: test.csv
                payload:
                  title: LocalFilePayload
                  required:
                  - content
                  - total_size_bytes
                  type: object
                  properties:
                    total_size_bytes:
                      type: string
                      description: |-
                        The total size of the **ACTUAL** local file contents, not the total size of the `content` field.

                        The unit is byte, and the maximum value is `52428800` (50 MiB). If the given value of `total_size_bytes` exceeds the maximum value, an error will be reported.
                      format: uint64
                      example: "83"
                    content:
                      maxLength: 52428800
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      description: |-
                        The base64-encoded content of the local file to be imported. The maximum size of the file should be 52428800 (50 MiB).

                        **Note:** Before providing the content, process the file by taking the following steps:
                        1. Compress the file using the **gzip** algorithm.
                        2. Encode the compressed data using the **base64** algorithm.
                      format: byte
                      example: H4sIABbP9mMAAyXHOwoAIQwFwN5jvPoh5neggI2w9Z7fSJqBOZt/fvLQIURmLgFlrqE9BbVmPQOt5j0HvRa9AKN2AUwss6dTAAAA
                  description: The payload to upload the local file content for an
                    import task.
              description: UploadLocalFileReq is the request to upload an import task.
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                title: UploadLocalFileResp
                required:
                - upload_stub_id
                type: object
                properties:
                  upload_stub_id:
                    type: string
                    description: "The stub ID for the uploaded file. You can use this\
                      \ stub ID to [create an import task](#tag/Import/operation/CreateImportTask)."
                    format: uint64
                    example: "123"
                description: UploadLocalFileResp is the response to upload an import
                  task.
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request POST \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters/{cluster_id}/imports/upload_file \
            --header 'content-type: application/json' \
            --data '{"local_file_name":"test.csv","payload":{"total_size_bytes":"83","content":"H4sIABbP9mMAAyXHOwoAIQwFwN5jvPoh5neggI2w9Z7fSJqBOZt/fvLQIURmLgFlrqE9BbVmPQOt5j0HvRa9AKN2AUwss6dTAAAA"}}'
      x-codegen-request-body-name: body
  /api/v1beta/projects/{project_id}/clusters/{cluster_id}/imports/{import_id}:
    get:
      tags:
      - Import
      summary: Get an import task.
      operationId: GetImportTask
      parameters:
      - name: project_id
        in: path
        description: "The ID of your project. You can get the project ID from the\
          \ response of [List all accessible projects](#tag/Project/operation/ListProjects)."
        required: true
        schema:
          type: string
          format: uint64
      - name: cluster_id
        in: path
        description: "The ID of your cluster. You can get the cluster ID from the\
          \ response of [List all clusters in a project](#tag/Cluster/operation/ListClustersOfProject)."
        required: true
        schema:
          type: string
          format: uint64
      - name: import_id
        in: path
        description: "The ID of your import task. You can get the import ID from the\
          \ response of [List import tasks for a cluster](#tag/Project/operation/ListImportTasks)."
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                title: ImportItem
                type: object
                properties:
                  metadata:
                    title: ImportMetadata
                    required:
                    - create_timestamp
                    - id
                    type: object
                    properties:
                      id:
                        type: string
                        description: The ID of the import task.
                        format: uint64
                        example: "1"
                      name:
                        type: string
                        description: The name of the import task.
                        example: my_import
                      create_timestamp:
                        type: string
                        description: The creation time of the import task in Unix
                          timestamp seconds (epoch time).
                        format: timestamp
                        example: "1676450597"
                    description: The metadata of the import task.
                  spec:
                    title: ImportSpec
                    required:
                    - source
                    - target
                    type: object
                    properties:
                      source:
                        title: ImportSource
                        required:
                        - format
                        - type
                        - uri
                        type: object
                        properties:
                          type:
                            type: string
                            description: |-
                              The data source type of an import task.

                              - `"S3"`: import data from Amazon S3
                              - `"GCS"`: import data from Google Cloud Storage
                              - `"LOCAL_FILE"`: import data from a local file (only available for [TiDB Serverless](https://docs.pingcap.com/tidbcloud/select-cluster-tier#tidb-serverless) clusters). Before you import from a local file, you need to first upload the file using the [Upload a local file for an import task](#tag/Import/operation/UploadLocalFile) endpoint.

                              **Note:** Currently, if this import spec is used for a [preview](#tag/Import/operation/PreviewImportData) request, only the `LOCAL_FILE` source type is supported.
                            example: S3
                            enum:
                            - S3
                            - GCS
                            - LOCAL_FILE
                          uri:
                            type: string
                            description: |-
                              The data source URI of an import task. The URI scheme must match the data source type. Here are the scheme of each source type:
                              * `S3`: `s3://`
                              * `GCS`: `gs://`
                              * `LOCAL_FILE`: `file://`.

                              **Note:** If the import source type is `LOCAL_FILE`, just provide the `upload_stub_id` of the uploaded file from the response of [Upload a local file for an import task](#tag/Import/operation/UploadLocalFile), and make it as the data source folder. For example: `file://12345/`.

                              **Limitation**: If the import source type is `LOCAL_FILE`, only the `CSV` source format type is supported.
                            example: s3://example-bucket/example-source-data/
                          aws_assume_role_access:
                            title: AwsAssumeRoleAccess
                            required:
                            - assume_role
                            type: object
                            properties:
                              assume_role:
                                type: string
                                description: The specific AWS role ARN that needs
                                  to be assumed to access the Amazon S3 data source.
                                example: arn:aws:iam::999999999999:role/sample-role
                            description: |-
                              The settings to access the S3 data by assuming a specific AWS role. This field is only needed if you need to access S3 data by assuming an AWS role.

                              **Note:** Provide only one of `aws_assume_role_access` and `aws_key_access`. If both `aws_assume_role_access` and `aws_key_access` are provided, an error will be reported.
                          aws_key_access:
                            title: AwsKeyAccess
                            required:
                            - access_key_id
                            - secret_access_key
                            type: object
                            properties:
                              access_key_id:
                                type: string
                                description: The access key ID of the account to access
                                  the data. This information will be redacted when
                                  it is retrieved to obtain the import task information.
                                example: YOUR_ACCESS_KEY_ID
                              secret_access_key:
                                type: string
                                description: The secret access key for the account
                                  to access the data. This information will be redacted
                                  when it is retrieved to obtain the import task information.
                                example: YOUR_SECRET_ACCESS_KEY
                            description: |-
                              The settings to access the S3 data with an access key. This field is only needed if you want to access the S3 data with an access key.

                              **Note:** Provide only one of `aws_assume_role_access` and `aws_key_access`. If both `aws_assume_role_access` and `aws_key_access` are provided, an error will be reported.
                          format:
                            title: ImportSourceFormat
                            required:
                            - type
                            type: object
                            properties:
                              type:
                                type: string
                                description: The format type of an import source.
                                example: CSV
                                enum:
                                - CSV
                                - PARQUET
                                - SQL
                                - AURORA_SNAPSHOT
                              csv_config:
                                title: ImportSourceCSVConfig
                                type: object
                                properties:
                                  delimiter:
                                    type: string
                                    description: The delimiter character used to separate
                                      fields in the CSV data.
                                    default: ","
                                  quote:
                                    type: string
                                    description: The character used to quote the fields
                                      in the CSV data.
                                    default: '"'
                                  backslash_escape:
                                    type: boolean
                                    description: |-
                                      Whether a backslash (`\`) symbol followed by a character should be combined as a whole and treated as an escape sequence in a CSV field. For example, if this parameter is set to `true`, `\n` will be treated as a 'new-line' character. If it is set to `false`, `\n` will be treated as two separate characters: backslash and `n`.

                                      Currently, these are several supported escape sequences: `\0`, `\b`, `\n`, `\r`, `\t`, and `\Z`. If the parameter is set to `true`, but the backslash escape sequence is not recognized, the backslash character is ignored.
                                    default: true
                                  has_header_row:
                                    type: boolean
                                    description: "Whether the CSV data has a header\
                                      \ row, which is not part of the data. If it\
                                      \ is set to `true`, the import task will use\
                                      \ the column names in the header row to match\
                                      \ the column names in the target table."
                                    default: true
                                description: The CSV format settings to parse the
                                  source CSV files. This field is only needed if the
                                  source format is CSV.
                            description: The format settings of the import data source.
                        description: The data source settings of the import task.
                      target:
                        title: ImportTarget
                        type: object
                        properties:
                          tables:
                            type: array
                            description: |-
                              The settings for each target table that is being imported for the import task. If you leave it empty, the system will scan all the files in the data source using the default file patterns and collect all the tables to import. The files include data files, table schema files, and DB schema files. If you provide a list of tables, only those tables will be imported. For more information about the default file pattern, see [Import CSV Files from Amazon S3 or GCS into TiDB Cloud](https://docs.pingcap.com/tidbcloud/import-csv-files).

                              **Limitations:**
                              * Currently, if you want to use a custom filename pattern, you can only specify one table. If all the tables use the default filename pattern, you can specify more than one target table in `tables`.
                              * It is recommended that you pre-create the target tables before creating an import task. You can do this either by executing the `CREATE TABLE` statement in the cluster or by specifying the table definition in the table creation options.
                              * If a target table is not created, the import module tries to find a **TABLE SCHEMA FILE** containing the `CREATE TABLE` statement of the table in the data source folder with the name `${db_name}.${table_name}-schema.sql` (for example, `db01.tbl01-schema.sql`). If this file is found, the `CREATE TABLE` statement is automatically executed if the table doesn't exist before the actual import process starts. If the table is still missing after this pre-create step, an error will occur.
                            items:
                              title: ImportTargetTable
                              required:
                              - database_name
                              - table_name
                              type: object
                              properties:
                                database_name:
                                  type: string
                                  description: The target database name.
                                  example: db01
                                table_name:
                                  type: string
                                  description: The target table name.
                                  example: table01
                                file_name_pattern:
                                  type: string
                                  description: |-
                                    The filename pattern used to map the files in the data source to this target table. The pattern should be a simple glob pattern. Here are some examples:
                                    * `my-data?.csv`: all CSV files starting with `my-data` and one character (such as `my-data1.csv` and `my-data2.csv`) will be imported into the same target table.
                                    * `my-data*.csv`: all CSV files starting with `my-data` will be imported into the same target table.

                                    If no pattern is specified, a default pattern is used. The default pattern will try to find files with this naming convention as the data files for this table: `${db_name}.${table_name}.[numeric_index].${format_suffix}`.

                                    Here are some examples of filenames that can be matched as data files for the table `db01.table01`: `db01.table01.csv`, `db01.table01.00001.csv`.

                                    For more information about the custom file pattern and the default pattern, refer to [Import CSV Files from Amazon S3 or GCS into TiDB Cloud](https://docs.pingcap.com/tidbcloud/import-csv-files).

                                    **Note:** For `LOCAL_FILE` import tasks, use the local file name for this field. The local file name must match the local file name in [Upload a local file for an import task](#tag/Import/operation/UploadLocalFile).
                                  example: data/db01/table01.*.csv
                              description: ImportTargetTable represents the settings
                                for importing source data into a single target table
                                of an import task.
                        description: The target settings of the import task.
                    description: The specification of the import task.
                  status:
                    title: ImportStatus
                    required:
                    - phase
                    type: object
                    properties:
                      phase:
                        type: string
                        description: The current phase that the import task is in.
                        example: IMPORTING
                        enum:
                        - PREPARING
                        - IMPORTING
                        - COMPLETED
                        - FAILED
                        - CANCELING
                        - CANCELED
                      error_message:
                        type: string
                        description: The error message of the import task.
                        example: some error occurs
                      start_timestamp:
                        type: string
                        description: The start timestamp of the import task. The format
                          is Unix timestamp (the seconds elapsed since the Unix epoch)
                        format: timestamp
                        example: "1676450597"
                      end_timestamp:
                        type: string
                        description: The end timestamp of the import task. The format
                          is Unix timestamp (the seconds elapsed since the Unix epoch).
                        format: timestamp
                        example: "1676450897"
                      progress:
                        title: ImportProgress
                        required:
                        - import_progress
                        - validation_progress
                        type: object
                        properties:
                          import_progress:
                            maximum: 100
                            type: number
                            description: The overall importing progress of the import
                              task.
                            format: double
                            example: 59.0
                          validation_progress:
                            maximum: 100
                            type: number
                            description: The overall validation progress of the import
                              task after the data has been imported into the target
                              cluster.
                            format: double
                            example: 59.0
                        description: The progress of the import task.
                      source_total_size_bytes:
                        type: string
                        description: The total size of the import task's data source.
                          The unit is bytes.
                        format: uint64
                        example: "10737418240"
                    description: The status of the import task.
                description: ImportItem represents the information of a single import
                  task.
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request GET \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters/{cluster_id}/imports/{import_id}
    patch:
      tags:
      - Import
      summary: Update an import task.
      description: "Update an import task from a cluster. Currently, this endpoint\
        \ only supports canceling the import task if the current phase of the import\
        \ task is `PREPARING` or `IMPORTING`."
      operationId: UpdateImportTask
      parameters:
      - name: project_id
        in: path
        description: "The ID of your project. You can get the project ID from the\
          \ response of [List all accessible projects](#tag/Project/operation/ListProjects)."
        required: true
        schema:
          type: string
          format: uint64
      - name: cluster_id
        in: path
        description: "The ID of your cluster. You can get the cluster ID from the\
          \ response of [List all clusters in a project](#tag/Cluster/operation/ListClustersOfProject)."
        required: true
        schema:
          type: string
          format: uint64
      - name: import_id
        in: path
        description: "The ID of the import task. You can get the import ID from the\
          \ response of [List import tasks for a cluster](#tag/Project/operation/ListImportTasks)."
        required: true
        schema:
          type: string
          format: uint64
      requestBody:
        content:
          application/json:
            schema:
              title: UpdateImportTaskReq
              required:
              - action
              type: object
              properties:
                action:
                  type: string
                  description: |-
                    The action to apply to the import task.

                    **Limitation:**
                    Currently, only `CANCEL` is supported when the import task is in the `PREPARING` or `IMPORTING` phase, meaning that the import task will be cancelled.
                  example: CANCEL
                  enum:
                  - CANCEL
              description: UpdateImportTaskReq is the request to update an import
                task.
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request PATCH \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters/{cluster_id}/imports/{import_id} \
            --header 'content-type: application/json' \
            --data '{"action":"CANCEL"}'
      x-codegen-request-body-name: body
  /api/v1beta/projects/{project_id}/clusters/{cluster_id}/private_endpoint_service:
    get:
      tags:
      - Cluster
      summary: Retrieve the private endpoint service information for a cluster.
      description: |-
        - For TiDB Dedicated clusters, you can retrieve the private endpoint service information for a cluster.
        - For TiDB Serverless clusters, you cannot create or manage private endpoint service via API.
      operationId: GetPrivateEndpointService
      parameters:
      - name: project_id
        in: path
        description: "The ID of the project. You can get the project ID from the response\
          \ of [List all accessible projects](#tag/Project/operation/ListProjects)."
        required: true
        schema:
          type: string
          format: uint64
      - name: cluster_id
        in: path
        description: The ID of the cluster.
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                title: GetPrivateEndpointServiceResp
                required:
                - private_endpoint_service
                type: object
                properties:
                  private_endpoint_service:
                    type: object
                    properties:
                      cloud_provider:
                        type: string
                        description: |-
                          The cloud provider on which the private endpoint service is hosted.
                          - `"AWS"`: the Amazon Web Services cloud provider
                          - `"GCP"`: the Google Cloud cloud provider
                        format: string
                        example: AWS
                        enum:
                        - AWS
                        - GCP
                      name:
                        type: string
                        description: "The name of the private endpoint service, which\
                          \ is used for connection."
                        format: string
                        example: com.amazonaws.vpce.us-west-2.vpce-svc-01234567890123456
                      status:
                        type: string
                        description: The status of the private endpoint service.
                        format: enum
                        example: ACTIVE
                        enum:
                        - CREATING
                        - ACTIVE
                        - DELETING
                      dns_name:
                        type: string
                        description: The DNS name of the private endpoint service.
                        format: string
                        example: privatelink-tidb.01234567890.clusters.tidb-cloud.com
                      port:
                        type: integer
                        description: The port of the private endpoint service.
                        format: int32
                        example: 4000
                      az_ids:
                        type: array
                        description: Availability zones for the private endpoint service.
                          This field is only applicable when the `cloud_provider`
                          is `"AWS"`.
                        example:
                        - usw2-az2
                        - usw2-az1
                        items:
                          type: string
                    description: The private endpoint service resource of the cluster.
                description: GetPrivateEndpointServiceResp is the response for getting
                  private endpoint service for a cluster.
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request GET \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters/{cluster_id}/private_endpoint_service
    post:
      tags:
      - Cluster
      summary: Create a private endpoint service for a cluster.
      description: |-
        - For TiDB Dedicated clusters, you can create the [AWS PrivateLink](https://aws.amazon.com/privatelink/?privatelink-blogs.sort-by=item.additionalFields.createdDate&privatelink-blogs.sort-order=desc) or [Google Cloud Private Service Connect](https://cloud.google.com/vpc/docs/private-service-connect) service depending on where your cluster is hosted.
        - For TiDB Serverless clusters, you cannot create or manage private endpoint service via API.
      operationId: CreatePrivateEndpointService
      parameters:
      - name: project_id
        in: path
        description: "The ID of the project. You can get the project ID from the response\
          \ of [List all accessible projects](#tag/Project/operation/ListProjects)."
        required: true
        schema:
          type: string
          format: uint64
      - name: cluster_id
        in: path
        description: The ID of the cluster.
        required: true
        schema:
          type: string
          format: uint64
      requestBody:
        content:
          application/json:
            schema:
              title: CreatePrivateEndpointServiceReq
              type: object
              description: CreatePrivateEndpointServiceReq is the request for creating
                a private endpoint service for a cluster.
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                title: CreatePrivateEndpointServiceResp
                required:
                - private_endpoint_service
                type: object
                properties:
                  private_endpoint_service:
                    type: object
                    properties:
                      cloud_provider:
                        type: string
                        description: |-
                          The cloud provider on which the private endpoint service is hosted.
                          - `"AWS"`: the Amazon Web Services cloud provider
                          - `"GCP"`: the Google Cloud cloud provider
                        format: string
                        example: AWS
                        enum:
                        - AWS
                        - GCP
                      name:
                        type: string
                        description: "The name of the private endpoint service, which\
                          \ is used for connection."
                        format: string
                        example: com.amazonaws.vpce.us-west-2.vpce-svc-01234567890123456
                      status:
                        type: string
                        description: The status of the private endpoint service.
                        format: enum
                        example: ACTIVE
                        enum:
                        - CREATING
                        - ACTIVE
                        - DELETING
                      dns_name:
                        type: string
                        description: The DNS name of the private endpoint service.
                        format: string
                        example: privatelink-tidb.01234567890.clusters.tidb-cloud.com
                      port:
                        type: integer
                        description: The port of the private endpoint service.
                        format: int32
                        example: 4000
                      az_ids:
                        type: array
                        description: Availability zones for the private endpoint service.
                          This field is only applicable when the `cloud_provider`
                          is `"AWS"`.
                        example:
                        - usw2-az2
                        - usw2-az1
                        items:
                          type: string
                    description: The newly created private endpoint service resource.
                description: CreatePrivateEndpointServiceResp is the response for
                  creating private endpoint service for a cluster.
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request POST \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters/{cluster_id}/private_endpoint_service \
            --header 'content-type: application/json' \
            --data '{}'
      x-codegen-request-body-name: body
  /api/v1beta/projects/{project_id}/clusters/{cluster_id}/private_endpoints:
    get:
      tags:
      - Cluster
      summary: List all private endpoints for a cluster.
      operationId: ListPrivateEndpoints
      parameters:
      - name: project_id
        in: path
        description: "The ID of the project. You can get the project ID from the response\
          \ of [List all accessible projects](#tag/Project/operation/ListProjects)."
        required: true
        schema:
          type: string
          format: uint64
      - name: cluster_id
        in: path
        description: The ID of the cluster.
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                title: ListPrivateEndpointsResp
                required:
                - endpoints
                type: object
                properties:
                  endpoints:
                    type: array
                    description: The private endpoints for the cluster.
                    items:
                      type: object
                      properties:
                        cloud_provider:
                          type: string
                          description: |-
                            [Output Only] The cloud provider on which the private endpoint service is hosted.
                            - `"AWS"`: the Amazon Web Services cloud provider
                            - `"GCP"`: the Google Cloud cloud provider
                          format: string
                          example: AWS
                          enum:
                          - AWS
                          - GCP
                        cluster_id:
                          type: string
                          description: "[Output Only] The ID of the cluster."
                          format: uint64
                          example: "1"
                        cluster_name:
                          type: string
                          description: "[Output Only] The name of the cluster."
                          example: Cluster0
                        region_name:
                          type: string
                          description: "[Output Only] The region where the private\
                            \ endpoint is hosted, such as Oregon in AWS."
                          example: Oregon
                        endpoint_name:
                          type: string
                          description: "The format of the private endpoint name varies\
                            \ by cloud provider: `\"vpce-xxxx\"` for AWS and `\"projects/xxx/regions/xxx/forwardingRules/xxx\"\
                            ` for Google Cloud."
                          format: string
                          example: vpce-01234567890123456
                        status:
                          type: string
                          description: "[Output Only] The status of the private endpoint."
                          format: enum
                          example: FAILED
                          enum:
                          - PENDING
                          - ACTIVE
                          - DELETING
                          - FAILED
                        message:
                          type: string
                          description: "[Output Only] The detailed message when the\
                            \ `status` is \"FAILED\"."
                          format: enum
                          example: The endpoint does not exist.
                        service_name:
                          type: string
                          description: "[Output Only] The service name of the private\
                            \ endpoint."
                          format: string
                          example: com.amazonaws.vpce.us-west-2.vpce-svc-01234567890123456
                        service_status:
                          type: string
                          description: "[Output Only] The status of the private endpoint\
                            \ service."
                          format: enum
                          example: ACTIVE
                          enum:
                          - CREATING
                          - ACTIVE
                          - DELETING
                        id:
                          type: string
                          description: "[Output Only] The ID of private endpoint.\
                            \ It is used when you [deleting the endpoint](#tag/Cluster/operation/DeletePrivateEndpoint)."
                          format: uint64
                          example: "1"
                description: ListPrivateEndpointsResp is the response for listing
                  private endpoints for a cluster.
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request GET \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters/{cluster_id}/private_endpoints
    post:
      tags:
      - Cluster
      summary: Create a private endpoint for a cluster.
      description: |-
        When creating a private endpoint, only the `endpoint_name` is required.
        - For TiDB Dedicated clusters, you can create a private endpoint resource in TiDB Cloud after you create the [AWS PrivateLink](https://aws.amazon.com/privatelink/?privatelink-blogs.sort-by=item.additionalFields.createdDate&privatelink-blogs.sort-order=desc) or [Google Cloud Private Service Connect](https://cloud.google.com/vpc/docs/private-service-connect) endpoint depending on where your cluster is hosted. In this way, TiDB Cloud accepts connection requests from your endpoint.
        - For TiDB Serverless clusters, you cannot create or manage private endpoint via API.
      operationId: CreatePrivateEndpoint
      parameters:
      - name: project_id
        in: path
        description: "The ID of the project. You can get the project ID from the response\
          \ of [List all accessible projects](#tag/Project/operation/ListProjects)."
        required: true
        schema:
          type: string
          format: uint64
      - name: cluster_id
        in: path
        description: The ID of the cluster.
        required: true
        schema:
          type: string
          format: uint64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cloud_provider:
                  type: string
                  description: |-
                    [Output Only] The cloud provider on which the private endpoint service is hosted.
                    - `"AWS"`: the Amazon Web Services cloud provider
                    - `"GCP"`: the Google Cloud cloud provider
                  format: string
                  example: AWS
                  enum:
                  - AWS
                  - GCP
                cluster_id:
                  type: string
                  description: "[Output Only] The ID of the cluster."
                  format: uint64
                  example: "1"
                cluster_name:
                  type: string
                  description: "[Output Only] The name of the cluster."
                  example: Cluster0
                region_name:
                  type: string
                  description: "[Output Only] The region where the private endpoint\
                    \ is hosted, such as Oregon in AWS."
                  example: Oregon
                endpoint_name:
                  type: string
                  description: "The format of the private endpoint name varies by\
                    \ cloud provider: `\"vpce-xxxx\"` for AWS and `\"projects/xxx/regions/xxx/forwardingRules/xxx\"\
                    ` for Google Cloud."
                  format: string
                  example: vpce-01234567890123456
                status:
                  type: string
                  description: "[Output Only] The status of the private endpoint."
                  format: enum
                  example: FAILED
                  enum:
                  - PENDING
                  - ACTIVE
                  - DELETING
                  - FAILED
                message:
                  type: string
                  description: "[Output Only] The detailed message when the `status`\
                    \ is \"FAILED\"."
                  format: enum
                  example: The endpoint does not exist.
                service_name:
                  type: string
                  description: "[Output Only] The service name of the private endpoint."
                  format: string
                  example: com.amazonaws.vpce.us-west-2.vpce-svc-01234567890123456
                service_status:
                  type: string
                  description: "[Output Only] The status of the private endpoint service."
                  format: enum
                  example: ACTIVE
                  enum:
                  - CREATING
                  - ACTIVE
                  - DELETING
                id:
                  type: string
                  description: "[Output Only] The ID of private endpoint. It is used\
                    \ when you [deleting the endpoint](#tag/Cluster/operation/DeletePrivateEndpoint)."
                  format: uint64
                  example: "1"
              description: The endpoint resource to be created. Only the endpoint_name
                is required.
              example:
                endpoint_name: vpce-01234567890123456
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                title: CreatePrivateEndpointResp
                required:
                - private_endpoint
                type: object
                properties:
                  private_endpoint:
                    type: object
                    properties:
                      cloud_provider:
                        type: string
                        description: |-
                          [Output Only] The cloud provider on which the private endpoint service is hosted.
                          - `"AWS"`: the Amazon Web Services cloud provider
                          - `"GCP"`: the Google Cloud cloud provider
                        format: string
                        example: AWS
                        enum:
                        - AWS
                        - GCP
                      cluster_id:
                        type: string
                        description: "[Output Only] The ID of the cluster."
                        format: uint64
                        example: "1"
                      cluster_name:
                        type: string
                        description: "[Output Only] The name of the cluster."
                        example: Cluster0
                      region_name:
                        type: string
                        description: "[Output Only] The region where the private endpoint\
                          \ is hosted, such as Oregon in AWS."
                        example: Oregon
                      endpoint_name:
                        type: string
                        description: "The format of the private endpoint name varies\
                          \ by cloud provider: `\"vpce-xxxx\"` for AWS and `\"projects/xxx/regions/xxx/forwardingRules/xxx\"\
                          ` for Google Cloud."
                        format: string
                        example: vpce-01234567890123456
                      status:
                        type: string
                        description: "[Output Only] The status of the private endpoint."
                        format: enum
                        example: FAILED
                        enum:
                        - PENDING
                        - ACTIVE
                        - DELETING
                        - FAILED
                      message:
                        type: string
                        description: "[Output Only] The detailed message when the\
                          \ `status` is \"FAILED\"."
                        format: enum
                        example: The endpoint does not exist.
                      service_name:
                        type: string
                        description: "[Output Only] The service name of the private\
                          \ endpoint."
                        format: string
                        example: com.amazonaws.vpce.us-west-2.vpce-svc-01234567890123456
                      service_status:
                        type: string
                        description: "[Output Only] The status of the private endpoint\
                          \ service."
                        format: enum
                        example: ACTIVE
                        enum:
                        - CREATING
                        - ACTIVE
                        - DELETING
                      id:
                        type: string
                        description: "[Output Only] The ID of private endpoint. It\
                          \ is used when you [deleting the endpoint](#tag/Cluster/operation/DeletePrivateEndpoint)."
                        format: uint64
                        example: "1"
                    description: The newly endpoint created resource.
                description: CreatePrivateEndpointResp is the response for creating
                  a private endpoint for a private endpoint service.
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request POST \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters/{cluster_id}/private_endpoints \
            --header 'content-type: application/json' \
            --data '{"endpoint_name":"vpce-01234567890123456"}'
      x-codegen-request-body-name: private_endpoint
  /api/v1beta/projects/{project_id}/clusters/{cluster_id}/private_endpoints/{endpoint_id}:
    delete:
      tags:
      - Cluster
      summary: Delete a private endpoint for a cluster.
      description: |-
        - For TiDB Dedicated clusters, you can delete a private endpoint for a cluster.
        - For TiDB Serverless clusters, you cannot create or manage private endpoint via API.
      operationId: DeletePrivateEndpoint
      parameters:
      - name: project_id
        in: path
        description: "The ID of the project. You can get the project ID from the response\
          \ of [List all accessible projects](#tag/Project/operation/ListProjects)."
        required: true
        schema:
          type: string
          format: uint64
      - name: cluster_id
        in: path
        description: The ID of the cluster.
        required: true
        schema:
          type: string
          format: uint64
      - name: endpoint_id
        in: path
        description: "The ID of the private endpoint to be deleted. You can get the\
          \ ID from the `endpoints.id` field in the response of [List all private\
          \ endpoints in a project](#tag/Cluster/operation/ListPrivateEndpoints)."
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request DELETE \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters/{cluster_id}/private_endpoints/{endpoint_id}
  /api/v1beta/projects/{project_id}/private_endpoints:
    get:
      tags:
      - Cluster
      summary: List all private endpoints in a project.
      operationId: ListPrivateEndpointsOfProject
      parameters:
      - name: project_id
        in: path
        description: "The ID of the project. You can get the project ID from the response\
          \ of [List all accessible projects](#tag/Project/operation/ListProjects)."
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                title: ListPrivateEndpointsOfProjectResp
                required:
                - endpoints
                type: object
                properties:
                  endpoints:
                    type: array
                    description: The private endpoints in the project.
                    items:
                      type: object
                      properties:
                        cloud_provider:
                          type: string
                          description: |-
                            [Output Only] The cloud provider on which the private endpoint service is hosted.
                            - `"AWS"`: the Amazon Web Services cloud provider
                            - `"GCP"`: the Google Cloud cloud provider
                          format: string
                          example: AWS
                          enum:
                          - AWS
                          - GCP
                        cluster_id:
                          type: string
                          description: "[Output Only] The ID of the cluster."
                          format: uint64
                          example: "1"
                        cluster_name:
                          type: string
                          description: "[Output Only] The name of the cluster."
                          example: Cluster0
                        region_name:
                          type: string
                          description: "[Output Only] The region where the private\
                            \ endpoint is hosted, such as Oregon in AWS."
                          example: Oregon
                        endpoint_name:
                          type: string
                          description: "The format of the private endpoint name varies\
                            \ by cloud provider: `\"vpce-xxxx\"` for AWS and `\"projects/xxx/regions/xxx/forwardingRules/xxx\"\
                            ` for Google Cloud."
                          format: string
                          example: vpce-01234567890123456
                        status:
                          type: string
                          description: "[Output Only] The status of the private endpoint."
                          format: enum
                          example: FAILED
                          enum:
                          - PENDING
                          - ACTIVE
                          - DELETING
                          - FAILED
                        message:
                          type: string
                          description: "[Output Only] The detailed message when the\
                            \ `status` is \"FAILED\"."
                          format: enum
                          example: The endpoint does not exist.
                        service_name:
                          type: string
                          description: "[Output Only] The service name of the private\
                            \ endpoint."
                          format: string
                          example: com.amazonaws.vpce.us-west-2.vpce-svc-01234567890123456
                        service_status:
                          type: string
                          description: "[Output Only] The status of the private endpoint\
                            \ service."
                          format: enum
                          example: ACTIVE
                          enum:
                          - CREATING
                          - ACTIVE
                          - DELETING
                        id:
                          type: string
                          description: "[Output Only] The ID of private endpoint.\
                            \ It is used when you [deleting the endpoint](#tag/Cluster/operation/DeletePrivateEndpoint)."
                          format: uint64
                          example: "1"
                description: ListPrivateEndpointsOfProjectResp is the response for
                  listing private endpoints for a project.
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request GET \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/private_endpoints
  /api/v1beta/projects/{project_id}/restores:
    get:
      tags:
      - Restore
      summary: List the restore tasks in a project.
      description: |2-

        For TiDB Serverless clusters, you cannot create or manage restore tasks via API.
      operationId: ListRestoreTasks
      parameters:
      - name: project_id
        in: path
        description: "The ID of your project. You can get the project ID from the\
          \ response of [List all accessible projects.](#tag/Project/operation/ListProjects)."
        required: true
        schema:
          type: string
          format: uint64
      - name: page
        in: query
        description: The number of pages.
        schema:
          type: integer
          format: int32
          default: 1
      - name: page_size
        in: query
        description: The size of a page.
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                title: ListRestoreResp
                type: object
                properties:
                  items:
                    type: array
                    description: The items of all restore tasks.
                    items:
                      title: ListRestoreRespItem
                      type: object
                      properties:
                        id:
                          type: string
                          description: The ID of the restore task.
                          format: uint64
                          example: "1"
                        create_timestamp:
                          type: string
                          description: |-
                            The creation time of the backup in UTC.

                            The time format follows the [ISO8601](http://en.wikipedia.org/wiki/ISO_8601) standard, which is `YYYY-MM-DD` (year-month-day) + T +`HH:MM:SS` (hour-minutes-seconds) + Z. For example, `2020-01-01T00:00:00Z`.
                          format: date-time
                          example: 2020-01-01T00:00:00Z
                        backup_id:
                          type: string
                          description: The ID of the backup.
                          format: uint64
                          example: "1"
                        cluster_id:
                          type: string
                          description: The cluster ID of the backup.
                          format: uint64
                          example: "1"
                        status:
                          type: string
                          description: The status of the restore task.
                          example: PENDING
                          enum:
                          - PENDING
                          - RUNNING
                          - FAILED
                          - SUCCESS
                        cluster:
                          title: ClusterInfoOfRestore
                          type: object
                          properties:
                            id:
                              type: string
                              description: The ID of the restored cluster. The restored
                                cluster is the new cluster your backup data is restored
                                to.
                              format: uint64
                              example: "1"
                            name:
                              type: string
                              description: The name of the restored cluster. The restored
                                cluster is the new cluster your backup data is restored
                                to.
                              example: cluster-1
                            status:
                              type: string
                              description: "The status of the restored cluster. Possible\
                                \ values are `\"AVAILABLE\"`, `\"CREATING\"`, `\"\
                                MODIFYING\"`, `\"PAUSED\"`, `\"RESUMING\"`, `\"UNAVAILABLE\"\
                                `, `\"IMPORTING\"`, and `\"CLEARED\"`."
                              example: AVAILABLE
                          description: The information of the restored cluster. The
                            restored cluster is the new cluster your backup data is
                            restored to.
                        error_message:
                          type: string
                          description: The error message of restore if failed.
                          example: Please contact support.
                      description: The items of all restore tasks.
                  total:
                    type: integer
                    description: The total number of restore tasks in the project.
                    format: int64
                    example: 10
                description: This response for list restore.
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request GET \
            --url 'https://api.tidbcloud.com/api/v1beta/projects/{project_id}/restores?page=1&page_size=10'
    post:
      tags:
      - Restore
      summary: Create a restore task.
      description: |-
        You can use this endpoint to restore data from a previously created backup file to a new cluster. In this endpoint, you must specify the configuration of the new cluster you want to restore data to.

        **Limitations:**

        - For TiDB Dedicated clusters, you can only restore data from a smaller node size to a larger node size.

        - You cannot restore data from a TiDB Dedicated cluster to a TiDB Serverless cluster.

        For TiDB Serverless clusters, you cannot create restore tasks via API.
      operationId: CreateRestoreTask
      parameters:
      - name: project_id
        in: path
        description: "The ID of the project. You can get the project ID from the response\
          \ of [List all accessible projects.](#tag/Project/operation/ListProjects)."
        required: true
        schema:
          type: string
          format: uint64
      requestBody:
        content:
          application/json:
            schema:
              title: CreateRestoreReq
              required:
              - backup_id
              - name
              type: object
              properties:
                backup_id:
                  type: string
                  description: The ID of the backup.
                  format: uint64
                  example: "1"
                name:
                  pattern: "^[A-Za-z0-9][-A-Za-z0-9]{2,62}[A-Za-z0-9]$"
                  type: string
                  description: |-
                    The name of the restored cluster. The restored cluster is the new cluster your backup data is restored to.

                    - The name must be 4-64 characters that only contain numbers, letters, and hyphens. The first and last character must be a letter or number.
                    - This must be different from the name of the existing cluster.
                  example: Cluster0
                config:
                  required:
                  - root_password
                  type: object
                  properties:
                    root_password:
                      maxLength: 64
                      minLength: 8
                      type: string
                      description: The root password to access the cluster. It must
                        be 8-64 characters.
                      example: password_example
                    port:
                      maximum: 65535
                      minimum: 1024
                      type: integer
                      description: |-
                        The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                        **Limitations**:
                        - For a TiDB Serverless cluster, only port `4000` is available.
                      format: int32
                      example: 4000
                      default: 4000
                    components:
                      required:
                      - tidb
                      - tikv
                      type: object
                      properties:
                        tidb:
                          required:
                          - node_quantity
                          - node_size
                          type: object
                          properties:
                            node_size:
                              type: string
                              description: |-
                                The size of the TiDB component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Additional combination rules**:
                                - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                                - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
                              example: 8C16G
                            node_quantity:
                              type: integer
                              description: |
                                The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                              format: int32
                              example: 2
                          description: The TiDB component of the cluster.
                        tikv:
                          required:
                          - node_quantity
                          - node_size
                          - storage_size_gib
                          type: object
                          properties:
                            node_size:
                              type: string
                              description: |-
                                The size of the TiKV component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Additional combination rules**:
                                - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                                - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
                              example: 8C64G
                            storage_size_gib:
                              type: integer
                              description: "The storage size of a node in the cluster.\
                                \ You can get the minimum and maximum of storage size\
                                \ from the response of [List the cloud providers,\
                                \ regions and available specifications](#tag/Cluster/operation/ListProviderRegions)."
                              format: int32
                              example: 1024
                            node_quantity:
                              type: integer
                              description: |-
                                The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Limitations**:
                                - The `node_quantity` of TiKV must be a multiple of 3.
                              format: int32
                              example: 3
                          description: The TiKV component of the cluster.
                        tiflash:
                          required:
                          - node_quantity
                          - node_size
                          - storage_size_gib
                          type: object
                          properties:
                            node_size:
                              type: string
                              description: |-
                                The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Additional combination rules**:
                                - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                                - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
                              example: 8C64G
                            storage_size_gib:
                              type: integer
                              description: |
                                The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                              format: int32
                              example: 1024
                            node_quantity:
                              type: integer
                              description: "The number of nodes in the cluster. You\
                                \ can get the minimum and step of a node quantity\
                                \ from the response of [List the cloud providers,\
                                \ regions and available specifications](#tag/Cluster/operation/ListProviderRegions)."
                              format: int32
                              example: 1
                          description: The TiFlash component of the cluster.
                      description: |-
                        The components of the cluster.

                        **Limitations**:
                        - For a TiDB Dedicated cluster, the `components` parameter is **required**.
                        - For a TiDB Serverless cluster, the `components` value is **ignored**. Setting this configuration does not have any effects.
                      example:
                        tidb:
                          node_size: 8C16G
                          node_quantity: 2
                        tikv:
                          node_size: 8C32G
                          storage_size_gib: 1024
                          node_quantity: 3
                    ip_access_list:
                      type: array
                      description: "A list of IP addresses and Classless Inter-Domain\
                        \ Routing (CIDR) addresses that are allowed to access the\
                        \ TiDB Cloud cluster via [standard connection](https://docs.pingcap.com/tidbcloud/connect-to-tidb-cluster#connect-via-standard-connection)."
                      items:
                        required:
                        - cidr
                        type: object
                        properties:
                          cidr:
                            type: string
                            description: The IP address or CIDR range that you want
                              to add to the cluster's IP access list.
                            example: 8.8.8.8/32
                          description:
                            type: string
                            description: Description that explains the purpose of
                              the entry.
                            example: My Current IP Address
                  description: The configuration of the cluster.
              description: CreateRestoreReq is the request for restoring backup to
                a new cluster.
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                title: CreateRestoreResp
                type: object
                properties:
                  id:
                    type: string
                    description: The ID of the restore task.
                    format: uint64
                    example: "1"
                  cluster_id:
                    type: string
                    description: The ID of the restored cluster. The restored cluster
                      is the new cluster your backup data is restored to.
                    format: uint64
                    example: "1"
                description: CreateRestoreResp is the response for restoring backup
                  to a new cluster.
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request POST \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/restores \
            --header 'content-type: application/json' \
            --data '{"backup_id":"1","name":"Cluster0","config":{"root_password":"password_example","port":4000,"components":{"tidb":{"node_size":"8C16G","node_quantity":2},"tikv":{"node_size":"8C32G","storage_size_gib":1024,"node_quantity":3}},"ip_access_list":[{"cidr":"8.8.8.8/32","description":"My Current IP Address"}]}}'
      x-codegen-request-body-name: body
  /api/v1beta/projects/{project_id}/restores/{restore_id}:
    get:
      tags:
      - Restore
      summary: Get a restore task.
      description: |2-

        For TiDB Serverless clusters, you cannot manage restore tasks via API.
      operationId: GetRestoreTask
      parameters:
      - name: project_id
        in: path
        description: "The ID of your project. You can get the project ID from the\
          \ response of [List all accessible projects.](#tag/Project/operation/ListProjects)."
        required: true
        schema:
          type: string
          format: uint64
      - name: restore_id
        in: path
        description: The ID of the restore task.
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                title: GetRestoreResp
                type: object
                properties:
                  id:
                    type: string
                    description: The ID of the restore task.
                    format: uint64
                    example: "1"
                  create_timestamp:
                    type: string
                    description: |-
                      The creation time of the backup in UTC.

                      The time format follows the [ISO8601](http://en.wikipedia.org/wiki/ISO_8601) standard, which is `YYYY-MM-DD` (year-month-day) + T +`HH:MM:SS` (hour-minutes-seconds) + Z. For example, `2020-01-01T00:00:00Z`.
                    format: date-time
                    example: 2020-01-01T00:00:00Z
                  backup_id:
                    type: string
                    description: The ID of the backup.
                    format: uint64
                    example: "1"
                  cluster_id:
                    type: string
                    description: The cluster ID of the backup.
                    format: uint64
                    example: "1"
                  status:
                    type: string
                    description: The status of the restore task.
                    example: PENDING
                    enum:
                    - PENDING
                    - RUNNING
                    - FAILED
                    - SUCCESS
                  cluster:
                    title: ClusterInfoOfRestore
                    type: object
                    properties:
                      id:
                        type: string
                        description: The ID of the restored cluster. The restored
                          cluster is the new cluster your backup data is restored
                          to.
                        format: uint64
                        example: "1"
                      name:
                        type: string
                        description: The name of the restored cluster. The restored
                          cluster is the new cluster your backup data is restored
                          to.
                        example: cluster-1
                      status:
                        type: string
                        description: "The status of the restored cluster. Possible\
                          \ values are `\"AVAILABLE\"`, `\"CREATING\"`, `\"MODIFYING\"\
                          `, `\"PAUSED\"`, `\"RESUMING\"`, `\"UNAVAILABLE\"`, `\"\
                          IMPORTING\"`, and `\"CLEARED\"`."
                        example: AVAILABLE
                    description: The information of the restored cluster. The restored
                      cluster is the new cluster your backup data is restored to.
                  error_message:
                    type: string
                    description: The error message of restore if failed.
                    example: Please contact support.
                description: The response for get restore.
        "400":
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "401":
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "404":
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "429":
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request GET \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/restores/{restore_id}
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        code:
          title: code
          type: integer
          description: Error code returned with this error.
          format: integer
        message:
          title: message
          type: string
          description: Error message returned with this error.
        details:
          title: details
          type: array
          description: Error details returned with this error.
          items:
            type: string
    ImportSourceFormatImportSourceFormatType:
      type: string
      enum:
      - CSV
      - PARQUET
      - SQL
      - AURORA_SNAPSHOT
    ImportSourceImportSourceType:
      type: string
      enum:
      - S3
      - GCS
      - LOCAL_FILE
    ImportStatusImportTaskPhase:
      type: string
      enum:
      - PREPARING
      - IMPORTING
      - COMPLETED
      - FAILED
      - CANCELING
      - CANCELED
    UpdateImportTaskReqImportTaskAction:
      type: string
      enum:
      - CANCEL
    googlerpcStatus:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
    openapiAwsAssumeRoleAccess:
      title: AwsAssumeRoleAccess
      required:
      - assume_role
      type: object
      properties:
        assume_role:
          type: string
          description: The specific AWS role ARN that needs to be assumed to access
            the Amazon S3 data source.
          example: arn:aws:iam::999999999999:role/sample-role
      description: AwsAssumeRoleAccess represents the settings to access the Amazon
        S3 source by assuming to a specific AWS role.
    openapiAwsCmekSpec:
      title: AwsCmekSpec
      required:
      - kms_arn
      - region
      type: object
      properties:
        region:
          type: string
          description: |-
            The region name of the AWS CMEK. The region value should match the cloud provider's region code.

            You can get the complete list of available regions from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

            For the detailed information on each region, refer to the documentation of the [AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) cloud provider.
          example: us-west-2
        kms_arn:
          type: string
          description: The KMS ARN of the AWS CMEK.
          example: arn:aws:kms:example
      description: AwsCmekSpec is the specification of the AWS CMEK.
    openapiAwsImportTaskRoleInfo:
      title: AwsImportTaskRoleInfo
      required:
      - account_id
      - external_id
      type: object
      properties:
        account_id:
          type: string
          description: The account ID under which the import tasks for this cluster
            are running.
          example: "999999999999"
        external_id:
          type: string
          description: "The unique external ID that binds to the cluster, which is\
            \ a long string. When an import task starts and attempts to assume a specified\
            \ role, it automatically attaches this external ID. This means that you\
            \ can configure this external ID in the assumed role's trust relationship,\
            \ so that only the import task of that specified cluster can access the\
            \ data by assuming the role. This can provide additional security."
          example: abcdefghijklmnopqrstuvwxyz0123456789xxxxxxxxxxxxxx
      description: AwsImportTaskRoleInfo is the role information for import tasks
        on an AWS cluster.
    openapiAwsKeyAccess:
      title: AwsKeyAccess
      required:
      - access_key_id
      - secret_access_key
      type: object
      properties:
        access_key_id:
          type: string
          description: The access key ID of the account to access the data. This information
            will be redacted when it is retrieved to obtain the import task information.
          example: YOUR_ACCESS_KEY_ID
        secret_access_key:
          type: string
          description: The secret access key for the account to access the data. This
            information will be redacted when it is retrieved to obtain the import
            task information.
          example: YOUR_SECRET_ACCESS_KEY
      description: AwsKeyAccess represents the settings to access the Amazon S3 source
        by using access keys.
    openapiBackupTypeEnum:
      type: string
      enum:
      - MANUAL
      - AUTO
    openapiCloudProvider:
      type: string
      enum:
      - AWS
      - GCP
    openapiClusterComponents:
      required:
      - tidb
      - tikv
      type: object
      properties:
        tidb:
          required:
          - node_quantity
          - node_size
          type: object
          properties:
            node_size:
              type: string
              description: |-
                The size of the TiDB component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                **Additional combination rules**:
                - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
              example: 8C16G
            node_quantity:
              type: integer
              description: |
                The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
              format: int32
              example: 2
          description: The TiDB component of the cluster.
        tikv:
          required:
          - node_quantity
          - node_size
          - storage_size_gib
          type: object
          properties:
            node_size:
              type: string
              description: |-
                The size of the TiKV component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                **Additional combination rules**:
                - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
              example: 8C64G
            storage_size_gib:
              type: integer
              description: "The storage size of a node in the cluster. You can get\
                \ the minimum and maximum of storage size from the response of [List\
                \ the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions)."
              format: int32
              example: 1024
            node_quantity:
              type: integer
              description: |-
                The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                **Limitations**:
                - The `node_quantity` of TiKV must be a multiple of 3.
              format: int32
              example: 3
          description: The TiKV component of the cluster.
        tiflash:
          required:
          - node_quantity
          - node_size
          - storage_size_gib
          type: object
          properties:
            node_size:
              type: string
              description: |-
                The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                **Additional combination rules**:
                - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
              example: 8C64G
            storage_size_gib:
              type: integer
              description: |
                The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
              format: int32
              example: 1024
            node_quantity:
              type: integer
              description: "The number of nodes in the cluster. You can get the minimum\
                \ and step of a node quantity from the response of [List the cloud\
                \ providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions)."
              format: int32
              example: 1
          description: The TiFlash component of the cluster.
    openapiClusterConfig:
      required:
      - root_password
      type: object
      properties:
        root_password:
          maxLength: 64
          minLength: 8
          type: string
          description: The root password to access the cluster. It must be 8-64 characters.
          example: password_example
        port:
          maximum: 65535
          minimum: 1024
          type: integer
          description: |-
            The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

            **Limitations**:
            - For a TiDB Serverless cluster, only port `4000` is available.
          format: int32
          example: 4000
          default: 4000
        components:
          required:
          - tidb
          - tikv
          type: object
          properties:
            tidb:
              required:
              - node_quantity
              - node_size
              type: object
              properties:
                node_size:
                  type: string
                  description: |-
                    The size of the TiDB component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Additional combination rules**:
                    - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                    - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
                  example: 8C16G
                node_quantity:
                  type: integer
                  description: |
                    The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                  format: int32
                  example: 2
              description: The TiDB component of the cluster.
            tikv:
              required:
              - node_quantity
              - node_size
              - storage_size_gib
              type: object
              properties:
                node_size:
                  type: string
                  description: |-
                    The size of the TiKV component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Additional combination rules**:
                    - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                    - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
                  example: 8C64G
                storage_size_gib:
                  type: integer
                  description: "The storage size of a node in the cluster. You can\
                    \ get the minimum and maximum of storage size from the response\
                    \ of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions)."
                  format: int32
                  example: 1024
                node_quantity:
                  type: integer
                  description: |-
                    The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Limitations**:
                    - The `node_quantity` of TiKV must be a multiple of 3.
                  format: int32
                  example: 3
              description: The TiKV component of the cluster.
            tiflash:
              required:
              - node_quantity
              - node_size
              - storage_size_gib
              type: object
              properties:
                node_size:
                  type: string
                  description: |-
                    The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Additional combination rules**:
                    - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                    - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
                  example: 8C64G
                storage_size_gib:
                  type: integer
                  description: |
                    The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                  format: int32
                  example: 1024
                node_quantity:
                  type: integer
                  description: "The number of nodes in the cluster. You can get the\
                    \ minimum and step of a node quantity from the response of [List\
                    \ the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions)."
                  format: int32
                  example: 1
              description: The TiFlash component of the cluster.
          description: |-
            The components of the cluster.

            **Limitations**:
            - For a TiDB Dedicated cluster, the `components` parameter is **required**.
            - For a TiDB Serverless cluster, the `components` value is **ignored**. Setting this configuration does not have any effects.
          example:
            tidb:
              node_size: 8C16G
              node_quantity: 2
            tikv:
              node_size: 8C32G
              storage_size_gib: 1024
              node_quantity: 3
        ip_access_list:
          type: array
          description: "A list of IP addresses and Classless Inter-Domain Routing\
            \ (CIDR) addresses that are allowed to access the TiDB Cloud cluster via\
            \ [standard connection](https://docs.pingcap.com/tidbcloud/connect-to-tidb-cluster#connect-via-standard-connection)."
          items:
            required:
            - cidr
            type: object
            properties:
              cidr:
                type: string
                description: The IP address or CIDR range that you want to add to
                  the cluster's IP access list.
                example: 8.8.8.8/32
              description:
                type: string
                description: Description that explains the purpose of the entry.
                example: My Current IP Address
    openapiClusterConnectionStrings:
      type: object
      properties:
        default_user:
          type: string
          description: The default TiDB user for connection.
          example: root
        standard:
          type: object
          properties:
            host:
              type: string
              description: The host of standard connection.
              example: tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
            port:
              maximum: 65535
              minimum: 1024
              type: integer
              description: |-
                The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                **Limitations**:
                - For a TiDB Serverless cluster, only port `4000` is available.
              format: int32
              example: 4000
              default: 4000
          description: |-
            Standard connection string.

            You must configure the [IP Access List](https://docs.pingcap.com/tidbcloud/connect-to-tidb-cluster#connect-via-standard-connection) for the cluster you created on [TiDB Cloud console](https://tidbcloud.com/) before connecting to this connection string.
        vpc_peering:
          type: object
          properties:
            host:
              type: string
              description: The host of VPC peering connection.
              example: private-tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
            port:
              maximum: 65535
              minimum: 1024
              type: integer
              description: |-
                The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                **Limitations**:
                - For a TiDB Serverless cluster, only port `4000` is available.
              format: int32
              example: 4000
              default: 4000
          description: |-
            [VPC peering](https://docs.pingcap.com/tidbcloud/tidb-cloud-glossary#vpc-peering) connection string.

            You must [Set up VPC peering connections](https://docs.pingcap.com/tidbcloud/set-up-vpc-peering-connections) for the project before connecting to this private connection string.
    openapiClusterInfoOfRestore:
      title: ClusterInfoOfRestore
      type: object
      properties:
        id:
          type: string
          description: The ID of the restored cluster. The restored cluster is the
            new cluster your backup data is restored to.
          format: uint64
          example: "1"
        name:
          type: string
          description: The name of the restored cluster. The restored cluster is the
            new cluster your backup data is restored to.
          example: cluster-1
        status:
          type: string
          description: "The status of the restored cluster. Possible values are `\"\
            AVAILABLE\"`, `\"CREATING\"`, `\"MODIFYING\"`, `\"PAUSED\"`, `\"RESUMING\"\
            `, `\"UNAVAILABLE\"`, `\"IMPORTING\"`, and `\"CLEARED\"`."
          example: AVAILABLE
      description: The information of the restored cluster. The restored cluster is
        the new cluster your backup data is restored to.
    openapiClusterItem:
      title: ClusterItem
      required:
      - id
      - project_id
      type: object
      properties:
        id:
          type: string
          description: The ID of the cluster.
          format: uint64
          example: "1"
        project_id:
          type: string
          description: The ID of the project.
          format: uint64
          example: "1"
        name:
          pattern: "^[A-Za-z0-9][-A-Za-z0-9]{2,62}[A-Za-z0-9]$"
          type: string
          description: The name of the cluster.
          example: Cluster0
        cluster_type:
          type: string
          description: |-
            The cluster type:
            - `"DEVELOPER"`: a [TiDB Serverless](https://docs.pingcap.com/tidbcloud/select-cluster-tier#tidb-serverless) cluster
            - `"DEDICATED"`: a [TiDB Dedicated](https://docs.pingcap.com/tidbcloud/select-cluster-tier#dedicated-tier) cluster

            **Warning:** `"DEVELOPER"` will soon be changed to `"SERVERLESS"` to represent TiDB Serverless clusters.
          format: enum
          example: DEDICATED
          enum:
          - DEDICATED
          - DEVELOPER
        cloud_provider:
          type: string
          description: |-
            The cloud provider on which your TiDB cluster is hosted.
            - `"AWS"`: the Amazon Web Services cloud provider
            - `"GCP"`: the Google Cloud cloud provider
          format: string
          example: AWS
          enum:
          - AWS
          - GCP
        region:
          type: string
          description: Region of the cluster.
          example: us-west-2
        create_timestamp:
          type: string
          description: The creation time of the cluster in Unix timestamp seconds
            (epoch time).
          format: timestamp
          example: "1656991448"
        config:
          type: object
          properties:
            port:
              maximum: 65535
              minimum: 1024
              type: integer
              description: The TiDB port for connection. The port must be in the range
                of 1024-65535 except 10080.
              format: int32
              example: 4000
              default: 4000
            components:
              required:
              - tidb
              - tikv
              type: object
              properties:
                tidb:
                  required:
                  - node_quantity
                  - node_size
                  type: object
                  properties:
                    node_size:
                      type: string
                      description: |-
                        The size of the TiDB component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                        **Additional combination rules**:
                        - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                        - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
                      example: 8C16G
                    node_quantity:
                      type: integer
                      description: |
                        The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                      format: int32
                      example: 2
                  description: The TiDB component of the cluster.
                tikv:
                  required:
                  - node_quantity
                  - node_size
                  - storage_size_gib
                  type: object
                  properties:
                    node_size:
                      type: string
                      description: |-
                        The size of the TiKV component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                        **Additional combination rules**:
                        - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                        - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
                      example: 8C64G
                    storage_size_gib:
                      type: integer
                      description: "The storage size of a node in the cluster. You\
                        \ can get the minimum and maximum of storage size from the\
                        \ response of [List the cloud providers, regions and available\
                        \ specifications](#tag/Cluster/operation/ListProviderRegions)."
                      format: int32
                      example: 1024
                    node_quantity:
                      type: integer
                      description: |-
                        The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                        **Limitations**:
                        - The `node_quantity` of TiKV must be a multiple of 3.
                      format: int32
                      example: 3
                  description: The TiKV component of the cluster.
                tiflash:
                  required:
                  - node_quantity
                  - node_size
                  - storage_size_gib
                  type: object
                  properties:
                    node_size:
                      type: string
                      description: |-
                        The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                        **Additional combination rules**:
                        - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                        - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
                      example: 8C64G
                    storage_size_gib:
                      type: integer
                      description: |
                        The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                      format: int32
                      example: 1024
                    node_quantity:
                      type: integer
                      description: "The number of nodes in the cluster. You can get\
                        \ the minimum and step of a node quantity from the response\
                        \ of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions)."
                      format: int32
                      example: 1
                  description: The TiFlash component of the cluster.
              description: The components of the cluster.
              example:
                tidb:
                  node_size: 8C16G
                  node_quantity: 2
                tikv:
                  node_size: 8C32G
                  storage_size_gib: 1024
                  node_quantity: 3
          description: The configuration of the cluster.
          example:
            port: 4000
            components:
              tidb:
                node_size: 8C16G
                node_quantity: 2
              tikv:
                node_size: 8C32G
                storage_size_gib: 1024
                node_quantity: 3
        status:
          title: ClusterItemStatus
          type: object
          properties:
            tidb_version:
              type: string
              description: TiDB version.
              example: v6.1.0
            cluster_status:
              type: string
              description: Status of the cluster.
              format: enum
              example: AVAILABLE
              enum:
              - AVAILABLE
              - CREATING
              - MODIFYING
              - PAUSED
              - RESUMING
              - UNAVAILABLE
              - IMPORTING
              - MAINTAINING
              - PAUSING
            node_map:
              required:
              - tidb
              - tikv
              type: object
              properties:
                tidb:
                  type: array
                  description: TiDB node map.
                  example:
                  - node_name: tidb-0
                    availability_zone: us-west-2a
                    node_size: 8C16G
                    vcpu_num: 8
                    ram_bytes: "17179869184"
                    status: NODE_STATUS_AVAILABLE
                  - node_name: tidb-1
                    availability_zone: us-west-2b
                    node_size: 8C16G
                    vcpu_num: 8
                    ram_bytes: "17179869184"
                    status: NODE_STATUS_AVAILABLE
                  items:
                    type: object
                    properties:
                      node_name:
                        type: string
                        description: The name of a node in the cluster.
                        example: tidb-0
                      availability_zone:
                        type: string
                        description: The availability zone of a node in the cluster.
                        example: us-west-2a
                      node_size:
                        type: string
                        description: The size of the TiDB component in the cluster.
                        example: 8C16G
                      vcpu_num:
                        type: integer
                        description: "The total vCPUs of a node in the cluster. If\
                          \ the `cluster_type` is `\"DEVELOPER\"`, `vcpu_num` is always\
                          \ 0."
                        format: int32
                        example: 8
                      ram_bytes:
                        type: string
                        description: "The RAM size of a node in the cluster. If the\
                          \ `cluster_type` is `\"DEVELOPER\"`, `ram_bytes` is always\
                          \ 0."
                        format: int64
                        example: "17179869184"
                      status:
                        type: string
                        description: The status of a node in the cluster.
                        example: NODE_STATUS_AVAILABLE
                        enum:
                        - NODE_STATUS_AVAILABLE
                        - NODE_STATUS_UNAVAILABLE
                        - NODE_STATUS_CREATING
                        - NODE_STATUS_DELETING
                tikv:
                  type: array
                  description: TiKV node map.
                  example:
                  - node_name: tikv-0
                    availability_zone: us-west-2a
                    node_size: 8C32G
                    vcpu_num: 8
                    ram_bytes: "68719476736"
                    storage_size_gib: 1024
                    status: NODE_STATUS_AVAILABLE
                  - node_name: tikv-1
                    availability_zone: us-west-2b
                    node_size: 8C64G
                    vcpu_num: 8
                    ram_bytes: "68719476736"
                    storage_size_gib: 1024
                    status: NODE_STATUS_AVAILABLE
                  - node_name: tikv-2
                    availability_zone: us-west-2c
                    node_size: 8C64G
                    vcpu_num: 8
                    ram_bytes: "68719476736"
                    storage_size_gib: 1024
                    status: NODE_STATUS_AVAILABLE
                  items:
                    type: object
                    properties:
                      node_name:
                        type: string
                        description: The name of a node in the cluster.
                        example: tikv-0
                      availability_zone:
                        type: string
                        description: The availability zone of a node in the cluster.
                        example: us-west-2a
                      node_size:
                        type: string
                        description: The size of the TiKV component in the cluster.
                        example: 8C32G
                      vcpu_num:
                        type: integer
                        description: "The total vCPUs of a node in the cluster. If\
                          \ the `cluster_type` is `\"DEVELOPER\"`, `vcpu_num` is always\
                          \ 0."
                        format: int32
                        example: 8
                      ram_bytes:
                        type: string
                        description: "The RAM size of a node in the cluster. If the\
                          \ `cluster_type` is `\"DEVELOPER\"`, `ram_bytes` is always\
                          \ 0."
                        format: int64
                        example: "68719476736"
                      storage_size_gib:
                        type: integer
                        description: The storage size of a node in the cluster.
                        format: int32
                        example: 1024
                      status:
                        type: string
                        description: The status of a node in the cluster.
                        example: NODE_STATUS_AVAILABLE
                        enum:
                        - NODE_STATUS_AVAILABLE
                        - NODE_STATUS_UNAVAILABLE
                        - NODE_STATUS_CREATING
                        - NODE_STATUS_DELETING
                tiflash:
                  type: array
                  description: TiFlash node map.
                  example:
                  - node_name: tiflash-0
                    availability_zone: us-west-2a
                    node_size: 8C64G
                    vcpu_num: 8
                    ram_bytes: "68719476736"
                    storage_size_gib: 1024
                    status: NODE_STATUS_AVAILABLE
                  - node_name: tiflash-1
                    availability_zone: us-west-2b
                    node_size: 8C64G
                    vcpu_num: 8
                    ram_bytes: "68719476736"
                    storage_size_gib: 1024
                    status: NODE_STATUS_AVAILABLE
                  items:
                    type: object
                    properties:
                      node_name:
                        type: string
                        description: The name of a node in the cluster.
                        example: tiflash-0
                      availability_zone:
                        type: string
                        description: The availability zone of a node in the cluster.
                        example: us-west-2a
                      node_size:
                        type: string
                        description: The size of the TiFlash component in the cluster.
                        example: 8C64G
                      vcpu_num:
                        type: integer
                        description: "The total vCPUs of a node in the cluster. If\
                          \ the `cluster_type` is `\"DEVELOPER\"`, `vcpu_num` is always\
                          \ 0."
                        format: int32
                        example: 8
                      ram_bytes:
                        type: string
                        description: "The RAM size of a node in the cluster. If the\
                          \ `cluster_type` is `\"DEVELOPER\"`, `ram_bytes` is always\
                          \ 0."
                        format: int64
                        example: "68719476736"
                      storage_size_gib:
                        type: integer
                        description: The storage size of a node in the cluster.
                        format: int32
                        example: 1024
                      status:
                        type: string
                        description: The status of a node in the cluster.
                        example: NODE_STATUS_AVAILABLE
                        enum:
                        - NODE_STATUS_AVAILABLE
                        - NODE_STATUS_UNAVAILABLE
                        - NODE_STATUS_CREATING
                        - NODE_STATUS_DELETING
              description: Node map. The `node_map` is returned only when the `cluster_status`
                is `"AVAILABLE"` or `"MODIFYING"`.
            connection_strings:
              type: object
              properties:
                default_user:
                  type: string
                  description: The default TiDB user for connection.
                  example: root
                standard:
                  type: object
                  properties:
                    host:
                      type: string
                      description: The host of standard connection.
                      example: tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
                    port:
                      maximum: 65535
                      minimum: 1024
                      type: integer
                      description: |-
                        The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                        **Limitations**:
                        - For a TiDB Serverless cluster, only port `4000` is available.
                      format: int32
                      example: 4000
                      default: 4000
                  description: |-
                    Standard connection string.

                    You must configure the [IP Access List](https://docs.pingcap.com/tidbcloud/connect-to-tidb-cluster#connect-via-standard-connection) for the cluster you created on [TiDB Cloud console](https://tidbcloud.com/) before connecting to this connection string.
                vpc_peering:
                  type: object
                  properties:
                    host:
                      type: string
                      description: The host of VPC peering connection.
                      example: private-tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
                    port:
                      maximum: 65535
                      minimum: 1024
                      type: integer
                      description: |-
                        The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                        **Limitations**:
                        - For a TiDB Serverless cluster, only port `4000` is available.
                      format: int32
                      example: 4000
                      default: 4000
                  description: |-
                    [VPC peering](https://docs.pingcap.com/tidbcloud/tidb-cloud-glossary#vpc-peering) connection string.

                    You must [Set up VPC peering connections](https://docs.pingcap.com/tidbcloud/set-up-vpc-peering-connections) for the project before connecting to this private connection string.
              description: Connection strings.
          description: The status of the cluster.
      description: ClusterItem is the information of cluster.
    openapiClusterItemStatus:
      title: ClusterItemStatus
      type: object
      properties:
        tidb_version:
          type: string
          description: TiDB version.
          example: v6.1.0
        cluster_status:
          type: string
          description: Status of the cluster.
          format: enum
          example: AVAILABLE
          enum:
          - AVAILABLE
          - CREATING
          - MODIFYING
          - PAUSED
          - RESUMING
          - UNAVAILABLE
          - IMPORTING
          - MAINTAINING
          - PAUSING
        node_map:
          required:
          - tidb
          - tikv
          type: object
          properties:
            tidb:
              type: array
              description: TiDB node map.
              example:
              - node_name: tidb-0
                availability_zone: us-west-2a
                node_size: 8C16G
                vcpu_num: 8
                ram_bytes: "17179869184"
                status: NODE_STATUS_AVAILABLE
              - node_name: tidb-1
                availability_zone: us-west-2b
                node_size: 8C16G
                vcpu_num: 8
                ram_bytes: "17179869184"
                status: NODE_STATUS_AVAILABLE
              items:
                type: object
                properties:
                  node_name:
                    type: string
                    description: The name of a node in the cluster.
                    example: tidb-0
                  availability_zone:
                    type: string
                    description: The availability zone of a node in the cluster.
                    example: us-west-2a
                  node_size:
                    type: string
                    description: The size of the TiDB component in the cluster.
                    example: 8C16G
                  vcpu_num:
                    type: integer
                    description: "The total vCPUs of a node in the cluster. If the\
                      \ `cluster_type` is `\"DEVELOPER\"`, `vcpu_num` is always 0."
                    format: int32
                    example: 8
                  ram_bytes:
                    type: string
                    description: "The RAM size of a node in the cluster. If the `cluster_type`\
                      \ is `\"DEVELOPER\"`, `ram_bytes` is always 0."
                    format: int64
                    example: "17179869184"
                  status:
                    type: string
                    description: The status of a node in the cluster.
                    example: NODE_STATUS_AVAILABLE
                    enum:
                    - NODE_STATUS_AVAILABLE
                    - NODE_STATUS_UNAVAILABLE
                    - NODE_STATUS_CREATING
                    - NODE_STATUS_DELETING
            tikv:
              type: array
              description: TiKV node map.
              example:
              - node_name: tikv-0
                availability_zone: us-west-2a
                node_size: 8C32G
                vcpu_num: 8
                ram_bytes: "68719476736"
                storage_size_gib: 1024
                status: NODE_STATUS_AVAILABLE
              - node_name: tikv-1
                availability_zone: us-west-2b
                node_size: 8C64G
                vcpu_num: 8
                ram_bytes: "68719476736"
                storage_size_gib: 1024
                status: NODE_STATUS_AVAILABLE
              - node_name: tikv-2
                availability_zone: us-west-2c
                node_size: 8C64G
                vcpu_num: 8
                ram_bytes: "68719476736"
                storage_size_gib: 1024
                status: NODE_STATUS_AVAILABLE
              items:
                type: object
                properties:
                  node_name:
                    type: string
                    description: The name of a node in the cluster.
                    example: tikv-0
                  availability_zone:
                    type: string
                    description: The availability zone of a node in the cluster.
                    example: us-west-2a
                  node_size:
                    type: string
                    description: The size of the TiKV component in the cluster.
                    example: 8C32G
                  vcpu_num:
                    type: integer
                    description: "The total vCPUs of a node in the cluster. If the\
                      \ `cluster_type` is `\"DEVELOPER\"`, `vcpu_num` is always 0."
                    format: int32
                    example: 8
                  ram_bytes:
                    type: string
                    description: "The RAM size of a node in the cluster. If the `cluster_type`\
                      \ is `\"DEVELOPER\"`, `ram_bytes` is always 0."
                    format: int64
                    example: "68719476736"
                  storage_size_gib:
                    type: integer
                    description: The storage size of a node in the cluster.
                    format: int32
                    example: 1024
                  status:
                    type: string
                    description: The status of a node in the cluster.
                    example: NODE_STATUS_AVAILABLE
                    enum:
                    - NODE_STATUS_AVAILABLE
                    - NODE_STATUS_UNAVAILABLE
                    - NODE_STATUS_CREATING
                    - NODE_STATUS_DELETING
            tiflash:
              type: array
              description: TiFlash node map.
              example:
              - node_name: tiflash-0
                availability_zone: us-west-2a
                node_size: 8C64G
                vcpu_num: 8
                ram_bytes: "68719476736"
                storage_size_gib: 1024
                status: NODE_STATUS_AVAILABLE
              - node_name: tiflash-1
                availability_zone: us-west-2b
                node_size: 8C64G
                vcpu_num: 8
                ram_bytes: "68719476736"
                storage_size_gib: 1024
                status: NODE_STATUS_AVAILABLE
              items:
                type: object
                properties:
                  node_name:
                    type: string
                    description: The name of a node in the cluster.
                    example: tiflash-0
                  availability_zone:
                    type: string
                    description: The availability zone of a node in the cluster.
                    example: us-west-2a
                  node_size:
                    type: string
                    description: The size of the TiFlash component in the cluster.
                    example: 8C64G
                  vcpu_num:
                    type: integer
                    description: "The total vCPUs of a node in the cluster. If the\
                      \ `cluster_type` is `\"DEVELOPER\"`, `vcpu_num` is always 0."
                    format: int32
                    example: 8
                  ram_bytes:
                    type: string
                    description: "The RAM size of a node in the cluster. If the `cluster_type`\
                      \ is `\"DEVELOPER\"`, `ram_bytes` is always 0."
                    format: int64
                    example: "68719476736"
                  storage_size_gib:
                    type: integer
                    description: The storage size of a node in the cluster.
                    format: int32
                    example: 1024
                  status:
                    type: string
                    description: The status of a node in the cluster.
                    example: NODE_STATUS_AVAILABLE
                    enum:
                    - NODE_STATUS_AVAILABLE
                    - NODE_STATUS_UNAVAILABLE
                    - NODE_STATUS_CREATING
                    - NODE_STATUS_DELETING
          description: Node map. The `node_map` is returned only when the `cluster_status`
            is `"AVAILABLE"` or `"MODIFYING"`.
        connection_strings:
          type: object
          properties:
            default_user:
              type: string
              description: The default TiDB user for connection.
              example: root
            standard:
              type: object
              properties:
                host:
                  type: string
                  description: The host of standard connection.
                  example: tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
                port:
                  maximum: 65535
                  minimum: 1024
                  type: integer
                  description: |-
                    The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                    **Limitations**:
                    - For a TiDB Serverless cluster, only port `4000` is available.
                  format: int32
                  example: 4000
                  default: 4000
              description: |-
                Standard connection string.

                You must configure the [IP Access List](https://docs.pingcap.com/tidbcloud/connect-to-tidb-cluster#connect-via-standard-connection) for the cluster you created on [TiDB Cloud console](https://tidbcloud.com/) before connecting to this connection string.
            vpc_peering:
              type: object
              properties:
                host:
                  type: string
                  description: The host of VPC peering connection.
                  example: private-tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
                port:
                  maximum: 65535
                  minimum: 1024
                  type: integer
                  description: |-
                    The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                    **Limitations**:
                    - For a TiDB Serverless cluster, only port `4000` is available.
                  format: int32
                  example: 4000
                  default: 4000
              description: |-
                [VPC peering](https://docs.pingcap.com/tidbcloud/tidb-cloud-glossary#vpc-peering) connection string.

                You must [Set up VPC peering connections](https://docs.pingcap.com/tidbcloud/set-up-vpc-peering-connections) for the project before connecting to this private connection string.
          description: Connection strings.
      description: ClusterItemStatus is the status of cluster.
    openapiClusterNodeMap:
      required:
      - tidb
      - tikv
      type: object
      properties:
        tidb:
          type: array
          description: TiDB node map.
          example:
          - node_name: tidb-0
            availability_zone: us-west-2a
            node_size: 8C16G
            vcpu_num: 8
            ram_bytes: "17179869184"
            status: NODE_STATUS_AVAILABLE
          - node_name: tidb-1
            availability_zone: us-west-2b
            node_size: 8C16G
            vcpu_num: 8
            ram_bytes: "17179869184"
            status: NODE_STATUS_AVAILABLE
          items:
            type: object
            properties:
              node_name:
                type: string
                description: The name of a node in the cluster.
                example: tidb-0
              availability_zone:
                type: string
                description: The availability zone of a node in the cluster.
                example: us-west-2a
              node_size:
                type: string
                description: The size of the TiDB component in the cluster.
                example: 8C16G
              vcpu_num:
                type: integer
                description: "The total vCPUs of a node in the cluster. If the `cluster_type`\
                  \ is `\"DEVELOPER\"`, `vcpu_num` is always 0."
                format: int32
                example: 8
              ram_bytes:
                type: string
                description: "The RAM size of a node in the cluster. If the `cluster_type`\
                  \ is `\"DEVELOPER\"`, `ram_bytes` is always 0."
                format: int64
                example: "17179869184"
              status:
                type: string
                description: The status of a node in the cluster.
                example: NODE_STATUS_AVAILABLE
                enum:
                - NODE_STATUS_AVAILABLE
                - NODE_STATUS_UNAVAILABLE
                - NODE_STATUS_CREATING
                - NODE_STATUS_DELETING
        tikv:
          type: array
          description: TiKV node map.
          example:
          - node_name: tikv-0
            availability_zone: us-west-2a
            node_size: 8C32G
            vcpu_num: 8
            ram_bytes: "68719476736"
            storage_size_gib: 1024
            status: NODE_STATUS_AVAILABLE
          - node_name: tikv-1
            availability_zone: us-west-2b
            node_size: 8C64G
            vcpu_num: 8
            ram_bytes: "68719476736"
            storage_size_gib: 1024
            status: NODE_STATUS_AVAILABLE
          - node_name: tikv-2
            availability_zone: us-west-2c
            node_size: 8C64G
            vcpu_num: 8
            ram_bytes: "68719476736"
            storage_size_gib: 1024
            status: NODE_STATUS_AVAILABLE
          items:
            type: object
            properties:
              node_name:
                type: string
                description: The name of a node in the cluster.
                example: tikv-0
              availability_zone:
                type: string
                description: The availability zone of a node in the cluster.
                example: us-west-2a
              node_size:
                type: string
                description: The size of the TiKV component in the cluster.
                example: 8C32G
              vcpu_num:
                type: integer
                description: "The total vCPUs of a node in the cluster. If the `cluster_type`\
                  \ is `\"DEVELOPER\"`, `vcpu_num` is always 0."
                format: int32
                example: 8
              ram_bytes:
                type: string
                description: "The RAM size of a node in the cluster. If the `cluster_type`\
                  \ is `\"DEVELOPER\"`, `ram_bytes` is always 0."
                format: int64
                example: "68719476736"
              storage_size_gib:
                type: integer
                description: The storage size of a node in the cluster.
                format: int32
                example: 1024
              status:
                type: string
                description: The status of a node in the cluster.
                example: NODE_STATUS_AVAILABLE
                enum:
                - NODE_STATUS_AVAILABLE
                - NODE_STATUS_UNAVAILABLE
                - NODE_STATUS_CREATING
                - NODE_STATUS_DELETING
        tiflash:
          type: array
          description: TiFlash node map.
          example:
          - node_name: tiflash-0
            availability_zone: us-west-2a
            node_size: 8C64G
            vcpu_num: 8
            ram_bytes: "68719476736"
            storage_size_gib: 1024
            status: NODE_STATUS_AVAILABLE
          - node_name: tiflash-1
            availability_zone: us-west-2b
            node_size: 8C64G
            vcpu_num: 8
            ram_bytes: "68719476736"
            storage_size_gib: 1024
            status: NODE_STATUS_AVAILABLE
          items:
            type: object
            properties:
              node_name:
                type: string
                description: The name of a node in the cluster.
                example: tiflash-0
              availability_zone:
                type: string
                description: The availability zone of a node in the cluster.
                example: us-west-2a
              node_size:
                type: string
                description: The size of the TiFlash component in the cluster.
                example: 8C64G
              vcpu_num:
                type: integer
                description: "The total vCPUs of a node in the cluster. If the `cluster_type`\
                  \ is `\"DEVELOPER\"`, `vcpu_num` is always 0."
                format: int32
                example: 8
              ram_bytes:
                type: string
                description: "The RAM size of a node in the cluster. If the `cluster_type`\
                  \ is `\"DEVELOPER\"`, `ram_bytes` is always 0."
                format: int64
                example: "68719476736"
              storage_size_gib:
                type: integer
                description: The storage size of a node in the cluster.
                format: int32
                example: 1024
              status:
                type: string
                description: The status of a node in the cluster.
                example: NODE_STATUS_AVAILABLE
                enum:
                - NODE_STATUS_AVAILABLE
                - NODE_STATUS_UNAVAILABLE
                - NODE_STATUS_CREATING
                - NODE_STATUS_DELETING
    openapiClusterStatus:
      type: string
      enum:
      - AVAILABLE
      - CREATING
      - MODIFYING
      - PAUSED
      - RESUMING
      - UNAVAILABLE
      - IMPORTING
      - MAINTAINING
      - PAUSING
    openapiClusterType:
      type: string
      enum:
      - DEDICATED
      - DEVELOPER
    openapiColumnDefinition:
      title: ColumnDefinition
      required:
      - column_name
      - column_type
      type: object
      properties:
        column_name:
          type: string
          description: The column name.
          example: column01
        column_type:
          type: string
          description: The column type.
          example: VARCHAR(255)
      description: ColumnDefinition is the definition of a column in a table.
    openapiCreateBackupResp:
      title: CreateBackupResp
      type: object
      properties:
        id:
          type: string
          description: The ID of the backup.
          format: uint64
          example: "1"
      description: This response for creating a MANUAL type backup.
    openapiCreateClusterResp:
      title: CreateClusterResp
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: The ID of the cluster.
          format: uint64
          example: "1"
      description: CreateClusterResp is the response for creating cluster.
    openapiCreateImportTaskOptions:
      title: CreateImportTaskOptions
      type: object
      properties:
        pre_create_tables:
          type: array
          description: |-
            The table definition of pre-created tables.

            **Note**: The name of the pre-created tables should match one of the target tables. Otherwise, the table will be ignored and won't be created
          items:
            title: TableDefinition
            required:
            - database_name
            - schema
            - table_name
            type: object
            properties:
              database_name:
                type: string
                description: The database name of the table.
                example: db01
              table_name:
                type: string
                description: The table name of the table.
                example: table01
              schema:
                title: TableSchema
                required:
                - column_definitions
                type: object
                properties:
                  column_definitions:
                    type: array
                    description: The column definition for each column in the table.
                    example:
                    - column_name: id
                      column_type: INTEGER
                    - column_name: column01
                      column_type: VARCHAR(255)
                    items:
                      title: ColumnDefinition
                      required:
                      - column_name
                      - column_type
                      type: object
                      properties:
                        column_name:
                          type: string
                          description: The column name.
                          example: column01
                        column_type:
                          type: string
                          description: The column type.
                          example: VARCHAR(255)
                      description: ColumnDefinition is the definition of a column
                        in a table.
                  primary_key_columns:
                    type: array
                    description: The primary key column names for the table. This
                      is optional. The primary key is taken into account when the
                      table is pre-created before an import task is started.
                    example:
                    - id
                    items:
                      type: string
                description: The schema for the table.
            description: TableDefinition is the definition of a table so that the
              table can be created with this information.
      description: CreateImportTaskOptions is the optional configuration for creating
        an import task.
    openapiCreateImportTaskResp:
      title: CreateImportTaskResp
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: The ID of the import task.
          format: uint64
          example: "12345"
      description: CreateImportTaskResp is the response to the creation of an import
        task.
    openapiCreatePrivateEndpointResp:
      title: CreatePrivateEndpointResp
      required:
      - private_endpoint
      type: object
      properties:
        private_endpoint:
          type: object
          properties:
            cloud_provider:
              type: string
              description: |-
                [Output Only] The cloud provider on which the private endpoint service is hosted.
                - `"AWS"`: the Amazon Web Services cloud provider
                - `"GCP"`: the Google Cloud cloud provider
              format: string
              example: AWS
              enum:
              - AWS
              - GCP
            cluster_id:
              type: string
              description: "[Output Only] The ID of the cluster."
              format: uint64
              example: "1"
            cluster_name:
              type: string
              description: "[Output Only] The name of the cluster."
              example: Cluster0
            region_name:
              type: string
              description: "[Output Only] The region where the private endpoint is\
                \ hosted, such as Oregon in AWS."
              example: Oregon
            endpoint_name:
              type: string
              description: "The format of the private endpoint name varies by cloud\
                \ provider: `\"vpce-xxxx\"` for AWS and `\"projects/xxx/regions/xxx/forwardingRules/xxx\"\
                ` for Google Cloud."
              format: string
              example: vpce-01234567890123456
            status:
              type: string
              description: "[Output Only] The status of the private endpoint."
              format: enum
              example: FAILED
              enum:
              - PENDING
              - ACTIVE
              - DELETING
              - FAILED
            message:
              type: string
              description: "[Output Only] The detailed message when the `status` is\
                \ \"FAILED\"."
              format: enum
              example: The endpoint does not exist.
            service_name:
              type: string
              description: "[Output Only] The service name of the private endpoint."
              format: string
              example: com.amazonaws.vpce.us-west-2.vpce-svc-01234567890123456
            service_status:
              type: string
              description: "[Output Only] The status of the private endpoint service."
              format: enum
              example: ACTIVE
              enum:
              - CREATING
              - ACTIVE
              - DELETING
            id:
              type: string
              description: "[Output Only] The ID of private endpoint. It is used when\
                \ you [deleting the endpoint](#tag/Cluster/operation/DeletePrivateEndpoint)."
              format: uint64
              example: "1"
          description: The newly endpoint created resource.
      description: CreatePrivateEndpointResp is the response for creating a private
        endpoint for a private endpoint service.
    openapiCreatePrivateEndpointServiceResp:
      title: CreatePrivateEndpointServiceResp
      required:
      - private_endpoint_service
      type: object
      properties:
        private_endpoint_service:
          type: object
          properties:
            cloud_provider:
              type: string
              description: |-
                The cloud provider on which the private endpoint service is hosted.
                - `"AWS"`: the Amazon Web Services cloud provider
                - `"GCP"`: the Google Cloud cloud provider
              format: string
              example: AWS
              enum:
              - AWS
              - GCP
            name:
              type: string
              description: "The name of the private endpoint service, which is used\
                \ for connection."
              format: string
              example: com.amazonaws.vpce.us-west-2.vpce-svc-01234567890123456
            status:
              type: string
              description: The status of the private endpoint service.
              format: enum
              example: ACTIVE
              enum:
              - CREATING
              - ACTIVE
              - DELETING
            dns_name:
              type: string
              description: The DNS name of the private endpoint service.
              format: string
              example: privatelink-tidb.01234567890.clusters.tidb-cloud.com
            port:
              type: integer
              description: The port of the private endpoint service.
              format: int32
              example: 4000
            az_ids:
              type: array
              description: Availability zones for the private endpoint service. This
                field is only applicable when the `cloud_provider` is `"AWS"`.
              example:
              - usw2-az2
              - usw2-az1
              items:
                type: string
          description: The newly created private endpoint service resource.
      description: CreatePrivateEndpointServiceResp is the response for creating private
        endpoint service for a cluster.
    openapiCreateProjectReq:
      title: CreateProjectReq
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the project.
          example: Project0
        aws_cmek_enabled:
          type: boolean
          description: |-
            Flag that indicates whether to enable AWS Customer-Managed Encryption Keys.

            Currently this feature is only available upon request. If you need to try out this feature, contact [support](https://docs.pingcap.com/tidbcloud/tidb-cloud-support).
          example: false
          default: false
      description: CreateProjectReq is the request for creating project.
    openapiCreateProjectResp:
      title: CreateProjectResp
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: The ID of the project.
          format: uint64
          example: "1"
      description: CreateProjectResp is the response for creating project.
    openapiCreateRestoreResp:
      title: CreateRestoreResp
      type: object
      properties:
        id:
          type: string
          description: The ID of the restore task.
          format: uint64
          example: "1"
        cluster_id:
          type: string
          description: The ID of the restored cluster. The restored cluster is the
            new cluster your backup data is restored to.
          format: uint64
          example: "1"
      description: CreateRestoreResp is the response for restoring backup to a new
        cluster.
    openapiGcpImportTaskRoleInfo:
      title: GcpImportTaskRoleInfo
      required:
      - account_id
      type: object
      properties:
        account_id:
          type: string
          description: The account ID under which the import tasks for this cluster
            are running.
          example: example-account@example.com
      description: GcpImportTaskRoleInfo is the role information for import tasks
        on a GCP cluster.
    openapiGetBackupOfClusterResp:
      title: GetBackupOfClusterResp
      type: object
      properties:
        id:
          type: string
          description: The ID of the backup.
          format: uint64
          example: "1"
        name:
          type: string
          description: The name of the backup.
          example: backup-1
        description:
          type: string
          description: The description of the backup. It is specified by the user
            when taking a manual type backup. It helps you add additional information
            to the backup.
          example: backup for cluster upgrade in 2022/06/07
        type:
          type: string
          description: "The type of backup. TiDB Cloud only supports manual and auto\
            \ backup. For more information, see [TiDB Cloud Documentation](https://docs.pingcap.com/tidbcloud/backup-and-restore#backup)."
          example: MANUAL
          enum:
          - MANUAL
          - AUTO
        create_timestamp:
          type: string
          description: "The creation time of the backup in UTC. The time format follows\
            \ the [ISO8601](http://en.wikipedia.org/wiki/ISO_8601) standard, which\
            \ is `YYYY-MM-DD` (year-month-day) + T +`HH:MM:SS` (hour-minutes-seconds)\
            \ + Z. For example, `2020-01-01T00:00:00Z`."
          format: date-time
          example: 2020-01-01T00:00:00Z
        size:
          type: string
          description: The bytes of the backup.
          format: uint64
          example: "102400"
        status:
          type: string
          description: The status of backup.
          example: SUCCESS
          enum:
          - PENDING
          - RUNNING
          - FAILED
          - SUCCESS
      description: This response for getting backup of a cluster.
    openapiGetBackupOfClusterRespStatusEnum:
      type: string
      enum:
      - PENDING
      - RUNNING
      - FAILED
      - SUCCESS
    openapiGetClusterConfig:
      type: object
      properties:
        port:
          maximum: 65535
          minimum: 1024
          type: integer
          description: The TiDB port for connection. The port must be in the range
            of 1024-65535 except 10080.
          format: int32
          example: 4000
          default: 4000
        components:
          required:
          - tidb
          - tikv
          type: object
          properties:
            tidb:
              required:
              - node_quantity
              - node_size
              type: object
              properties:
                node_size:
                  type: string
                  description: |-
                    The size of the TiDB component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Additional combination rules**:
                    - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                    - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
                  example: 8C16G
                node_quantity:
                  type: integer
                  description: |
                    The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                  format: int32
                  example: 2
              description: The TiDB component of the cluster.
            tikv:
              required:
              - node_quantity
              - node_size
              - storage_size_gib
              type: object
              properties:
                node_size:
                  type: string
                  description: |-
                    The size of the TiKV component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Additional combination rules**:
                    - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                    - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
                  example: 8C64G
                storage_size_gib:
                  type: integer
                  description: "The storage size of a node in the cluster. You can\
                    \ get the minimum and maximum of storage size from the response\
                    \ of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions)."
                  format: int32
                  example: 1024
                node_quantity:
                  type: integer
                  description: |-
                    The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Limitations**:
                    - The `node_quantity` of TiKV must be a multiple of 3.
                  format: int32
                  example: 3
              description: The TiKV component of the cluster.
            tiflash:
              required:
              - node_quantity
              - node_size
              - storage_size_gib
              type: object
              properties:
                node_size:
                  type: string
                  description: |-
                    The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Additional combination rules**:
                    - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                    - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
                  example: 8C64G
                storage_size_gib:
                  type: integer
                  description: |
                    The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                  format: int32
                  example: 1024
                node_quantity:
                  type: integer
                  description: "The number of nodes in the cluster. You can get the\
                    \ minimum and step of a node quantity from the response of [List\
                    \ the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions)."
                  format: int32
                  example: 1
              description: The TiFlash component of the cluster.
          description: The components of the cluster.
          example:
            tidb:
              node_size: 8C16G
              node_quantity: 2
            tikv:
              node_size: 8C32G
              storage_size_gib: 1024
              node_quantity: 3
    openapiGetPrivateEndpointServiceResp:
      title: GetPrivateEndpointServiceResp
      required:
      - private_endpoint_service
      type: object
      properties:
        private_endpoint_service:
          type: object
          properties:
            cloud_provider:
              type: string
              description: |-
                The cloud provider on which the private endpoint service is hosted.
                - `"AWS"`: the Amazon Web Services cloud provider
                - `"GCP"`: the Google Cloud cloud provider
              format: string
              example: AWS
              enum:
              - AWS
              - GCP
            name:
              type: string
              description: "The name of the private endpoint service, which is used\
                \ for connection."
              format: string
              example: com.amazonaws.vpce.us-west-2.vpce-svc-01234567890123456
            status:
              type: string
              description: The status of the private endpoint service.
              format: enum
              example: ACTIVE
              enum:
              - CREATING
              - ACTIVE
              - DELETING
            dns_name:
              type: string
              description: The DNS name of the private endpoint service.
              format: string
              example: privatelink-tidb.01234567890.clusters.tidb-cloud.com
            port:
              type: integer
              description: The port of the private endpoint service.
              format: int32
              example: 4000
            az_ids:
              type: array
              description: Availability zones for the private endpoint service. This
                field is only applicable when the `cloud_provider` is `"AWS"`.
              example:
              - usw2-az2
              - usw2-az1
              items:
                type: string
          description: The private endpoint service resource of the cluster.
      description: GetPrivateEndpointServiceResp is the response for getting private
        endpoint service for a cluster.
    openapiGetRestoreResp:
      title: GetRestoreResp
      type: object
      properties:
        id:
          type: string
          description: The ID of the restore task.
          format: uint64
          example: "1"
        create_timestamp:
          type: string
          description: |-
            The creation time of the backup in UTC.

            The time format follows the [ISO8601](http://en.wikipedia.org/wiki/ISO_8601) standard, which is `YYYY-MM-DD` (year-month-day) + T +`HH:MM:SS` (hour-minutes-seconds) + Z. For example, `2020-01-01T00:00:00Z`.
          format: date-time
          example: 2020-01-01T00:00:00Z
        backup_id:
          type: string
          description: The ID of the backup.
          format: uint64
          example: "1"
        cluster_id:
          type: string
          description: The cluster ID of the backup.
          format: uint64
          example: "1"
        status:
          type: string
          description: The status of the restore task.
          example: PENDING
          enum:
          - PENDING
          - RUNNING
          - FAILED
          - SUCCESS
        cluster:
          title: ClusterInfoOfRestore
          type: object
          properties:
            id:
              type: string
              description: The ID of the restored cluster. The restored cluster is
                the new cluster your backup data is restored to.
              format: uint64
              example: "1"
            name:
              type: string
              description: The name of the restored cluster. The restored cluster
                is the new cluster your backup data is restored to.
              example: cluster-1
            status:
              type: string
              description: "The status of the restored cluster. Possible values are\
                \ `\"AVAILABLE\"`, `\"CREATING\"`, `\"MODIFYING\"`, `\"PAUSED\"`,\
                \ `\"RESUMING\"`, `\"UNAVAILABLE\"`, `\"IMPORTING\"`, and `\"CLEARED\"\
                `."
              example: AVAILABLE
          description: The information of the restored cluster. The restored cluster
            is the new cluster your backup data is restored to.
        error_message:
          type: string
          description: The error message of restore if failed.
          example: Please contact support.
      description: The response for get restore.
    openapiGetRestoreRespStatusEnum:
      type: string
      enum:
      - PENDING
      - RUNNING
      - FAILED
      - SUCCESS
    openapiImportItem:
      title: ImportItem
      type: object
      properties:
        metadata:
          title: ImportMetadata
          required:
          - create_timestamp
          - id
          type: object
          properties:
            id:
              type: string
              description: The ID of the import task.
              format: uint64
              example: "1"
            name:
              type: string
              description: The name of the import task.
              example: my_import
            create_timestamp:
              type: string
              description: The creation time of the import task in Unix timestamp
                seconds (epoch time).
              format: timestamp
              example: "1676450597"
          description: The metadata of the import task.
        spec:
          title: ImportSpec
          required:
          - source
          - target
          type: object
          properties:
            source:
              title: ImportSource
              required:
              - format
              - type
              - uri
              type: object
              properties:
                type:
                  type: string
                  description: |-
                    The data source type of an import task.

                    - `"S3"`: import data from Amazon S3
                    - `"GCS"`: import data from Google Cloud Storage
                    - `"LOCAL_FILE"`: import data from a local file (only available for [TiDB Serverless](https://docs.pingcap.com/tidbcloud/select-cluster-tier#tidb-serverless) clusters). Before you import from a local file, you need to first upload the file using the [Upload a local file for an import task](#tag/Import/operation/UploadLocalFile) endpoint.

                    **Note:** Currently, if this import spec is used for a [preview](#tag/Import/operation/PreviewImportData) request, only the `LOCAL_FILE` source type is supported.
                  example: S3
                  enum:
                  - S3
                  - GCS
                  - LOCAL_FILE
                uri:
                  type: string
                  description: |-
                    The data source URI of an import task. The URI scheme must match the data source type. Here are the scheme of each source type:
                    * `S3`: `s3://`
                    * `GCS`: `gs://`
                    * `LOCAL_FILE`: `file://`.

                    **Note:** If the import source type is `LOCAL_FILE`, just provide the `upload_stub_id` of the uploaded file from the response of [Upload a local file for an import task](#tag/Import/operation/UploadLocalFile), and make it as the data source folder. For example: `file://12345/`.

                    **Limitation**: If the import source type is `LOCAL_FILE`, only the `CSV` source format type is supported.
                  example: s3://example-bucket/example-source-data/
                aws_assume_role_access:
                  title: AwsAssumeRoleAccess
                  required:
                  - assume_role
                  type: object
                  properties:
                    assume_role:
                      type: string
                      description: The specific AWS role ARN that needs to be assumed
                        to access the Amazon S3 data source.
                      example: arn:aws:iam::999999999999:role/sample-role
                  description: |-
                    The settings to access the S3 data by assuming a specific AWS role. This field is only needed if you need to access S3 data by assuming an AWS role.

                    **Note:** Provide only one of `aws_assume_role_access` and `aws_key_access`. If both `aws_assume_role_access` and `aws_key_access` are provided, an error will be reported.
                aws_key_access:
                  title: AwsKeyAccess
                  required:
                  - access_key_id
                  - secret_access_key
                  type: object
                  properties:
                    access_key_id:
                      type: string
                      description: The access key ID of the account to access the
                        data. This information will be redacted when it is retrieved
                        to obtain the import task information.
                      example: YOUR_ACCESS_KEY_ID
                    secret_access_key:
                      type: string
                      description: The secret access key for the account to access
                        the data. This information will be redacted when it is retrieved
                        to obtain the import task information.
                      example: YOUR_SECRET_ACCESS_KEY
                  description: |-
                    The settings to access the S3 data with an access key. This field is only needed if you want to access the S3 data with an access key.

                    **Note:** Provide only one of `aws_assume_role_access` and `aws_key_access`. If both `aws_assume_role_access` and `aws_key_access` are provided, an error will be reported.
                format:
                  title: ImportSourceFormat
                  required:
                  - type
                  type: object
                  properties:
                    type:
                      type: string
                      description: The format type of an import source.
                      example: CSV
                      enum:
                      - CSV
                      - PARQUET
                      - SQL
                      - AURORA_SNAPSHOT
                    csv_config:
                      title: ImportSourceCSVConfig
                      type: object
                      properties:
                        delimiter:
                          type: string
                          description: The delimiter character used to separate fields
                            in the CSV data.
                          default: ","
                        quote:
                          type: string
                          description: The character used to quote the fields in the
                            CSV data.
                          default: '"'
                        backslash_escape:
                          type: boolean
                          description: |-
                            Whether a backslash (`\`) symbol followed by a character should be combined as a whole and treated as an escape sequence in a CSV field. For example, if this parameter is set to `true`, `\n` will be treated as a 'new-line' character. If it is set to `false`, `\n` will be treated as two separate characters: backslash and `n`.

                            Currently, these are several supported escape sequences: `\0`, `\b`, `\n`, `\r`, `\t`, and `\Z`. If the parameter is set to `true`, but the backslash escape sequence is not recognized, the backslash character is ignored.
                          default: true
                        has_header_row:
                          type: boolean
                          description: "Whether the CSV data has a header row, which\
                            \ is not part of the data. If it is set to `true`, the\
                            \ import task will use the column names in the header\
                            \ row to match the column names in the target table."
                          default: true
                      description: The CSV format settings to parse the source CSV
                        files. This field is only needed if the source format is CSV.
                  description: The format settings of the import data source.
              description: The data source settings of the import task.
            target:
              title: ImportTarget
              type: object
              properties:
                tables:
                  type: array
                  description: |-
                    The settings for each target table that is being imported for the import task. If you leave it empty, the system will scan all the files in the data source using the default file patterns and collect all the tables to import. The files include data files, table schema files, and DB schema files. If you provide a list of tables, only those tables will be imported. For more information about the default file pattern, see [Import CSV Files from Amazon S3 or GCS into TiDB Cloud](https://docs.pingcap.com/tidbcloud/import-csv-files).

                    **Limitations:**
                    * Currently, if you want to use a custom filename pattern, you can only specify one table. If all the tables use the default filename pattern, you can specify more than one target table in `tables`.
                    * It is recommended that you pre-create the target tables before creating an import task. You can do this either by executing the `CREATE TABLE` statement in the cluster or by specifying the table definition in the table creation options.
                    * If a target table is not created, the import module tries to find a **TABLE SCHEMA FILE** containing the `CREATE TABLE` statement of the table in the data source folder with the name `${db_name}.${table_name}-schema.sql` (for example, `db01.tbl01-schema.sql`). If this file is found, the `CREATE TABLE` statement is automatically executed if the table doesn't exist before the actual import process starts. If the table is still missing after this pre-create step, an error will occur.
                  items:
                    title: ImportTargetTable
                    required:
                    - database_name
                    - table_name
                    type: object
                    properties:
                      database_name:
                        type: string
                        description: The target database name.
                        example: db01
                      table_name:
                        type: string
                        description: The target table name.
                        example: table01
                      file_name_pattern:
                        type: string
                        description: |-
                          The filename pattern used to map the files in the data source to this target table. The pattern should be a simple glob pattern. Here are some examples:
                          * `my-data?.csv`: all CSV files starting with `my-data` and one character (such as `my-data1.csv` and `my-data2.csv`) will be imported into the same target table.
                          * `my-data*.csv`: all CSV files starting with `my-data` will be imported into the same target table.

                          If no pattern is specified, a default pattern is used. The default pattern will try to find files with this naming convention as the data files for this table: `${db_name}.${table_name}.[numeric_index].${format_suffix}`.

                          Here are some examples of filenames that can be matched as data files for the table `db01.table01`: `db01.table01.csv`, `db01.table01.00001.csv`.

                          For more information about the custom file pattern and the default pattern, refer to [Import CSV Files from Amazon S3 or GCS into TiDB Cloud](https://docs.pingcap.com/tidbcloud/import-csv-files).

                          **Note:** For `LOCAL_FILE` import tasks, use the local file name for this field. The local file name must match the local file name in [Upload a local file for an import task](#tag/Import/operation/UploadLocalFile).
                        example: data/db01/table01.*.csv
                    description: ImportTargetTable represents the settings for importing
                      source data into a single target table of an import task.
              description: The target settings of the import task.
          description: The specification of the import task.
        status:
          title: ImportStatus
          required:
          - phase
          type: object
          properties:
            phase:
              type: string
              description: The current phase that the import task is in.
              example: IMPORTING
              enum:
              - PREPARING
              - IMPORTING
              - COMPLETED
              - FAILED
              - CANCELING
              - CANCELED
            error_message:
              type: string
              description: The error message of the import task.
              example: some error occurs
            start_timestamp:
              type: string
              description: The start timestamp of the import task. The format is Unix
                timestamp (the seconds elapsed since the Unix epoch)
              format: timestamp
              example: "1676450597"
            end_timestamp:
              type: string
              description: The end timestamp of the import task. The format is Unix
                timestamp (the seconds elapsed since the Unix epoch).
              format: timestamp
              example: "1676450897"
            progress:
              title: ImportProgress
              required:
              - import_progress
              - validation_progress
              type: object
              properties:
                import_progress:
                  maximum: 100
                  type: number
                  description: The overall importing progress of the import task.
                  format: double
                  example: 59.0
                validation_progress:
                  maximum: 100
                  type: number
                  description: The overall validation progress of the import task
                    after the data has been imported into the target cluster.
                  format: double
                  example: 59.0
              description: The progress of the import task.
            source_total_size_bytes:
              type: string
              description: The total size of the import task's data source. The unit
                is bytes.
              format: uint64
              example: "10737418240"
          description: The status of the import task.
      description: ImportItem represents the information of a single import task.
    openapiImportMetadata:
      title: ImportMetadata
      required:
      - create_timestamp
      - id
      type: object
      properties:
        id:
          type: string
          description: The ID of the import task.
          format: uint64
          example: "1"
        name:
          type: string
          description: The name of the import task.
          example: my_import
        create_timestamp:
          type: string
          description: The creation time of the import task in Unix timestamp seconds
            (epoch time).
          format: timestamp
          example: "1676450597"
      description: ImportMetadata represents some basic metadata about an import task.
    openapiImportProgress:
      title: ImportProgress
      required:
      - import_progress
      - validation_progress
      type: object
      properties:
        import_progress:
          maximum: 100
          type: number
          description: The overall importing progress of the import task.
          format: double
          example: 59.0
        validation_progress:
          maximum: 100
          type: number
          description: The overall validation progress of the import task after the
            data has been imported into the target cluster.
          format: double
          example: 59.0
      description: ImportProgress represents the progress information of an import
        task.
    openapiImportSource:
      title: ImportSource
      required:
      - format
      - type
      - uri
      type: object
      properties:
        type:
          type: string
          description: |-
            The data source type of an import task.

            - `"S3"`: import data from Amazon S3
            - `"GCS"`: import data from Google Cloud Storage
            - `"LOCAL_FILE"`: import data from a local file (only available for [TiDB Serverless](https://docs.pingcap.com/tidbcloud/select-cluster-tier#tidb-serverless) clusters). Before you import from a local file, you need to first upload the file using the [Upload a local file for an import task](#tag/Import/operation/UploadLocalFile) endpoint.

            **Note:** Currently, if this import spec is used for a [preview](#tag/Import/operation/PreviewImportData) request, only the `LOCAL_FILE` source type is supported.
          example: S3
          enum:
          - S3
          - GCS
          - LOCAL_FILE
        uri:
          type: string
          description: |-
            The data source URI of an import task. The URI scheme must match the data source type. Here are the scheme of each source type:
            * `S3`: `s3://`
            * `GCS`: `gs://`
            * `LOCAL_FILE`: `file://`.

            **Note:** If the import source type is `LOCAL_FILE`, just provide the `upload_stub_id` of the uploaded file from the response of [Upload a local file for an import task](#tag/Import/operation/UploadLocalFile), and make it as the data source folder. For example: `file://12345/`.

            **Limitation**: If the import source type is `LOCAL_FILE`, only the `CSV` source format type is supported.
          example: s3://example-bucket/example-source-data/
        aws_assume_role_access:
          title: AwsAssumeRoleAccess
          required:
          - assume_role
          type: object
          properties:
            assume_role:
              type: string
              description: The specific AWS role ARN that needs to be assumed to access
                the Amazon S3 data source.
              example: arn:aws:iam::999999999999:role/sample-role
          description: |-
            The settings to access the S3 data by assuming a specific AWS role. This field is only needed if you need to access S3 data by assuming an AWS role.

            **Note:** Provide only one of `aws_assume_role_access` and `aws_key_access`. If both `aws_assume_role_access` and `aws_key_access` are provided, an error will be reported.
        aws_key_access:
          title: AwsKeyAccess
          required:
          - access_key_id
          - secret_access_key
          type: object
          properties:
            access_key_id:
              type: string
              description: The access key ID of the account to access the data. This
                information will be redacted when it is retrieved to obtain the import
                task information.
              example: YOUR_ACCESS_KEY_ID
            secret_access_key:
              type: string
              description: The secret access key for the account to access the data.
                This information will be redacted when it is retrieved to obtain the
                import task information.
              example: YOUR_SECRET_ACCESS_KEY
          description: |-
            The settings to access the S3 data with an access key. This field is only needed if you want to access the S3 data with an access key.

            **Note:** Provide only one of `aws_assume_role_access` and `aws_key_access`. If both `aws_assume_role_access` and `aws_key_access` are provided, an error will be reported.
        format:
          title: ImportSourceFormat
          required:
          - type
          type: object
          properties:
            type:
              type: string
              description: The format type of an import source.
              example: CSV
              enum:
              - CSV
              - PARQUET
              - SQL
              - AURORA_SNAPSHOT
            csv_config:
              title: ImportSourceCSVConfig
              type: object
              properties:
                delimiter:
                  type: string
                  description: The delimiter character used to separate fields in
                    the CSV data.
                  default: ","
                quote:
                  type: string
                  description: The character used to quote the fields in the CSV data.
                  default: '"'
                backslash_escape:
                  type: boolean
                  description: |-
                    Whether a backslash (`\`) symbol followed by a character should be combined as a whole and treated as an escape sequence in a CSV field. For example, if this parameter is set to `true`, `\n` will be treated as a 'new-line' character. If it is set to `false`, `\n` will be treated as two separate characters: backslash and `n`.

                    Currently, these are several supported escape sequences: `\0`, `\b`, `\n`, `\r`, `\t`, and `\Z`. If the parameter is set to `true`, but the backslash escape sequence is not recognized, the backslash character is ignored.
                  default: true
                has_header_row:
                  type: boolean
                  description: "Whether the CSV data has a header row, which is not\
                    \ part of the data. If it is set to `true`, the import task will\
                    \ use the column names in the header row to match the column names\
                    \ in the target table."
                  default: true
              description: The CSV format settings to parse the source CSV files.
                This field is only needed if the source format is CSV.
          description: The format settings of the import data source.
      description: ImportSource represents the data source settings of an import task.
    openapiImportSourceCSVConfig:
      title: ImportSourceCSVConfig
      type: object
      properties:
        delimiter:
          type: string
          description: The delimiter character used to separate fields in the CSV
            data.
          default: ","
        quote:
          type: string
          description: The character used to quote the fields in the CSV data.
          default: '"'
        backslash_escape:
          type: boolean
          description: |-
            Whether a backslash (`\`) symbol followed by a character should be combined as a whole and treated as an escape sequence in a CSV field. For example, if this parameter is set to `true`, `\n` will be treated as a 'new-line' character. If it is set to `false`, `\n` will be treated as two separate characters: backslash and `n`.

            Currently, these are several supported escape sequences: `\0`, `\b`, `\n`, `\r`, `\t`, and `\Z`. If the parameter is set to `true`, but the backslash escape sequence is not recognized, the backslash character is ignored.
          default: true
        has_header_row:
          type: boolean
          description: "Whether the CSV data has a header row, which is not part of\
            \ the data. If it is set to `true`, the import task will use the column\
            \ names in the header row to match the column names in the target table."
          default: true
      description: ImportSourceCSVConfig represents the settings for parsing the CSV
        source data of an import task.
    openapiImportSourceFormat:
      title: ImportSourceFormat
      required:
      - type
      type: object
      properties:
        type:
          type: string
          description: The format type of an import source.
          example: CSV
          enum:
          - CSV
          - PARQUET
          - SQL
          - AURORA_SNAPSHOT
        csv_config:
          title: ImportSourceCSVConfig
          type: object
          properties:
            delimiter:
              type: string
              description: The delimiter character used to separate fields in the
                CSV data.
              default: ","
            quote:
              type: string
              description: The character used to quote the fields in the CSV data.
              default: '"'
            backslash_escape:
              type: boolean
              description: |-
                Whether a backslash (`\`) symbol followed by a character should be combined as a whole and treated as an escape sequence in a CSV field. For example, if this parameter is set to `true`, `\n` will be treated as a 'new-line' character. If it is set to `false`, `\n` will be treated as two separate characters: backslash and `n`.

                Currently, these are several supported escape sequences: `\0`, `\b`, `\n`, `\r`, `\t`, and `\Z`. If the parameter is set to `true`, but the backslash escape sequence is not recognized, the backslash character is ignored.
              default: true
            has_header_row:
              type: boolean
              description: "Whether the CSV data has a header row, which is not part\
                \ of the data. If it is set to `true`, the import task will use the\
                \ column names in the header row to match the column names in the\
                \ target table."
              default: true
          description: The CSV format settings to parse the source CSV files. This
            field is only needed if the source format is CSV.
      description: ImportSourceFormat represents the settings for reading and parsing
        source data in the correct format.
    openapiImportSpec:
      title: ImportSpec
      required:
      - source
      - target
      type: object
      properties:
        source:
          title: ImportSource
          required:
          - format
          - type
          - uri
          type: object
          properties:
            type:
              type: string
              description: |-
                The data source type of an import task.

                - `"S3"`: import data from Amazon S3
                - `"GCS"`: import data from Google Cloud Storage
                - `"LOCAL_FILE"`: import data from a local file (only available for [TiDB Serverless](https://docs.pingcap.com/tidbcloud/select-cluster-tier#tidb-serverless) clusters). Before you import from a local file, you need to first upload the file using the [Upload a local file for an import task](#tag/Import/operation/UploadLocalFile) endpoint.

                **Note:** Currently, if this import spec is used for a [preview](#tag/Import/operation/PreviewImportData) request, only the `LOCAL_FILE` source type is supported.
              example: S3
              enum:
              - S3
              - GCS
              - LOCAL_FILE
            uri:
              type: string
              description: |-
                The data source URI of an import task. The URI scheme must match the data source type. Here are the scheme of each source type:
                * `S3`: `s3://`
                * `GCS`: `gs://`
                * `LOCAL_FILE`: `file://`.

                **Note:** If the import source type is `LOCAL_FILE`, just provide the `upload_stub_id` of the uploaded file from the response of [Upload a local file for an import task](#tag/Import/operation/UploadLocalFile), and make it as the data source folder. For example: `file://12345/`.

                **Limitation**: If the import source type is `LOCAL_FILE`, only the `CSV` source format type is supported.
              example: s3://example-bucket/example-source-data/
            aws_assume_role_access:
              title: AwsAssumeRoleAccess
              required:
              - assume_role
              type: object
              properties:
                assume_role:
                  type: string
                  description: The specific AWS role ARN that needs to be assumed
                    to access the Amazon S3 data source.
                  example: arn:aws:iam::999999999999:role/sample-role
              description: |-
                The settings to access the S3 data by assuming a specific AWS role. This field is only needed if you need to access S3 data by assuming an AWS role.

                **Note:** Provide only one of `aws_assume_role_access` and `aws_key_access`. If both `aws_assume_role_access` and `aws_key_access` are provided, an error will be reported.
            aws_key_access:
              title: AwsKeyAccess
              required:
              - access_key_id
              - secret_access_key
              type: object
              properties:
                access_key_id:
                  type: string
                  description: The access key ID of the account to access the data.
                    This information will be redacted when it is retrieved to obtain
                    the import task information.
                  example: YOUR_ACCESS_KEY_ID
                secret_access_key:
                  type: string
                  description: The secret access key for the account to access the
                    data. This information will be redacted when it is retrieved to
                    obtain the import task information.
                  example: YOUR_SECRET_ACCESS_KEY
              description: |-
                The settings to access the S3 data with an access key. This field is only needed if you want to access the S3 data with an access key.

                **Note:** Provide only one of `aws_assume_role_access` and `aws_key_access`. If both `aws_assume_role_access` and `aws_key_access` are provided, an error will be reported.
            format:
              title: ImportSourceFormat
              required:
              - type
              type: object
              properties:
                type:
                  type: string
                  description: The format type of an import source.
                  example: CSV
                  enum:
                  - CSV
                  - PARQUET
                  - SQL
                  - AURORA_SNAPSHOT
                csv_config:
                  title: ImportSourceCSVConfig
                  type: object
                  properties:
                    delimiter:
                      type: string
                      description: The delimiter character used to separate fields
                        in the CSV data.
                      default: ","
                    quote:
                      type: string
                      description: The character used to quote the fields in the CSV
                        data.
                      default: '"'
                    backslash_escape:
                      type: boolean
                      description: |-
                        Whether a backslash (`\`) symbol followed by a character should be combined as a whole and treated as an escape sequence in a CSV field. For example, if this parameter is set to `true`, `\n` will be treated as a 'new-line' character. If it is set to `false`, `\n` will be treated as two separate characters: backslash and `n`.

                        Currently, these are several supported escape sequences: `\0`, `\b`, `\n`, `\r`, `\t`, and `\Z`. If the parameter is set to `true`, but the backslash escape sequence is not recognized, the backslash character is ignored.
                      default: true
                    has_header_row:
                      type: boolean
                      description: "Whether the CSV data has a header row, which is\
                        \ not part of the data. If it is set to `true`, the import\
                        \ task will use the column names in the header row to match\
                        \ the column names in the target table."
                      default: true
                  description: The CSV format settings to parse the source CSV files.
                    This field is only needed if the source format is CSV.
              description: The format settings of the import data source.
          description: The data source settings of the import task.
        target:
          title: ImportTarget
          type: object
          properties:
            tables:
              type: array
              description: |-
                The settings for each target table that is being imported for the import task. If you leave it empty, the system will scan all the files in the data source using the default file patterns and collect all the tables to import. The files include data files, table schema files, and DB schema files. If you provide a list of tables, only those tables will be imported. For more information about the default file pattern, see [Import CSV Files from Amazon S3 or GCS into TiDB Cloud](https://docs.pingcap.com/tidbcloud/import-csv-files).

                **Limitations:**
                * Currently, if you want to use a custom filename pattern, you can only specify one table. If all the tables use the default filename pattern, you can specify more than one target table in `tables`.
                * It is recommended that you pre-create the target tables before creating an import task. You can do this either by executing the `CREATE TABLE` statement in the cluster or by specifying the table definition in the table creation options.
                * If a target table is not created, the import module tries to find a **TABLE SCHEMA FILE** containing the `CREATE TABLE` statement of the table in the data source folder with the name `${db_name}.${table_name}-schema.sql` (for example, `db01.tbl01-schema.sql`). If this file is found, the `CREATE TABLE` statement is automatically executed if the table doesn't exist before the actual import process starts. If the table is still missing after this pre-create step, an error will occur.
              items:
                title: ImportTargetTable
                required:
                - database_name
                - table_name
                type: object
                properties:
                  database_name:
                    type: string
                    description: The target database name.
                    example: db01
                  table_name:
                    type: string
                    description: The target table name.
                    example: table01
                  file_name_pattern:
                    type: string
                    description: |-
                      The filename pattern used to map the files in the data source to this target table. The pattern should be a simple glob pattern. Here are some examples:
                      * `my-data?.csv`: all CSV files starting with `my-data` and one character (such as `my-data1.csv` and `my-data2.csv`) will be imported into the same target table.
                      * `my-data*.csv`: all CSV files starting with `my-data` will be imported into the same target table.

                      If no pattern is specified, a default pattern is used. The default pattern will try to find files with this naming convention as the data files for this table: `${db_name}.${table_name}.[numeric_index].${format_suffix}`.

                      Here are some examples of filenames that can be matched as data files for the table `db01.table01`: `db01.table01.csv`, `db01.table01.00001.csv`.

                      For more information about the custom file pattern and the default pattern, refer to [Import CSV Files from Amazon S3 or GCS into TiDB Cloud](https://docs.pingcap.com/tidbcloud/import-csv-files).

                      **Note:** For `LOCAL_FILE` import tasks, use the local file name for this field. The local file name must match the local file name in [Upload a local file for an import task](#tag/Import/operation/UploadLocalFile).
                    example: data/db01/table01.*.csv
                description: ImportTargetTable represents the settings for importing
                  source data into a single target table of an import task.
          description: The target settings of the import task.
      description: ImportSpec represents the settings and specifications of an import
        task.
    openapiImportStatus:
      title: ImportStatus
      required:
      - phase
      type: object
      properties:
        phase:
          type: string
          description: The current phase that the import task is in.
          example: IMPORTING
          enum:
          - PREPARING
          - IMPORTING
          - COMPLETED
          - FAILED
          - CANCELING
          - CANCELED
        error_message:
          type: string
          description: The error message of the import task.
          example: some error occurs
        start_timestamp:
          type: string
          description: The start timestamp of the import task. The format is Unix
            timestamp (the seconds elapsed since the Unix epoch)
          format: timestamp
          example: "1676450597"
        end_timestamp:
          type: string
          description: The end timestamp of the import task. The format is Unix timestamp
            (the seconds elapsed since the Unix epoch).
          format: timestamp
          example: "1676450897"
        progress:
          title: ImportProgress
          required:
          - import_progress
          - validation_progress
          type: object
          properties:
            import_progress:
              maximum: 100
              type: number
              description: The overall importing progress of the import task.
              format: double
              example: 59.0
            validation_progress:
              maximum: 100
              type: number
              description: The overall validation progress of the import task after
                the data has been imported into the target cluster.
              format: double
              example: 59.0
          description: The progress of the import task.
        source_total_size_bytes:
          type: string
          description: The total size of the import task's data source. The unit is
            bytes.
          format: uint64
          example: "10737418240"
      description: ImportStatus represents the status of an import task.
    openapiImportTarget:
      title: ImportTarget
      type: object
      properties:
        tables:
          type: array
          description: |-
            The settings for each target table that is being imported for the import task. If you leave it empty, the system will scan all the files in the data source using the default file patterns and collect all the tables to import. The files include data files, table schema files, and DB schema files. If you provide a list of tables, only those tables will be imported. For more information about the default file pattern, see [Import CSV Files from Amazon S3 or GCS into TiDB Cloud](https://docs.pingcap.com/tidbcloud/import-csv-files).

            **Limitations:**
            * Currently, if you want to use a custom filename pattern, you can only specify one table. If all the tables use the default filename pattern, you can specify more than one target table in `tables`.
            * It is recommended that you pre-create the target tables before creating an import task. You can do this either by executing the `CREATE TABLE` statement in the cluster or by specifying the table definition in the table creation options.
            * If a target table is not created, the import module tries to find a **TABLE SCHEMA FILE** containing the `CREATE TABLE` statement of the table in the data source folder with the name `${db_name}.${table_name}-schema.sql` (for example, `db01.tbl01-schema.sql`). If this file is found, the `CREATE TABLE` statement is automatically executed if the table doesn't exist before the actual import process starts. If the table is still missing after this pre-create step, an error will occur.
          items:
            title: ImportTargetTable
            required:
            - database_name
            - table_name
            type: object
            properties:
              database_name:
                type: string
                description: The target database name.
                example: db01
              table_name:
                type: string
                description: The target table name.
                example: table01
              file_name_pattern:
                type: string
                description: |-
                  The filename pattern used to map the files in the data source to this target table. The pattern should be a simple glob pattern. Here are some examples:
                  * `my-data?.csv`: all CSV files starting with `my-data` and one character (such as `my-data1.csv` and `my-data2.csv`) will be imported into the same target table.
                  * `my-data*.csv`: all CSV files starting with `my-data` will be imported into the same target table.

                  If no pattern is specified, a default pattern is used. The default pattern will try to find files with this naming convention as the data files for this table: `${db_name}.${table_name}.[numeric_index].${format_suffix}`.

                  Here are some examples of filenames that can be matched as data files for the table `db01.table01`: `db01.table01.csv`, `db01.table01.00001.csv`.

                  For more information about the custom file pattern and the default pattern, refer to [Import CSV Files from Amazon S3 or GCS into TiDB Cloud](https://docs.pingcap.com/tidbcloud/import-csv-files).

                  **Note:** For `LOCAL_FILE` import tasks, use the local file name for this field. The local file name must match the local file name in [Upload a local file for an import task](#tag/Import/operation/UploadLocalFile).
                example: data/db01/table01.*.csv
            description: ImportTargetTable represents the settings for importing source
              data into a single target table of an import task.
      description: ImportTarget represents the target settings of an import task.
    openapiImportTargetTable:
      title: ImportTargetTable
      required:
      - database_name
      - table_name
      type: object
      properties:
        database_name:
          type: string
          description: The target database name.
          example: db01
        table_name:
          type: string
          description: The target table name.
          example: table01
        file_name_pattern:
          type: string
          description: |-
            The filename pattern used to map the files in the data source to this target table. The pattern should be a simple glob pattern. Here are some examples:
            * `my-data?.csv`: all CSV files starting with `my-data` and one character (such as `my-data1.csv` and `my-data2.csv`) will be imported into the same target table.
            * `my-data*.csv`: all CSV files starting with `my-data` will be imported into the same target table.

            If no pattern is specified, a default pattern is used. The default pattern will try to find files with this naming convention as the data files for this table: `${db_name}.${table_name}.[numeric_index].${format_suffix}`.

            Here are some examples of filenames that can be matched as data files for the table `db01.table01`: `db01.table01.csv`, `db01.table01.00001.csv`.

            For more information about the custom file pattern and the default pattern, refer to [Import CSV Files from Amazon S3 or GCS into TiDB Cloud](https://docs.pingcap.com/tidbcloud/import-csv-files).

            **Note:** For `LOCAL_FILE` import tasks, use the local file name for this field. The local file name must match the local file name in [Upload a local file for an import task](#tag/Import/operation/UploadLocalFile).
          example: data/db01/table01.*.csv
      description: ImportTargetTable represents the settings for importing source
        data into a single target table of an import task.
    openapiImportTaskRoleInfo:
      title: ImportTaskRoleInfo
      type: object
      properties:
        aws_import_role:
          title: AwsImportTaskRoleInfo
          required:
          - account_id
          - external_id
          type: object
          properties:
            account_id:
              type: string
              description: The account ID under which the import tasks for this cluster
                are running.
              example: "999999999999"
            external_id:
              type: string
              description: "The unique external ID that binds to the cluster, which\
                \ is a long string. When an import task starts and attempts to assume\
                \ a specified role, it automatically attaches this external ID. This\
                \ means that you can configure this external ID in the assumed role's\
                \ trust relationship, so that only the import task of that specified\
                \ cluster can access the data by assuming the role. This can provide\
                \ additional security."
              example: abcdefghijklmnopqrstuvwxyz0123456789xxxxxxxxxxxxxx
          description: "The import role information for an AWS cluster. Only TiDB\
            \ clusters on AWS return this information. If the TiDB cluster is deployed\
            \ on GCP, this field is not returned."
        gcp_import_role:
          title: GcpImportTaskRoleInfo
          required:
          - account_id
          type: object
          properties:
            account_id:
              type: string
              description: The account ID under which the import tasks for this cluster
                are running.
              example: example-account@example.com
          description: "The import role information for a GCP cluster. Only TiDB clusters\
            \ on GCP return this information. If the TiDB cluster is deployed on AWS,\
            \ this field is not returned."
      description: ImportTaskRoleInfo is the role information for import tasks on
        a cluster. You can use this information to configure the access for the import
        tasks to retrieve the data from the data source.
    openapiIpAccessListItem:
      required:
      - cidr
      type: object
      properties:
        cidr:
          type: string
          description: The IP address or CIDR range that you want to add to the cluster's
            IP access list.
          example: 8.8.8.8/32
        description:
          type: string
          description: Description that explains the purpose of the entry.
          example: My Current IP Address
    openapiListAwsCmekResp:
      title: ListAwsCmekResp
      type: object
      properties:
        items:
          type: array
          description: The specifications of the AWS CMEK.
          items:
            title: AwsCmekSpec
            required:
            - kms_arn
            - region
            type: object
            properties:
              region:
                type: string
                description: |-
                  The region name of the AWS CMEK. The region value should match the cloud provider's region code.

                  You can get the complete list of available regions from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                  For the detailed information on each region, refer to the documentation of the [AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) cloud provider.
                example: us-west-2
              kms_arn:
                type: string
                description: The KMS ARN of the AWS CMEK.
                example: arn:aws:kms:example
            description: AwsCmekSpec is the specification of the AWS CMEK.
      description: ListAwsCmekResp is the response for getting AWS Customer-Managed
        Encryption Keys for a project.
    openapiListBackupItem:
      title: ListBackupItem
      type: object
      properties:
        id:
          type: string
          description: The ID of the backup. It is generated by TiDB Cloud.
          format: uint64
          example: "1"
        name:
          type: string
          description: The name of the backup.
          example: backup-1
        description:
          type: string
          description: The description of the backup. It is specified by the user
            when taking a manual type backup. It helps you add additional information
            to the backup.
          example: backup for cluster upgrade in 2022/06/07
        type:
          type: string
          description: "The type of backup. TiDB Cloud only supports manual and auto\
            \ backup. For more information, see [TiDB Cloud Documentation](https://docs.pingcap.com/tidbcloud/backup-and-restore#backup)."
          example: MANUAL
          enum:
          - MANUAL
          - AUTO
        create_timestamp:
          type: string
          description: "The creation time of the backup in UTC. The time format follows\
            \ the [ISO8601](http://en.wikipedia.org/wiki/ISO_8601) standard, which\
            \ is `YYYY-MM-DD` (year-month-day) + T +`HH:MM:SS` (hour-minutes-seconds)\
            \ + Z. For example, `2020-01-01T00:00:00Z`."
          format: date-time
          example: 2020-01-01T00:00:00Z
        size:
          type: string
          description: The bytes of the backup.
          format: uint64
          example: "102400"
        status:
          type: string
          description: The status of backup.
          example: SUCCESS
          enum:
          - PENDING
          - RUNNING
          - FAILED
          - SUCCESS
      description: The item of backup list.
    openapiListBackupItemStatusEnum:
      type: string
      enum:
      - PENDING
      - RUNNING
      - FAILED
      - SUCCESS
    openapiListBackupOfClusterResp:
      title: ListBackupOfClusterResp
      type: object
      properties:
        items:
          type: array
          description: The items of all backups.
          items:
            title: ListBackupItem
            type: object
            properties:
              id:
                type: string
                description: The ID of the backup. It is generated by TiDB Cloud.
                format: uint64
                example: "1"
              name:
                type: string
                description: The name of the backup.
                example: backup-1
              description:
                type: string
                description: The description of the backup. It is specified by the
                  user when taking a manual type backup. It helps you add additional
                  information to the backup.
                example: backup for cluster upgrade in 2022/06/07
              type:
                type: string
                description: "The type of backup. TiDB Cloud only supports manual\
                  \ and auto backup. For more information, see [TiDB Cloud Documentation](https://docs.pingcap.com/tidbcloud/backup-and-restore#backup)."
                example: MANUAL
                enum:
                - MANUAL
                - AUTO
              create_timestamp:
                type: string
                description: "The creation time of the backup in UTC. The time format\
                  \ follows the [ISO8601](http://en.wikipedia.org/wiki/ISO_8601) standard,\
                  \ which is `YYYY-MM-DD` (year-month-day) + T +`HH:MM:SS` (hour-minutes-seconds)\
                  \ + Z. For example, `2020-01-01T00:00:00Z`."
                format: date-time
                example: 2020-01-01T00:00:00Z
              size:
                type: string
                description: The bytes of the backup.
                format: uint64
                example: "102400"
              status:
                type: string
                description: The status of backup.
                example: SUCCESS
                enum:
                - PENDING
                - RUNNING
                - FAILED
                - SUCCESS
            description: The item of backup list.
        total:
          type: integer
          description: The total number of backups in the project.
          format: int64
          example: 10
      description: The response for listing backups of a cluster.
    openapiListClustersOfProjectResp:
      title: GetClustersOfProjectResp
      required:
      - items
      - total
      type: object
      properties:
        items:
          type: array
          description: The items of clusters in the project.
          items:
            title: ClusterItem
            required:
            - id
            - project_id
            type: object
            properties:
              id:
                type: string
                description: The ID of the cluster.
                format: uint64
                example: "1"
              project_id:
                type: string
                description: The ID of the project.
                format: uint64
                example: "1"
              name:
                pattern: "^[A-Za-z0-9][-A-Za-z0-9]{2,62}[A-Za-z0-9]$"
                type: string
                description: The name of the cluster.
                example: Cluster0
              cluster_type:
                type: string
                description: |-
                  The cluster type:
                  - `"DEVELOPER"`: a [TiDB Serverless](https://docs.pingcap.com/tidbcloud/select-cluster-tier#tidb-serverless) cluster
                  - `"DEDICATED"`: a [TiDB Dedicated](https://docs.pingcap.com/tidbcloud/select-cluster-tier#dedicated-tier) cluster

                  **Warning:** `"DEVELOPER"` will soon be changed to `"SERVERLESS"` to represent TiDB Serverless clusters.
                format: enum
                example: DEDICATED
                enum:
                - DEDICATED
                - DEVELOPER
              cloud_provider:
                type: string
                description: |-
                  The cloud provider on which your TiDB cluster is hosted.
                  - `"AWS"`: the Amazon Web Services cloud provider
                  - `"GCP"`: the Google Cloud cloud provider
                format: string
                example: AWS
                enum:
                - AWS
                - GCP
              region:
                type: string
                description: Region of the cluster.
                example: us-west-2
              create_timestamp:
                type: string
                description: The creation time of the cluster in Unix timestamp seconds
                  (epoch time).
                format: timestamp
                example: "1656991448"
              config:
                type: object
                properties:
                  port:
                    maximum: 65535
                    minimum: 1024
                    type: integer
                    description: The TiDB port for connection. The port must be in
                      the range of 1024-65535 except 10080.
                    format: int32
                    example: 4000
                    default: 4000
                  components:
                    required:
                    - tidb
                    - tikv
                    type: object
                    properties:
                      tidb:
                        required:
                        - node_quantity
                        - node_size
                        type: object
                        properties:
                          node_size:
                            type: string
                            description: |-
                              The size of the TiDB component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                              **Additional combination rules**:
                              - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                              - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
                            example: 8C16G
                          node_quantity:
                            type: integer
                            description: |
                              The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                            format: int32
                            example: 2
                        description: The TiDB component of the cluster.
                      tikv:
                        required:
                        - node_quantity
                        - node_size
                        - storage_size_gib
                        type: object
                        properties:
                          node_size:
                            type: string
                            description: |-
                              The size of the TiKV component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                              **Additional combination rules**:
                              - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                              - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
                            example: 8C64G
                          storage_size_gib:
                            type: integer
                            description: "The storage size of a node in the cluster.\
                              \ You can get the minimum and maximum of storage size\
                              \ from the response of [List the cloud providers, regions\
                              \ and available specifications](#tag/Cluster/operation/ListProviderRegions)."
                            format: int32
                            example: 1024
                          node_quantity:
                            type: integer
                            description: |-
                              The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                              **Limitations**:
                              - The `node_quantity` of TiKV must be a multiple of 3.
                            format: int32
                            example: 3
                        description: The TiKV component of the cluster.
                      tiflash:
                        required:
                        - node_quantity
                        - node_size
                        - storage_size_gib
                        type: object
                        properties:
                          node_size:
                            type: string
                            description: |-
                              The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                              **Additional combination rules**:
                              - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                              - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
                            example: 8C64G
                          storage_size_gib:
                            type: integer
                            description: |
                              The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                            format: int32
                            example: 1024
                          node_quantity:
                            type: integer
                            description: "The number of nodes in the cluster. You\
                              \ can get the minimum and step of a node quantity from\
                              \ the response of [List the cloud providers, regions\
                              \ and available specifications](#tag/Cluster/operation/ListProviderRegions)."
                            format: int32
                            example: 1
                        description: The TiFlash component of the cluster.
                    description: The components of the cluster.
                    example:
                      tidb:
                        node_size: 8C16G
                        node_quantity: 2
                      tikv:
                        node_size: 8C32G
                        storage_size_gib: 1024
                        node_quantity: 3
                description: The configuration of the cluster.
                example:
                  port: 4000
                  components:
                    tidb:
                      node_size: 8C16G
                      node_quantity: 2
                    tikv:
                      node_size: 8C32G
                      storage_size_gib: 1024
                      node_quantity: 3
              status:
                title: ClusterItemStatus
                type: object
                properties:
                  tidb_version:
                    type: string
                    description: TiDB version.
                    example: v6.1.0
                  cluster_status:
                    type: string
                    description: Status of the cluster.
                    format: enum
                    example: AVAILABLE
                    enum:
                    - AVAILABLE
                    - CREATING
                    - MODIFYING
                    - PAUSED
                    - RESUMING
                    - UNAVAILABLE
                    - IMPORTING
                    - MAINTAINING
                    - PAUSING
                  node_map:
                    required:
                    - tidb
                    - tikv
                    type: object
                    properties:
                      tidb:
                        type: array
                        description: TiDB node map.
                        example:
                        - node_name: tidb-0
                          availability_zone: us-west-2a
                          node_size: 8C16G
                          vcpu_num: 8
                          ram_bytes: "17179869184"
                          status: NODE_STATUS_AVAILABLE
                        - node_name: tidb-1
                          availability_zone: us-west-2b
                          node_size: 8C16G
                          vcpu_num: 8
                          ram_bytes: "17179869184"
                          status: NODE_STATUS_AVAILABLE
                        items:
                          type: object
                          properties:
                            node_name:
                              type: string
                              description: The name of a node in the cluster.
                              example: tidb-0
                            availability_zone:
                              type: string
                              description: The availability zone of a node in the
                                cluster.
                              example: us-west-2a
                            node_size:
                              type: string
                              description: The size of the TiDB component in the cluster.
                              example: 8C16G
                            vcpu_num:
                              type: integer
                              description: "The total vCPUs of a node in the cluster.\
                                \ If the `cluster_type` is `\"DEVELOPER\"`, `vcpu_num`\
                                \ is always 0."
                              format: int32
                              example: 8
                            ram_bytes:
                              type: string
                              description: "The RAM size of a node in the cluster.\
                                \ If the `cluster_type` is `\"DEVELOPER\"`, `ram_bytes`\
                                \ is always 0."
                              format: int64
                              example: "17179869184"
                            status:
                              type: string
                              description: The status of a node in the cluster.
                              example: NODE_STATUS_AVAILABLE
                              enum:
                              - NODE_STATUS_AVAILABLE
                              - NODE_STATUS_UNAVAILABLE
                              - NODE_STATUS_CREATING
                              - NODE_STATUS_DELETING
                      tikv:
                        type: array
                        description: TiKV node map.
                        example:
                        - node_name: tikv-0
                          availability_zone: us-west-2a
                          node_size: 8C32G
                          vcpu_num: 8
                          ram_bytes: "68719476736"
                          storage_size_gib: 1024
                          status: NODE_STATUS_AVAILABLE
                        - node_name: tikv-1
                          availability_zone: us-west-2b
                          node_size: 8C64G
                          vcpu_num: 8
                          ram_bytes: "68719476736"
                          storage_size_gib: 1024
                          status: NODE_STATUS_AVAILABLE
                        - node_name: tikv-2
                          availability_zone: us-west-2c
                          node_size: 8C64G
                          vcpu_num: 8
                          ram_bytes: "68719476736"
                          storage_size_gib: 1024
                          status: NODE_STATUS_AVAILABLE
                        items:
                          type: object
                          properties:
                            node_name:
                              type: string
                              description: The name of a node in the cluster.
                              example: tikv-0
                            availability_zone:
                              type: string
                              description: The availability zone of a node in the
                                cluster.
                              example: us-west-2a
                            node_size:
                              type: string
                              description: The size of the TiKV component in the cluster.
                              example: 8C32G
                            vcpu_num:
                              type: integer
                              description: "The total vCPUs of a node in the cluster.\
                                \ If the `cluster_type` is `\"DEVELOPER\"`, `vcpu_num`\
                                \ is always 0."
                              format: int32
                              example: 8
                            ram_bytes:
                              type: string
                              description: "The RAM size of a node in the cluster.\
                                \ If the `cluster_type` is `\"DEVELOPER\"`, `ram_bytes`\
                                \ is always 0."
                              format: int64
                              example: "68719476736"
                            storage_size_gib:
                              type: integer
                              description: The storage size of a node in the cluster.
                              format: int32
                              example: 1024
                            status:
                              type: string
                              description: The status of a node in the cluster.
                              example: NODE_STATUS_AVAILABLE
                              enum:
                              - NODE_STATUS_AVAILABLE
                              - NODE_STATUS_UNAVAILABLE
                              - NODE_STATUS_CREATING
                              - NODE_STATUS_DELETING
                      tiflash:
                        type: array
                        description: TiFlash node map.
                        example:
                        - node_name: tiflash-0
                          availability_zone: us-west-2a
                          node_size: 8C64G
                          vcpu_num: 8
                          ram_bytes: "68719476736"
                          storage_size_gib: 1024
                          status: NODE_STATUS_AVAILABLE
                        - node_name: tiflash-1
                          availability_zone: us-west-2b
                          node_size: 8C64G
                          vcpu_num: 8
                          ram_bytes: "68719476736"
                          storage_size_gib: 1024
                          status: NODE_STATUS_AVAILABLE
                        items:
                          type: object
                          properties:
                            node_name:
                              type: string
                              description: The name of a node in the cluster.
                              example: tiflash-0
                            availability_zone:
                              type: string
                              description: The availability zone of a node in the
                                cluster.
                              example: us-west-2a
                            node_size:
                              type: string
                              description: The size of the TiFlash component in the
                                cluster.
                              example: 8C64G
                            vcpu_num:
                              type: integer
                              description: "The total vCPUs of a node in the cluster.\
                                \ If the `cluster_type` is `\"DEVELOPER\"`, `vcpu_num`\
                                \ is always 0."
                              format: int32
                              example: 8
                            ram_bytes:
                              type: string
                              description: "The RAM size of a node in the cluster.\
                                \ If the `cluster_type` is `\"DEVELOPER\"`, `ram_bytes`\
                                \ is always 0."
                              format: int64
                              example: "68719476736"
                            storage_size_gib:
                              type: integer
                              description: The storage size of a node in the cluster.
                              format: int32
                              example: 1024
                            status:
                              type: string
                              description: The status of a node in the cluster.
                              example: NODE_STATUS_AVAILABLE
                              enum:
                              - NODE_STATUS_AVAILABLE
                              - NODE_STATUS_UNAVAILABLE
                              - NODE_STATUS_CREATING
                              - NODE_STATUS_DELETING
                    description: Node map. The `node_map` is returned only when the
                      `cluster_status` is `"AVAILABLE"` or `"MODIFYING"`.
                  connection_strings:
                    type: object
                    properties:
                      default_user:
                        type: string
                        description: The default TiDB user for connection.
                        example: root
                      standard:
                        type: object
                        properties:
                          host:
                            type: string
                            description: The host of standard connection.
                            example: tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
                          port:
                            maximum: 65535
                            minimum: 1024
                            type: integer
                            description: |-
                              The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                              **Limitations**:
                              - For a TiDB Serverless cluster, only port `4000` is available.
                            format: int32
                            example: 4000
                            default: 4000
                        description: |-
                          Standard connection string.

                          You must configure the [IP Access List](https://docs.pingcap.com/tidbcloud/connect-to-tidb-cluster#connect-via-standard-connection) for the cluster you created on [TiDB Cloud console](https://tidbcloud.com/) before connecting to this connection string.
                      vpc_peering:
                        type: object
                        properties:
                          host:
                            type: string
                            description: The host of VPC peering connection.
                            example: private-tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
                          port:
                            maximum: 65535
                            minimum: 1024
                            type: integer
                            description: |-
                              The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                              **Limitations**:
                              - For a TiDB Serverless cluster, only port `4000` is available.
                            format: int32
                            example: 4000
                            default: 4000
                        description: |-
                          [VPC peering](https://docs.pingcap.com/tidbcloud/tidb-cloud-glossary#vpc-peering) connection string.

                          You must [Set up VPC peering connections](https://docs.pingcap.com/tidbcloud/set-up-vpc-peering-connections) for the project before connecting to this private connection string.
                    description: Connection strings.
                description: The status of the cluster.
            description: ClusterItem is the information of cluster.
        total:
          type: integer
          description: The total number of clusters in the project.
          format: int64
          example: 1
      description: GetClustersOfProjectResp is the response for getting clusters of
        project.
    openapiListImportTasksResp:
      title: ListImportTasksResp
      required:
      - items
      - total
      type: object
      properties:
        items:
          type: array
          description: The import tasks in the cluster in the request page area.
          items:
            title: ImportItem
            type: object
            properties:
              metadata:
                title: ImportMetadata
                required:
                - create_timestamp
                - id
                type: object
                properties:
                  id:
                    type: string
                    description: The ID of the import task.
                    format: uint64
                    example: "1"
                  name:
                    type: string
                    description: The name of the import task.
                    example: my_import
                  create_timestamp:
                    type: string
                    description: The creation time of the import task in Unix timestamp
                      seconds (epoch time).
                    format: timestamp
                    example: "1676450597"
                description: The metadata of the import task.
              spec:
                title: ImportSpec
                required:
                - source
                - target
                type: object
                properties:
                  source:
                    title: ImportSource
                    required:
                    - format
                    - type
                    - uri
                    type: object
                    properties:
                      type:
                        type: string
                        description: |-
                          The data source type of an import task.

                          - `"S3"`: import data from Amazon S3
                          - `"GCS"`: import data from Google Cloud Storage
                          - `"LOCAL_FILE"`: import data from a local file (only available for [TiDB Serverless](https://docs.pingcap.com/tidbcloud/select-cluster-tier#tidb-serverless) clusters). Before you import from a local file, you need to first upload the file using the [Upload a local file for an import task](#tag/Import/operation/UploadLocalFile) endpoint.

                          **Note:** Currently, if this import spec is used for a [preview](#tag/Import/operation/PreviewImportData) request, only the `LOCAL_FILE` source type is supported.
                        example: S3
                        enum:
                        - S3
                        - GCS
                        - LOCAL_FILE
                      uri:
                        type: string
                        description: |-
                          The data source URI of an import task. The URI scheme must match the data source type. Here are the scheme of each source type:
                          * `S3`: `s3://`
                          * `GCS`: `gs://`
                          * `LOCAL_FILE`: `file://`.

                          **Note:** If the import source type is `LOCAL_FILE`, just provide the `upload_stub_id` of the uploaded file from the response of [Upload a local file for an import task](#tag/Import/operation/UploadLocalFile), and make it as the data source folder. For example: `file://12345/`.

                          **Limitation**: If the import source type is `LOCAL_FILE`, only the `CSV` source format type is supported.
                        example: s3://example-bucket/example-source-data/
                      aws_assume_role_access:
                        title: AwsAssumeRoleAccess
                        required:
                        - assume_role
                        type: object
                        properties:
                          assume_role:
                            type: string
                            description: The specific AWS role ARN that needs to be
                              assumed to access the Amazon S3 data source.
                            example: arn:aws:iam::999999999999:role/sample-role
                        description: |-
                          The settings to access the S3 data by assuming a specific AWS role. This field is only needed if you need to access S3 data by assuming an AWS role.

                          **Note:** Provide only one of `aws_assume_role_access` and `aws_key_access`. If both `aws_assume_role_access` and `aws_key_access` are provided, an error will be reported.
                      aws_key_access:
                        title: AwsKeyAccess
                        required:
                        - access_key_id
                        - secret_access_key
                        type: object
                        properties:
                          access_key_id:
                            type: string
                            description: The access key ID of the account to access
                              the data. This information will be redacted when it
                              is retrieved to obtain the import task information.
                            example: YOUR_ACCESS_KEY_ID
                          secret_access_key:
                            type: string
                            description: The secret access key for the account to
                              access the data. This information will be redacted when
                              it is retrieved to obtain the import task information.
                            example: YOUR_SECRET_ACCESS_KEY
                        description: |-
                          The settings to access the S3 data with an access key. This field is only needed if you want to access the S3 data with an access key.

                          **Note:** Provide only one of `aws_assume_role_access` and `aws_key_access`. If both `aws_assume_role_access` and `aws_key_access` are provided, an error will be reported.
                      format:
                        title: ImportSourceFormat
                        required:
                        - type
                        type: object
                        properties:
                          type:
                            type: string
                            description: The format type of an import source.
                            example: CSV
                            enum:
                            - CSV
                            - PARQUET
                            - SQL
                            - AURORA_SNAPSHOT
                          csv_config:
                            title: ImportSourceCSVConfig
                            type: object
                            properties:
                              delimiter:
                                type: string
                                description: The delimiter character used to separate
                                  fields in the CSV data.
                                default: ","
                              quote:
                                type: string
                                description: The character used to quote the fields
                                  in the CSV data.
                                default: '"'
                              backslash_escape:
                                type: boolean
                                description: |-
                                  Whether a backslash (`\`) symbol followed by a character should be combined as a whole and treated as an escape sequence in a CSV field. For example, if this parameter is set to `true`, `\n` will be treated as a 'new-line' character. If it is set to `false`, `\n` will be treated as two separate characters: backslash and `n`.

                                  Currently, these are several supported escape sequences: `\0`, `\b`, `\n`, `\r`, `\t`, and `\Z`. If the parameter is set to `true`, but the backslash escape sequence is not recognized, the backslash character is ignored.
                                default: true
                              has_header_row:
                                type: boolean
                                description: "Whether the CSV data has a header row,\
                                  \ which is not part of the data. If it is set to\
                                  \ `true`, the import task will use the column names\
                                  \ in the header row to match the column names in\
                                  \ the target table."
                                default: true
                            description: The CSV format settings to parse the source
                              CSV files. This field is only needed if the source format
                              is CSV.
                        description: The format settings of the import data source.
                    description: The data source settings of the import task.
                  target:
                    title: ImportTarget
                    type: object
                    properties:
                      tables:
                        type: array
                        description: |-
                          The settings for each target table that is being imported for the import task. If you leave it empty, the system will scan all the files in the data source using the default file patterns and collect all the tables to import. The files include data files, table schema files, and DB schema files. If you provide a list of tables, only those tables will be imported. For more information about the default file pattern, see [Import CSV Files from Amazon S3 or GCS into TiDB Cloud](https://docs.pingcap.com/tidbcloud/import-csv-files).

                          **Limitations:**
                          * Currently, if you want to use a custom filename pattern, you can only specify one table. If all the tables use the default filename pattern, you can specify more than one target table in `tables`.
                          * It is recommended that you pre-create the target tables before creating an import task. You can do this either by executing the `CREATE TABLE` statement in the cluster or by specifying the table definition in the table creation options.
                          * If a target table is not created, the import module tries to find a **TABLE SCHEMA FILE** containing the `CREATE TABLE` statement of the table in the data source folder with the name `${db_name}.${table_name}-schema.sql` (for example, `db01.tbl01-schema.sql`). If this file is found, the `CREATE TABLE` statement is automatically executed if the table doesn't exist before the actual import process starts. If the table is still missing after this pre-create step, an error will occur.
                        items:
                          title: ImportTargetTable
                          required:
                          - database_name
                          - table_name
                          type: object
                          properties:
                            database_name:
                              type: string
                              description: The target database name.
                              example: db01
                            table_name:
                              type: string
                              description: The target table name.
                              example: table01
                            file_name_pattern:
                              type: string
                              description: |-
                                The filename pattern used to map the files in the data source to this target table. The pattern should be a simple glob pattern. Here are some examples:
                                * `my-data?.csv`: all CSV files starting with `my-data` and one character (such as `my-data1.csv` and `my-data2.csv`) will be imported into the same target table.
                                * `my-data*.csv`: all CSV files starting with `my-data` will be imported into the same target table.

                                If no pattern is specified, a default pattern is used. The default pattern will try to find files with this naming convention as the data files for this table: `${db_name}.${table_name}.[numeric_index].${format_suffix}`.

                                Here are some examples of filenames that can be matched as data files for the table `db01.table01`: `db01.table01.csv`, `db01.table01.00001.csv`.

                                For more information about the custom file pattern and the default pattern, refer to [Import CSV Files from Amazon S3 or GCS into TiDB Cloud](https://docs.pingcap.com/tidbcloud/import-csv-files).

                                **Note:** For `LOCAL_FILE` import tasks, use the local file name for this field. The local file name must match the local file name in [Upload a local file for an import task](#tag/Import/operation/UploadLocalFile).
                              example: data/db01/table01.*.csv
                          description: ImportTargetTable represents the settings for
                            importing source data into a single target table of an
                            import task.
                    description: The target settings of the import task.
                description: The specification of the import task.
              status:
                title: ImportStatus
                required:
                - phase
                type: object
                properties:
                  phase:
                    type: string
                    description: The current phase that the import task is in.
                    example: IMPORTING
                    enum:
                    - PREPARING
                    - IMPORTING
                    - COMPLETED
                    - FAILED
                    - CANCELING
                    - CANCELED
                  error_message:
                    type: string
                    description: The error message of the import task.
                    example: some error occurs
                  start_timestamp:
                    type: string
                    description: The start timestamp of the import task. The format
                      is Unix timestamp (the seconds elapsed since the Unix epoch)
                    format: timestamp
                    example: "1676450597"
                  end_timestamp:
                    type: string
                    description: The end timestamp of the import task. The format
                      is Unix timestamp (the seconds elapsed since the Unix epoch).
                    format: timestamp
                    example: "1676450897"
                  progress:
                    title: ImportProgress
                    required:
                    - import_progress
                    - validation_progress
                    type: object
                    properties:
                      import_progress:
                        maximum: 100
                        type: number
                        description: The overall importing progress of the import
                          task.
                        format: double
                        example: 59.0
                      validation_progress:
                        maximum: 100
                        type: number
                        description: The overall validation progress of the import
                          task after the data has been imported into the target cluster.
                        format: double
                        example: 59.0
                    description: The progress of the import task.
                  source_total_size_bytes:
                    type: string
                    description: The total size of the import task's data source.
                      The unit is bytes.
                    format: uint64
                    example: "10737418240"
                description: The status of the import task.
            description: ImportItem represents the information of a single import
              task.
        total:
          type: integer
          description: The total number of import tasks in the cluster.
          format: int64
          example: 20
      description: ListImportTasksResp is the response for listing the import tasks
        of a cluster.
    openapiListPrivateEndpointsOfProjectResp:
      title: ListPrivateEndpointsOfProjectResp
      required:
      - endpoints
      type: object
      properties:
        endpoints:
          type: array
          description: The private endpoints in the project.
          items:
            type: object
            properties:
              cloud_provider:
                type: string
                description: |-
                  [Output Only] The cloud provider on which the private endpoint service is hosted.
                  - `"AWS"`: the Amazon Web Services cloud provider
                  - `"GCP"`: the Google Cloud cloud provider
                format: string
                example: AWS
                enum:
                - AWS
                - GCP
              cluster_id:
                type: string
                description: "[Output Only] The ID of the cluster."
                format: uint64
                example: "1"
              cluster_name:
                type: string
                description: "[Output Only] The name of the cluster."
                example: Cluster0
              region_name:
                type: string
                description: "[Output Only] The region where the private endpoint\
                  \ is hosted, such as Oregon in AWS."
                example: Oregon
              endpoint_name:
                type: string
                description: "The format of the private endpoint name varies by cloud\
                  \ provider: `\"vpce-xxxx\"` for AWS and `\"projects/xxx/regions/xxx/forwardingRules/xxx\"\
                  ` for Google Cloud."
                format: string
                example: vpce-01234567890123456
              status:
                type: string
                description: "[Output Only] The status of the private endpoint."
                format: enum
                example: FAILED
                enum:
                - PENDING
                - ACTIVE
                - DELETING
                - FAILED
              message:
                type: string
                description: "[Output Only] The detailed message when the `status`\
                  \ is \"FAILED\"."
                format: enum
                example: The endpoint does not exist.
              service_name:
                type: string
                description: "[Output Only] The service name of the private endpoint."
                format: string
                example: com.amazonaws.vpce.us-west-2.vpce-svc-01234567890123456
              service_status:
                type: string
                description: "[Output Only] The status of the private endpoint service."
                format: enum
                example: ACTIVE
                enum:
                - CREATING
                - ACTIVE
                - DELETING
              id:
                type: string
                description: "[Output Only] The ID of private endpoint. It is used\
                  \ when you [deleting the endpoint](#tag/Cluster/operation/DeletePrivateEndpoint)."
                format: uint64
                example: "1"
      description: ListPrivateEndpointsOfProjectResp is the response for listing private
        endpoints for a project.
    openapiListPrivateEndpointsResp:
      title: ListPrivateEndpointsResp
      required:
      - endpoints
      type: object
      properties:
        endpoints:
          type: array
          description: The private endpoints for the cluster.
          items:
            type: object
            properties:
              cloud_provider:
                type: string
                description: |-
                  [Output Only] The cloud provider on which the private endpoint service is hosted.
                  - `"AWS"`: the Amazon Web Services cloud provider
                  - `"GCP"`: the Google Cloud cloud provider
                format: string
                example: AWS
                enum:
                - AWS
                - GCP
              cluster_id:
                type: string
                description: "[Output Only] The ID of the cluster."
                format: uint64
                example: "1"
              cluster_name:
                type: string
                description: "[Output Only] The name of the cluster."
                example: Cluster0
              region_name:
                type: string
                description: "[Output Only] The region where the private endpoint\
                  \ is hosted, such as Oregon in AWS."
                example: Oregon
              endpoint_name:
                type: string
                description: "The format of the private endpoint name varies by cloud\
                  \ provider: `\"vpce-xxxx\"` for AWS and `\"projects/xxx/regions/xxx/forwardingRules/xxx\"\
                  ` for Google Cloud."
                format: string
                example: vpce-01234567890123456
              status:
                type: string
                description: "[Output Only] The status of the private endpoint."
                format: enum
                example: FAILED
                enum:
                - PENDING
                - ACTIVE
                - DELETING
                - FAILED
              message:
                type: string
                description: "[Output Only] The detailed message when the `status`\
                  \ is \"FAILED\"."
                format: enum
                example: The endpoint does not exist.
              service_name:
                type: string
                description: "[Output Only] The service name of the private endpoint."
                format: string
                example: com.amazonaws.vpce.us-west-2.vpce-svc-01234567890123456
              service_status:
                type: string
                description: "[Output Only] The status of the private endpoint service."
                format: enum
                example: ACTIVE
                enum:
                - CREATING
                - ACTIVE
                - DELETING
              id:
                type: string
                description: "[Output Only] The ID of private endpoint. It is used\
                  \ when you [deleting the endpoint](#tag/Cluster/operation/DeletePrivateEndpoint)."
                format: uint64
                example: "1"
      description: ListPrivateEndpointsResp is the response for listing private endpoints
        for a cluster.
    openapiListProjectItem:
      title: ListProjectItem
      type: object
      properties:
        id:
          type: string
          description: The ID of the project.
          format: uint64
          example: "1"
        org_id:
          type: string
          description: The ID of the TiDB Cloud organization to which the project
            belongs.
          format: uint64
          example: "1"
        name:
          type: string
          description: The name of the project.
          example: default_project
        cluster_count:
          type: integer
          description: The number of TiDB Cloud clusters deployed in the project.
          format: int64
          example: 4
        user_count:
          type: integer
          description: The number of users in the project.
          format: int64
          example: 10
        create_timestamp:
          type: string
          description: The creation time of the cluster in Unix timestamp seconds
            (epoch time).
          format: timestamp
          example: "1656991448"
        aws_cmek_enabled:
          type: boolean
          description: |-
            Flag that indicates whether to enable AWS Customer-Managed Encryption Keys (CMEK). For more information, see [Encryption at Rest using CMEK](https://docs.pingcap.com/tidbcloud/tidb-cloud-encrypt-cmek).

            **Note:** Currently, this feature is only available upon request. If you need to try out this feature, contact [support](https://docs.pingcap.com/tidbcloud/tidb-cloud-support).
          example: false
          default: false
      description: ListProjectItem is the item of projects.
    openapiListProjectsResp:
      title: GetProjectsResp
      required:
      - items
      - total
      type: object
      properties:
        items:
          type: array
          description: The items of accessible projects.
          items:
            title: ListProjectItem
            type: object
            properties:
              id:
                type: string
                description: The ID of the project.
                format: uint64
                example: "1"
              org_id:
                type: string
                description: The ID of the TiDB Cloud organization to which the project
                  belongs.
                format: uint64
                example: "1"
              name:
                type: string
                description: The name of the project.
                example: default_project
              cluster_count:
                type: integer
                description: The number of TiDB Cloud clusters deployed in the project.
                format: int64
                example: 4
              user_count:
                type: integer
                description: The number of users in the project.
                format: int64
                example: 10
              create_timestamp:
                type: string
                description: The creation time of the cluster in Unix timestamp seconds
                  (epoch time).
                format: timestamp
                example: "1656991448"
              aws_cmek_enabled:
                type: boolean
                description: |-
                  Flag that indicates whether to enable AWS Customer-Managed Encryption Keys (CMEK). For more information, see [Encryption at Rest using CMEK](https://docs.pingcap.com/tidbcloud/tidb-cloud-encrypt-cmek).

                  **Note:** Currently, this feature is only available upon request. If you need to try out this feature, contact [support](https://docs.pingcap.com/tidbcloud/tidb-cloud-support).
                example: false
                default: false
            description: ListProjectItem is the item of projects.
        total:
          type: integer
          description: The total number of accessible projects.
          format: int64
          example: 1
      description: GetProjectsResp is the response for getting accessible projects.
    openapiListProviderRegionsItem:
      title: ListProviderRegionsItem
      type: object
      properties:
        cluster_type:
          type: string
          description: |-
            The cluster type.
            - `"DEVELOPER"`: a [TiDB Serverless](https://docs.pingcap.com/tidbcloud/select-cluster-tier#tidb-serverless) cluster
            - `"DEDICATED"`: a [TiDB Dedicated](https://docs.pingcap.com/tidbcloud/select-cluster-tier#dedicated-tier) cluster

            **Warning:** `"DEVELOPER"` will soon be changed to `"SERVERLESS"` to represent TiDB Serverless clusters.
          format: enum
          example: DEDICATED
          enum:
          - DEDICATED
          - DEVELOPER
        cloud_provider:
          type: string
          description: |-
            The cloud provider on which your TiDB cluster is hosted.
            - `"AWS"`: the Amazon Web Services cloud provider
            - `"GCP"`: the Google Cloud cloud provider
          format: string
          example: AWS
          enum:
          - AWS
          - GCP
        region:
          type: string
          description: |-
            The region in which your TiDB cluster is hosted.

            For the detailed information on each region, refer to the documentation of the corresponding cloud provider ([AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) | [GCP](https://cloud.google.com/about/locations#americas)).

            For example, `"us-west-2"` refers to Oregon for AWS.
          example: us-west-2
        tidb:
          type: array
          description: The list of TiDB specifications in the region.
          items:
            type: object
            properties:
              node_size:
                type: string
                description: The size of the TiDB component in the cluster.
                example: 8C16G
              node_quantity_range:
                type: object
                properties:
                  min:
                    type: integer
                    description: The minimum node quantity of the component in the
                      cluster.
                    format: int32
                  step:
                    type: integer
                    description: The step of node quantity of the component in the
                      cluster.
                    format: int32
                description: The range and step of node quantity of the TiDB component
                  in the cluster.
        tikv:
          type: array
          description: The list of TiKV specifications in the region.
          items:
            type: object
            properties:
              node_size:
                type: string
                description: The size of the TiKV component in the cluster.
                example: 8C32G
              node_quantity_range:
                type: object
                properties:
                  min:
                    type: integer
                    description: The minimum node quantity of the component in the
                      cluster.
                    format: int32
                  step:
                    type: integer
                    description: The step of node quantity of the component in the
                      cluster.
                    format: int32
                description: The range and step of node quantity of the TiKV component
                  in the cluster.
              storage_size_gib_range:
                type: object
                properties:
                  min:
                    type: integer
                    description: The minimum storage size for each node of the component
                      in the cluster.
                    format: int32
                  max:
                    type: integer
                    description: The maximum storage size for each node of the component
                      in the cluster.
                    format: int32
                description: The storage size range for each node of the TiKV component
                  in the cluster.
        tiflash:
          type: array
          description: The list of TiFlash specifications in the region.
          items:
            type: object
            properties:
              node_size:
                type: string
                description: The size of the TiFlash component in the cluster.
                example: 8C64G
              node_quantity_range:
                type: object
                properties:
                  min:
                    type: integer
                    description: The minimum node quantity of the component in the
                      cluster.
                    format: int32
                  step:
                    type: integer
                    description: The step of node quantity of the component in the
                      cluster.
                    format: int32
                description: The range and step of node quantity of the TiFlash component
                  in the cluster.
              storage_size_gib_range:
                type: object
                properties:
                  min:
                    type: integer
                    description: The minimum storage size for each node of the component
                      in the cluster.
                    format: int32
                  max:
                    type: integer
                    description: The maximum storage size for each node of the component
                      in the cluster.
                    format: int32
                description: The storage size range for each node of the TiFlash component
                  in the cluster.
      description: ListProviderRegionsItem is the item of provider regions.
    openapiListProviderRegionsResp:
      title: GetProviderRegionsResp
      type: object
      properties:
        items:
          type: array
          description: Items of provider regions.
          example:
          - cluster_type: DEDICATED
            cloud_provider: AWS
            region: us-west-2
            tidb:
            - node_size: 8C16G
              node_quantity_range:
                min: 1
                step: 1
            tikv:
            - node_size: 8C32G
              node_quantity_range:
                min: 3
                step: 3
              storage_size_gib_range:
                min: 500
                max: 4096
            tiflash:
            - node_size: 8C64G
              node_quantity_range:
                min: 0
                step: 1
              storage_size_gib_range:
                min: 500
                max: 2048
          - cluster_type: DEVELOPER
            cloud_provider: AWS
            region: us-west-2
            tidb:
            - node_size: Shared0
              node_quantity_range:
                min: 1
                step: 1
            tikv:
            - node_size: Shared0
              node_quantity_range:
                min: 1
                step: 1
              storage_size_gib_range:
                min: 1
                max: 1
            tiflash:
            - node_size: Shared0
              node_quantity_range:
                min: 1
                step: 1
              storage_size_gib_range:
                min: 1
                max: 1
          items:
            title: ListProviderRegionsItem
            type: object
            properties:
              cluster_type:
                type: string
                description: |-
                  The cluster type.
                  - `"DEVELOPER"`: a [TiDB Serverless](https://docs.pingcap.com/tidbcloud/select-cluster-tier#tidb-serverless) cluster
                  - `"DEDICATED"`: a [TiDB Dedicated](https://docs.pingcap.com/tidbcloud/select-cluster-tier#dedicated-tier) cluster

                  **Warning:** `"DEVELOPER"` will soon be changed to `"SERVERLESS"` to represent TiDB Serverless clusters.
                format: enum
                example: DEDICATED
                enum:
                - DEDICATED
                - DEVELOPER
              cloud_provider:
                type: string
                description: |-
                  The cloud provider on which your TiDB cluster is hosted.
                  - `"AWS"`: the Amazon Web Services cloud provider
                  - `"GCP"`: the Google Cloud cloud provider
                format: string
                example: AWS
                enum:
                - AWS
                - GCP
              region:
                type: string
                description: |-
                  The region in which your TiDB cluster is hosted.

                  For the detailed information on each region, refer to the documentation of the corresponding cloud provider ([AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) | [GCP](https://cloud.google.com/about/locations#americas)).

                  For example, `"us-west-2"` refers to Oregon for AWS.
                example: us-west-2
              tidb:
                type: array
                description: The list of TiDB specifications in the region.
                items:
                  type: object
                  properties:
                    node_size:
                      type: string
                      description: The size of the TiDB component in the cluster.
                      example: 8C16G
                    node_quantity_range:
                      type: object
                      properties:
                        min:
                          type: integer
                          description: The minimum node quantity of the component
                            in the cluster.
                          format: int32
                        step:
                          type: integer
                          description: The step of node quantity of the component
                            in the cluster.
                          format: int32
                      description: The range and step of node quantity of the TiDB
                        component in the cluster.
              tikv:
                type: array
                description: The list of TiKV specifications in the region.
                items:
                  type: object
                  properties:
                    node_size:
                      type: string
                      description: The size of the TiKV component in the cluster.
                      example: 8C32G
                    node_quantity_range:
                      type: object
                      properties:
                        min:
                          type: integer
                          description: The minimum node quantity of the component
                            in the cluster.
                          format: int32
                        step:
                          type: integer
                          description: The step of node quantity of the component
                            in the cluster.
                          format: int32
                      description: The range and step of node quantity of the TiKV
                        component in the cluster.
                    storage_size_gib_range:
                      type: object
                      properties:
                        min:
                          type: integer
                          description: The minimum storage size for each node of the
                            component in the cluster.
                          format: int32
                        max:
                          type: integer
                          description: The maximum storage size for each node of the
                            component in the cluster.
                          format: int32
                      description: The storage size range for each node of the TiKV
                        component in the cluster.
              tiflash:
                type: array
                description: The list of TiFlash specifications in the region.
                items:
                  type: object
                  properties:
                    node_size:
                      type: string
                      description: The size of the TiFlash component in the cluster.
                      example: 8C64G
                    node_quantity_range:
                      type: object
                      properties:
                        min:
                          type: integer
                          description: The minimum node quantity of the component
                            in the cluster.
                          format: int32
                        step:
                          type: integer
                          description: The step of node quantity of the component
                            in the cluster.
                          format: int32
                      description: The range and step of node quantity of the TiFlash
                        component in the cluster.
                    storage_size_gib_range:
                      type: object
                      properties:
                        min:
                          type: integer
                          description: The minimum storage size for each node of the
                            component in the cluster.
                          format: int32
                        max:
                          type: integer
                          description: The maximum storage size for each node of the
                            component in the cluster.
                          format: int32
                      description: The storage size range for each node of the TiFlash
                        component in the cluster.
            description: ListProviderRegionsItem is the item of provider regions.
      description: GetProviderRegionsResp is the response for getting provider regions.
    openapiListRestoreOfProjectResp:
      title: ListRestoreResp
      type: object
      properties:
        items:
          type: array
          description: The items of all restore tasks.
          items:
            title: ListRestoreRespItem
            type: object
            properties:
              id:
                type: string
                description: The ID of the restore task.
                format: uint64
                example: "1"
              create_timestamp:
                type: string
                description: |-
                  The creation time of the backup in UTC.

                  The time format follows the [ISO8601](http://en.wikipedia.org/wiki/ISO_8601) standard, which is `YYYY-MM-DD` (year-month-day) + T +`HH:MM:SS` (hour-minutes-seconds) + Z. For example, `2020-01-01T00:00:00Z`.
                format: date-time
                example: 2020-01-01T00:00:00Z
              backup_id:
                type: string
                description: The ID of the backup.
                format: uint64
                example: "1"
              cluster_id:
                type: string
                description: The cluster ID of the backup.
                format: uint64
                example: "1"
              status:
                type: string
                description: The status of the restore task.
                example: PENDING
                enum:
                - PENDING
                - RUNNING
                - FAILED
                - SUCCESS
              cluster:
                title: ClusterInfoOfRestore
                type: object
                properties:
                  id:
                    type: string
                    description: The ID of the restored cluster. The restored cluster
                      is the new cluster your backup data is restored to.
                    format: uint64
                    example: "1"
                  name:
                    type: string
                    description: The name of the restored cluster. The restored cluster
                      is the new cluster your backup data is restored to.
                    example: cluster-1
                  status:
                    type: string
                    description: "The status of the restored cluster. Possible values\
                      \ are `\"AVAILABLE\"`, `\"CREATING\"`, `\"MODIFYING\"`, `\"\
                      PAUSED\"`, `\"RESUMING\"`, `\"UNAVAILABLE\"`, `\"IMPORTING\"\
                      `, and `\"CLEARED\"`."
                    example: AVAILABLE
                description: The information of the restored cluster. The restored
                  cluster is the new cluster your backup data is restored to.
              error_message:
                type: string
                description: The error message of restore if failed.
                example: Please contact support.
            description: The items of all restore tasks.
        total:
          type: integer
          description: The total number of restore tasks in the project.
          format: int64
          example: 10
      description: This response for list restore.
    openapiListRestoreRespItem:
      title: ListRestoreRespItem
      type: object
      properties:
        id:
          type: string
          description: The ID of the restore task.
          format: uint64
          example: "1"
        create_timestamp:
          type: string
          description: |-
            The creation time of the backup in UTC.

            The time format follows the [ISO8601](http://en.wikipedia.org/wiki/ISO_8601) standard, which is `YYYY-MM-DD` (year-month-day) + T +`HH:MM:SS` (hour-minutes-seconds) + Z. For example, `2020-01-01T00:00:00Z`.
          format: date-time
          example: 2020-01-01T00:00:00Z
        backup_id:
          type: string
          description: The ID of the backup.
          format: uint64
          example: "1"
        cluster_id:
          type: string
          description: The cluster ID of the backup.
          format: uint64
          example: "1"
        status:
          type: string
          description: The status of the restore task.
          example: PENDING
          enum:
          - PENDING
          - RUNNING
          - FAILED
          - SUCCESS
        cluster:
          title: ClusterInfoOfRestore
          type: object
          properties:
            id:
              type: string
              description: The ID of the restored cluster. The restored cluster is
                the new cluster your backup data is restored to.
              format: uint64
              example: "1"
            name:
              type: string
              description: The name of the restored cluster. The restored cluster
                is the new cluster your backup data is restored to.
              example: cluster-1
            status:
              type: string
              description: "The status of the restored cluster. Possible values are\
                \ `\"AVAILABLE\"`, `\"CREATING\"`, `\"MODIFYING\"`, `\"PAUSED\"`,\
                \ `\"RESUMING\"`, `\"UNAVAILABLE\"`, `\"IMPORTING\"`, and `\"CLEARED\"\
                `."
              example: AVAILABLE
          description: The information of the restored cluster. The restored cluster
            is the new cluster your backup data is restored to.
        error_message:
          type: string
          description: The error message of restore if failed.
          example: Please contact support.
      description: The items of all restore tasks.
    openapiListRestoreRespItemStatusEnum:
      type: string
      enum:
      - PENDING
      - RUNNING
      - FAILED
      - SUCCESS
    openapiLocalFilePayload:
      title: LocalFilePayload
      required:
      - content
      - total_size_bytes
      type: object
      properties:
        total_size_bytes:
          type: string
          description: |-
            The total size of the **ACTUAL** local file contents, not the total size of the `content` field.

            The unit is byte, and the maximum value is `52428800` (50 MiB). If the given value of `total_size_bytes` exceeds the maximum value, an error will be reported.
          format: uint64
          example: "83"
        content:
          maxLength: 52428800
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: |-
            The base64-encoded content of the local file to be imported. The maximum size of the file should be 52428800 (50 MiB).

            **Note:** Before providing the content, process the file by taking the following steps:
            1. Compress the file using the **gzip** algorithm.
            2. Encode the compressed data using the **base64** algorithm.
          format: byte
          example: H4sIABbP9mMAAyXHOwoAIQwFwN5jvPoh5neggI2w9Z7fSJqBOZt/fvLQIURmLgFlrqE9BbVmPQOt5j0HvRa9AKN2AUwss6dTAAAA
      description: LocalFilePayload represents the payload to upload a local file
        content for importing.
    openapiNodeQuantityRange:
      type: object
      properties:
        min:
          type: integer
          description: The minimum node quantity of the component in the cluster.
          format: int32
        step:
          type: integer
          description: The step of node quantity of the component in the cluster.
          format: int32
    openapiNodeStatus:
      type: string
      enum:
      - NODE_STATUS_AVAILABLE
      - NODE_STATUS_UNAVAILABLE
      - NODE_STATUS_CREATING
      - NODE_STATUS_DELETING
    openapiNodeStorageSizeRange:
      type: object
      properties:
        min:
          type: integer
          description: The minimum storage size for each node of the component in
            the cluster.
          format: int32
        max:
          type: integer
          description: The maximum storage size for each node of the component in
            the cluster.
          format: int32
    openapiPreviewImportDataResp:
      title: PreviewImportDataResp
      type: object
      properties:
        table_previews:
          type: array
          description: The preview results for each target table from the import task
            specification.
          items:
            title: TablePreview
            required:
            - data_preview
            - database_name
            - table_name
            type: object
            properties:
              database_name:
                type: string
                description: The database name of the preview table.
                example: db01
              table_name:
                type: string
                description: The table name of the preview table.
                example: table01
              schema_preview:
                title: TableSchema
                required:
                - column_definitions
                type: object
                properties:
                  column_definitions:
                    type: array
                    description: The column definition for each column in the table.
                    example:
                    - column_name: id
                      column_type: INTEGER
                    - column_name: column01
                      column_type: VARCHAR(255)
                    items:
                      title: ColumnDefinition
                      required:
                      - column_name
                      - column_type
                      type: object
                      properties:
                        column_name:
                          type: string
                          description: The column name.
                          example: column01
                        column_type:
                          type: string
                          description: The column type.
                          example: VARCHAR(255)
                      description: ColumnDefinition is the definition of a column
                        in a table.
                  primary_key_columns:
                    type: array
                    description: The primary key column names for the table. This
                      is optional. The primary key is taken into account when the
                      table is pre-created before an import task is started.
                    example:
                    - id
                    items:
                      type: string
                description: The schema for the preview table.
              data_preview:
                title: TableData
                required:
                - rows
                type: object
                properties:
                  column_names:
                    type: array
                    description: The column names for the following data samples from
                      a table.
                    example:
                    - id
                    - column01
                    items:
                      type: string
                  rows:
                    type: array
                    description: The rows sampled from a table.
                    items:
                      title: TableDataRow
                      required:
                      - columns
                      type: object
                      properties:
                        columns:
                          type: array
                          description: The columns extracted from a table row.
                          example:
                          - "1"
                          - abc
                          items:
                            type: string
                      description: TableDataRow is a single row in a table.
                description: The data sample for the preview table.
            description: TablePreview is the preview result for a single table.
      description: PreviewImportDataResp is the response of the source data preview
        before starting an import task.
    openapiPrivateEndpoint:
      type: object
      properties:
        cloud_provider:
          type: string
          description: |-
            [Output Only] The cloud provider on which the private endpoint service is hosted.
            - `"AWS"`: the Amazon Web Services cloud provider
            - `"GCP"`: the Google Cloud cloud provider
          format: string
          example: AWS
          enum:
          - AWS
          - GCP
        cluster_id:
          type: string
          description: "[Output Only] The ID of the cluster."
          format: uint64
          example: "1"
        cluster_name:
          type: string
          description: "[Output Only] The name of the cluster."
          example: Cluster0
        region_name:
          type: string
          description: "[Output Only] The region where the private endpoint is hosted,\
            \ such as Oregon in AWS."
          example: Oregon
        endpoint_name:
          type: string
          description: "The format of the private endpoint name varies by cloud provider:\
            \ `\"vpce-xxxx\"` for AWS and `\"projects/xxx/regions/xxx/forwardingRules/xxx\"\
            ` for Google Cloud."
          format: string
          example: vpce-01234567890123456
        status:
          type: string
          description: "[Output Only] The status of the private endpoint."
          format: enum
          example: FAILED
          enum:
          - PENDING
          - ACTIVE
          - DELETING
          - FAILED
        message:
          type: string
          description: "[Output Only] The detailed message when the `status` is \"\
            FAILED\"."
          format: enum
          example: The endpoint does not exist.
        service_name:
          type: string
          description: "[Output Only] The service name of the private endpoint."
          format: string
          example: com.amazonaws.vpce.us-west-2.vpce-svc-01234567890123456
        service_status:
          type: string
          description: "[Output Only] The status of the private endpoint service."
          format: enum
          example: ACTIVE
          enum:
          - CREATING
          - ACTIVE
          - DELETING
        id:
          type: string
          description: "[Output Only] The ID of private endpoint. It is used when\
            \ you [deleting the endpoint](#tag/Cluster/operation/DeletePrivateEndpoint)."
          format: uint64
          example: "1"
    openapiPrivateEndpointService:
      type: object
      properties:
        cloud_provider:
          type: string
          description: |-
            The cloud provider on which the private endpoint service is hosted.
            - `"AWS"`: the Amazon Web Services cloud provider
            - `"GCP"`: the Google Cloud cloud provider
          format: string
          example: AWS
          enum:
          - AWS
          - GCP
        name:
          type: string
          description: "The name of the private endpoint service, which is used for\
            \ connection."
          format: string
          example: com.amazonaws.vpce.us-west-2.vpce-svc-01234567890123456
        status:
          type: string
          description: The status of the private endpoint service.
          format: enum
          example: ACTIVE
          enum:
          - CREATING
          - ACTIVE
          - DELETING
        dns_name:
          type: string
          description: The DNS name of the private endpoint service.
          format: string
          example: privatelink-tidb.01234567890.clusters.tidb-cloud.com
        port:
          type: integer
          description: The port of the private endpoint service.
          format: int32
          example: 4000
        az_ids:
          type: array
          description: Availability zones for the private endpoint service. This field
            is only applicable when the `cloud_provider` is `"AWS"`.
          example:
          - usw2-az2
          - usw2-az1
          items:
            type: string
    openapiPrivateEndpointServiceStatus:
      type: string
      enum:
      - CREATING
      - ACTIVE
      - DELETING
    openapiPrivateEndpointStatus:
      type: string
      enum:
      - PENDING
      - ACTIVE
      - DELETING
      - FAILED
    openapiStandardConnection:
      type: object
      properties:
        host:
          type: string
          description: The host of standard connection.
          example: tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
        port:
          maximum: 65535
          minimum: 1024
          type: integer
          description: |-
            The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

            **Limitations**:
            - For a TiDB Serverless cluster, only port `4000` is available.
          format: int32
          example: 4000
          default: 4000
    openapiTableData:
      title: TableData
      required:
      - rows
      type: object
      properties:
        column_names:
          type: array
          description: The column names for the following data samples from a table.
          example:
          - id
          - column01
          items:
            type: string
        rows:
          type: array
          description: The rows sampled from a table.
          items:
            title: TableDataRow
            required:
            - columns
            type: object
            properties:
              columns:
                type: array
                description: The columns extracted from a table row.
                example:
                - "1"
                - abc
                items:
                  type: string
            description: TableDataRow is a single row in a table.
      description: TableData represents some data samples from a table.
    openapiTableDataRow:
      title: TableDataRow
      required:
      - columns
      type: object
      properties:
        columns:
          type: array
          description: The columns extracted from a table row.
          example:
          - "1"
          - abc
          items:
            type: string
      description: TableDataRow is a single row in a table.
    openapiTableDefinition:
      title: TableDefinition
      required:
      - database_name
      - schema
      - table_name
      type: object
      properties:
        database_name:
          type: string
          description: The database name of the table.
          example: db01
        table_name:
          type: string
          description: The table name of the table.
          example: table01
        schema:
          title: TableSchema
          required:
          - column_definitions
          type: object
          properties:
            column_definitions:
              type: array
              description: The column definition for each column in the table.
              example:
              - column_name: id
                column_type: INTEGER
              - column_name: column01
                column_type: VARCHAR(255)
              items:
                title: ColumnDefinition
                required:
                - column_name
                - column_type
                type: object
                properties:
                  column_name:
                    type: string
                    description: The column name.
                    example: column01
                  column_type:
                    type: string
                    description: The column type.
                    example: VARCHAR(255)
                description: ColumnDefinition is the definition of a column in a table.
            primary_key_columns:
              type: array
              description: The primary key column names for the table. This is optional.
                The primary key is taken into account when the table is pre-created
                before an import task is started.
              example:
              - id
              items:
                type: string
          description: The schema for the table.
      description: TableDefinition is the definition of a table so that the table
        can be created with this information.
    openapiTablePreview:
      title: TablePreview
      required:
      - data_preview
      - database_name
      - table_name
      type: object
      properties:
        database_name:
          type: string
          description: The database name of the preview table.
          example: db01
        table_name:
          type: string
          description: The table name of the preview table.
          example: table01
        schema_preview:
          title: TableSchema
          required:
          - column_definitions
          type: object
          properties:
            column_definitions:
              type: array
              description: The column definition for each column in the table.
              example:
              - column_name: id
                column_type: INTEGER
              - column_name: column01
                column_type: VARCHAR(255)
              items:
                title: ColumnDefinition
                required:
                - column_name
                - column_type
                type: object
                properties:
                  column_name:
                    type: string
                    description: The column name.
                    example: column01
                  column_type:
                    type: string
                    description: The column type.
                    example: VARCHAR(255)
                description: ColumnDefinition is the definition of a column in a table.
            primary_key_columns:
              type: array
              description: The primary key column names for the table. This is optional.
                The primary key is taken into account when the table is pre-created
                before an import task is started.
              example:
              - id
              items:
                type: string
          description: The schema for the preview table.
        data_preview:
          title: TableData
          required:
          - rows
          type: object
          properties:
            column_names:
              type: array
              description: The column names for the following data samples from a
                table.
              example:
              - id
              - column01
              items:
                type: string
            rows:
              type: array
              description: The rows sampled from a table.
              items:
                title: TableDataRow
                required:
                - columns
                type: object
                properties:
                  columns:
                    type: array
                    description: The columns extracted from a table row.
                    example:
                    - "1"
                    - abc
                    items:
                      type: string
                description: TableDataRow is a single row in a table.
          description: The data sample for the preview table.
      description: TablePreview is the preview result for a single table.
    openapiTableSchema:
      title: TableSchema
      required:
      - column_definitions
      type: object
      properties:
        column_definitions:
          type: array
          description: The column definition for each column in the table.
          example:
          - column_name: id
            column_type: INTEGER
          - column_name: column01
            column_type: VARCHAR(255)
          items:
            title: ColumnDefinition
            required:
            - column_name
            - column_type
            type: object
            properties:
              column_name:
                type: string
                description: The column name.
                example: column01
              column_type:
                type: string
                description: The column type.
                example: VARCHAR(255)
            description: ColumnDefinition is the definition of a column in a table.
        primary_key_columns:
          type: array
          description: The primary key column names for the table. This is optional.
            The primary key is taken into account when the table is pre-created before
            an import task is started.
          example:
          - id
          items:
            type: string
      description: TableSchema is the schema definition of a single table.
    openapiTiDBComponent:
      required:
      - node_quantity
      - node_size
      type: object
      properties:
        node_size:
          type: string
          description: |-
            The size of the TiDB component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

            **Additional combination rules**:
            - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
            - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
          example: 8C16G
        node_quantity:
          type: integer
          description: |
            The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
          format: int32
          example: 2
    openapiTiDBNodeMap:
      type: object
      properties:
        node_name:
          type: string
          description: The name of a node in the cluster.
          example: tidb-0
        availability_zone:
          type: string
          description: The availability zone of a node in the cluster.
          example: us-west-2a
        node_size:
          type: string
          description: The size of the TiDB component in the cluster.
          example: 8C16G
        vcpu_num:
          type: integer
          description: "The total vCPUs of a node in the cluster. If the `cluster_type`\
            \ is `\"DEVELOPER\"`, `vcpu_num` is always 0."
          format: int32
          example: 8
        ram_bytes:
          type: string
          description: "The RAM size of a node in the cluster. If the `cluster_type`\
            \ is `\"DEVELOPER\"`, `ram_bytes` is always 0."
          format: int64
          example: "17179869184"
        status:
          type: string
          description: The status of a node in the cluster.
          example: NODE_STATUS_AVAILABLE
          enum:
          - NODE_STATUS_AVAILABLE
          - NODE_STATUS_UNAVAILABLE
          - NODE_STATUS_CREATING
          - NODE_STATUS_DELETING
    openapiTiDBProfile:
      type: object
      properties:
        node_size:
          type: string
          description: The size of the TiDB component in the cluster.
          example: 8C16G
        node_quantity_range:
          type: object
          properties:
            min:
              type: integer
              description: The minimum node quantity of the component in the cluster.
              format: int32
            step:
              type: integer
              description: The step of node quantity of the component in the cluster.
              format: int32
          description: The range and step of node quantity of the TiDB component in
            the cluster.
    openapiTiFlashComponent:
      required:
      - node_quantity
      - node_size
      - storage_size_gib
      type: object
      properties:
        node_size:
          type: string
          description: |-
            The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

            **Additional combination rules**:
            - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
            - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
          example: 8C64G
        storage_size_gib:
          type: integer
          description: |
            The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
          format: int32
          example: 1024
        node_quantity:
          type: integer
          description: "The number of nodes in the cluster. You can get the minimum\
            \ and step of a node quantity from the response of [List the cloud providers,\
            \ regions and available specifications](#tag/Cluster/operation/ListProviderRegions)."
          format: int32
          example: 1
    openapiTiFlashNodeMap:
      type: object
      properties:
        node_name:
          type: string
          description: The name of a node in the cluster.
          example: tiflash-0
        availability_zone:
          type: string
          description: The availability zone of a node in the cluster.
          example: us-west-2a
        node_size:
          type: string
          description: The size of the TiFlash component in the cluster.
          example: 8C64G
        vcpu_num:
          type: integer
          description: "The total vCPUs of a node in the cluster. If the `cluster_type`\
            \ is `\"DEVELOPER\"`, `vcpu_num` is always 0."
          format: int32
          example: 8
        ram_bytes:
          type: string
          description: "The RAM size of a node in the cluster. If the `cluster_type`\
            \ is `\"DEVELOPER\"`, `ram_bytes` is always 0."
          format: int64
          example: "68719476736"
        storage_size_gib:
          type: integer
          description: The storage size of a node in the cluster.
          format: int32
          example: 1024
        status:
          type: string
          description: The status of a node in the cluster.
          example: NODE_STATUS_AVAILABLE
          enum:
          - NODE_STATUS_AVAILABLE
          - NODE_STATUS_UNAVAILABLE
          - NODE_STATUS_CREATING
          - NODE_STATUS_DELETING
    openapiTiFlashProfile:
      type: object
      properties:
        node_size:
          type: string
          description: The size of the TiFlash component in the cluster.
          example: 8C64G
        node_quantity_range:
          type: object
          properties:
            min:
              type: integer
              description: The minimum node quantity of the component in the cluster.
              format: int32
            step:
              type: integer
              description: The step of node quantity of the component in the cluster.
              format: int32
          description: The range and step of node quantity of the TiFlash component
            in the cluster.
        storage_size_gib_range:
          type: object
          properties:
            min:
              type: integer
              description: The minimum storage size for each node of the component
                in the cluster.
              format: int32
            max:
              type: integer
              description: The maximum storage size for each node of the component
                in the cluster.
              format: int32
          description: The storage size range for each node of the TiFlash component
            in the cluster.
    openapiTiKVComponent:
      required:
      - node_quantity
      - node_size
      - storage_size_gib
      type: object
      properties:
        node_size:
          type: string
          description: |-
            The size of the TiKV component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

            **Additional combination rules**:
            - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
            - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.
          example: 8C64G
        storage_size_gib:
          type: integer
          description: "The storage size of a node in the cluster. You can get the\
            \ minimum and maximum of storage size from the response of [List the cloud\
            \ providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions)."
          format: int32
          example: 1024
        node_quantity:
          type: integer
          description: |-
            The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

            **Limitations**:
            - The `node_quantity` of TiKV must be a multiple of 3.
          format: int32
          example: 3
    openapiTiKVNodeMap:
      type: object
      properties:
        node_name:
          type: string
          description: The name of a node in the cluster.
          example: tikv-0
        availability_zone:
          type: string
          description: The availability zone of a node in the cluster.
          example: us-west-2a
        node_size:
          type: string
          description: The size of the TiKV component in the cluster.
          example: 8C32G
        vcpu_num:
          type: integer
          description: "The total vCPUs of a node in the cluster. If the `cluster_type`\
            \ is `\"DEVELOPER\"`, `vcpu_num` is always 0."
          format: int32
          example: 8
        ram_bytes:
          type: string
          description: "The RAM size of a node in the cluster. If the `cluster_type`\
            \ is `\"DEVELOPER\"`, `ram_bytes` is always 0."
          format: int64
          example: "68719476736"
        storage_size_gib:
          type: integer
          description: The storage size of a node in the cluster.
          format: int32
          example: 1024
        status:
          type: string
          description: The status of a node in the cluster.
          example: NODE_STATUS_AVAILABLE
          enum:
          - NODE_STATUS_AVAILABLE
          - NODE_STATUS_UNAVAILABLE
          - NODE_STATUS_CREATING
          - NODE_STATUS_DELETING
    openapiTiKVProfile:
      type: object
      properties:
        node_size:
          type: string
          description: The size of the TiKV component in the cluster.
          example: 8C32G
        node_quantity_range:
          type: object
          properties:
            min:
              type: integer
              description: The minimum node quantity of the component in the cluster.
              format: int32
            step:
              type: integer
              description: The step of node quantity of the component in the cluster.
              format: int32
          description: The range and step of node quantity of the TiKV component in
            the cluster.
        storage_size_gib_range:
          type: object
          properties:
            min:
              type: integer
              description: The minimum storage size for each node of the component
                in the cluster.
              format: int32
            max:
              type: integer
              description: The maximum storage size for each node of the component
                in the cluster.
              format: int32
          description: The storage size range for each node of the TiKV component
            in the cluster.
    openapiUpdateClusterComponents:
      type: object
      properties:
        tidb:
          type: object
          properties:
            node_size:
              type: string
              description: |-
                The size of the TiDB component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                **Additional combination rules**:
                - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.

                **Limitations**:
                - See [Change node size](https://docs.pingcap.com/tidbcloud/scale-tidb-cluster#change-node-size).
              example: 16C32G
            node_quantity:
              type: integer
              description: "The number of nodes in the cluster. You can get the minimum\
                \ and step of a node quantity from the response of [List the cloud\
                \ providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions)."
              format: int32
              example: 3
          description: The TiDB component of the cluster.
        tikv:
          type: object
          properties:
            node_size:
              type: string
              description: |-
                The size of the TiKV component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                **Additional combination rules**:
                - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.

                **Limitations**:
                - See [Change node size](https://docs.pingcap.com/tidbcloud/scale-tidb-cluster#change-node-size).
              example: 16C64G
            storage_size_gib:
              type: integer
              description: |-
                The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                **Limitations**:
                - You cannot decrease storage size for TiKV.
                - If your TiDB cluster is hosted by AWS, after changing the storage size of TiKV, you must wait at least six hours before you can change it again.
              format: int32
              example: 2048
            node_quantity:
              type: integer
              description: |-
                The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                **Limitations**:
                - The `node_quantity` of TiKV must be a multiple of 3.
              format: int32
              example: 6
          description: The TiKV component of the cluster.
        tiflash:
          type: object
          properties:
            node_size:
              type: string
              description: |-
                The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                **Additional combination rules**:
                - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.

                **Limitations**:
                - See [Change node size](https://docs.pingcap.com/tidbcloud/scale-tidb-cluster#change-node-size).
              example: 16C128G
            storage_size_gib:
              type: integer
              description: |-
                The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                **Limitations**:
                - You cannot decrease storage size for TiFlash.
                - If your TiDB cluster is hosted by AWS, after changing the storage size of TiFlash, you must wait at least six hours before you can change it again.
              format: int32
              example: 2048
            node_quantity:
              type: integer
              description: "The number of nodes in the cluster. You can get the minimum\
                \ and step of a node quantity from the response of [List the cloud\
                \ providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions)."
              format: int32
              example: 2
          description: |-
            The TiFlash component of the cluster.

            If you want to add TiFlash nodes to a cluster that does not have one before (increase the node_quantity of `"TIFLASH"` from 0), you must specify the `node_size`, `storage_size_gib` and `node_quantity` of TiFlash nodes.
    openapiUpdateClusterConfig:
      title: UpdateClusterComponents
      type: object
      properties:
        components:
          type: object
          properties:
            tidb:
              type: object
              properties:
                node_size:
                  type: string
                  description: |-
                    The size of the TiDB component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Additional combination rules**:
                    - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                    - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.

                    **Limitations**:
                    - See [Change node size](https://docs.pingcap.com/tidbcloud/scale-tidb-cluster#change-node-size).
                  example: 16C32G
                node_quantity:
                  type: integer
                  description: "The number of nodes in the cluster. You can get the\
                    \ minimum and step of a node quantity from the response of [List\
                    \ the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions)."
                  format: int32
                  example: 3
              description: The TiDB component of the cluster.
            tikv:
              type: object
              properties:
                node_size:
                  type: string
                  description: |-
                    The size of the TiKV component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Additional combination rules**:
                    - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                    - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.

                    **Limitations**:
                    - See [Change node size](https://docs.pingcap.com/tidbcloud/scale-tidb-cluster#change-node-size).
                  example: 16C64G
                storage_size_gib:
                  type: integer
                  description: |-
                    The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Limitations**:
                    - You cannot decrease storage size for TiKV.
                    - If your TiDB cluster is hosted by AWS, after changing the storage size of TiKV, you must wait at least six hours before you can change it again.
                  format: int32
                  example: 2048
                node_quantity:
                  type: integer
                  description: |-
                    The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Limitations**:
                    - The `node_quantity` of TiKV must be a multiple of 3.
                  format: int32
                  example: 6
              description: The TiKV component of the cluster.
            tiflash:
              type: object
              properties:
                node_size:
                  type: string
                  description: |-
                    The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Additional combination rules**:
                    - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
                    - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.

                    **Limitations**:
                    - See [Change node size](https://docs.pingcap.com/tidbcloud/scale-tidb-cluster#change-node-size).
                  example: 16C128G
                storage_size_gib:
                  type: integer
                  description: |-
                    The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Limitations**:
                    - You cannot decrease storage size for TiFlash.
                    - If your TiDB cluster is hosted by AWS, after changing the storage size of TiFlash, you must wait at least six hours before you can change it again.
                  format: int32
                  example: 2048
                node_quantity:
                  type: integer
                  description: "The number of nodes in the cluster. You can get the\
                    \ minimum and step of a node quantity from the response of [List\
                    \ the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions)."
                  format: int32
                  example: 2
              description: |-
                The TiFlash component of the cluster.

                If you want to add TiFlash nodes to a cluster that does not have one before (increase the node_quantity of `"TIFLASH"` from 0), you must specify the `node_size`, `storage_size_gib` and `node_quantity` of TiFlash nodes.
          description: The components of the cluster.
        paused:
          type: boolean
          description: |-
            Flag that indicates whether the cluster is paused. `true` means to pause the cluster, and `false` means to resume the cluster. For more details, refer to [Pause or Resume a TiDB Cluster](https://docs.pingcap.com/tidbcloud/pause-or-resume-tidb-cluster).

            **Limitations:**
             - The cluster can be paused only when the `cluster_status` is `"AVAILABLE"`.
            - The cluster can be resumed only when the `cluster_status` is `"PAUSED"`.
      description: UpdateClusterComponents is the request for updating cluster components.
    openapiUpdateTiDBComponent:
      type: object
      properties:
        node_size:
          type: string
          description: |-
            The size of the TiDB component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

            **Additional combination rules**:
            - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
            - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.

            **Limitations**:
            - See [Change node size](https://docs.pingcap.com/tidbcloud/scale-tidb-cluster#change-node-size).
          example: 16C32G
        node_quantity:
          type: integer
          description: "The number of nodes in the cluster. You can get the minimum\
            \ and step of a node quantity from the response of [List the cloud providers,\
            \ regions and available specifications](#tag/Cluster/operation/ListProviderRegions)."
          format: int32
          example: 3
    openapiUpdateTiFlashComponent:
      type: object
      properties:
        node_size:
          type: string
          description: |-
            The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

            **Additional combination rules**:
            - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
            - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.

            **Limitations**:
            - See [Change node size](https://docs.pingcap.com/tidbcloud/scale-tidb-cluster#change-node-size).
          example: 16C128G
        storage_size_gib:
          type: integer
          description: |-
            The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

            **Limitations**:
            - You cannot decrease storage size for TiFlash.
            - If your TiDB cluster is hosted by AWS, after changing the storage size of TiFlash, you must wait at least six hours before you can change it again.
          format: int32
          example: 2048
        node_quantity:
          type: integer
          description: "The number of nodes in the cluster. You can get the minimum\
            \ and step of a node quantity from the response of [List the cloud providers,\
            \ regions and available specifications](#tag/Cluster/operation/ListProviderRegions)."
          format: int32
          example: 2
    openapiUpdateTiKVComponent:
      type: object
      properties:
        node_size:
          type: string
          description: |-
            The size of the TiKV component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

            **Additional combination rules**:
            - If the vCPUs of TiDB or TiKV component is 4, then their vCPUs need to be the same.
            - If the vCPUs of TiDB or TiKV component is 4, then the cluster does not support TiFlash.

            **Limitations**:
            - See [Change node size](https://docs.pingcap.com/tidbcloud/scale-tidb-cluster#change-node-size).
          example: 16C64G
        storage_size_gib:
          type: integer
          description: |-
            The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

            **Limitations**:
            - You cannot decrease storage size for TiKV.
            - If your TiDB cluster is hosted by AWS, after changing the storage size of TiKV, you must wait at least six hours before you can change it again.
          format: int32
          example: 2048
        node_quantity:
          type: integer
          description: |-
            The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

            **Limitations**:
            - The `node_quantity` of TiKV must be a multiple of 3.
          format: int32
          example: 6
    openapiUploadLocalFileResp:
      title: UploadLocalFileResp
      required:
      - upload_stub_id
      type: object
      properties:
        upload_stub_id:
          type: string
          description: "The stub ID for the uploaded file. You can use this stub ID\
            \ to [create an import task](#tag/Import/operation/CreateImportTask)."
          format: uint64
          example: "123"
      description: UploadLocalFileResp is the response to upload an import task.
    openapiVPCPeeringConnection:
      type: object
      properties:
        host:
          type: string
          description: The host of VPC peering connection.
          example: private-tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
        port:
          maximum: 65535
          minimum: 1024
          type: integer
          description: |-
            The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

            **Limitations**:
            - For a TiDB Serverless cluster, only port `4000` is available.
          format: int32
          example: 4000
          default: 4000
    protobufAny:
      type: object
      properties:
        '@type':
          type: string
      additionalProperties:
        type: object
x-tagGroups:
- name: Endpoints
  tags:
  - Project
  - Cluster
  - Backup
  - Import
  - Restore
x-original-swagger-version: "2.0"
